{
  "version": 3,
  "sources": ["../node_modules/cm-chess/node_modules/cm-pgn/src/Header.js", "../node_modules/cm-chess/node_modules/cm-pgn/src/parser/pgnParser.js", "../node_modules/chess.mjs/src/Chess.js", "../node_modules/cm-chess/node_modules/cm-pgn/src/History.js", "../node_modules/cm-chess/node_modules/cm-pgn/src/Pgn.js", "../node_modules/cm-chess/src/Chess.js", "../node_modules/cm-chessboard/src/model/Position.js", "../node_modules/cm-chessboard/src/model/ChessboardState.js", "../node_modules/cm-chessboard/src/lib/Svg.js", "../node_modules/cm-chessboard/src/model/Extension.js", "../node_modules/cm-chessboard/src/lib/Utils.js", "../node_modules/cm-chessboard/src/view/PositionAnimationsQueue.js", "../node_modules/cm-chessboard/src/view/VisualMoveInput.js", "../node_modules/cm-chessboard/src/view/ChessboardView.js", "../node_modules/cm-chessboard/src/Chessboard.js", "../node_modules/cm-web-modules/src/i18n/I18n.js", "../node_modules/cm-web-modules/src/message-broker/MessageBroker.js", "../node_modules/cm-chessboard/src/extensions/accessibility/I18n.js", "../node_modules/cm-web-modules/src/observe/Observe.js", "../node_modules/chess-console/src/ChessConsoleState.js", "../node_modules/cm-web-modules/src/utils/DomUtils.js", "../node_modules/chess-console/src/ChessConsole.js", "../node_modules/chess-console/src/ChessConsolePlayer.js", "../node_modules/chess-console/src/players/LocalPlayer.js", "../node_modules/cm-chessboard/src/extensions/markers/Markers.js", "../node_modules/cm-web-modules/src/utils/CoreUtils.js", "../node_modules/cm-chessboard/src/extensions/promotion-dialog/PromotionDialog.js", "../node_modules/cm-chessboard/src/extensions/accessibility/Accessibility.js", "../node_modules/cm-chessboard/src/extensions/auto-border-none/AutoBorderNone.js", "../node_modules/chess-console/src/components/Board.js", "../node_modules/chess-console/src/components/GameStateOutput.js", "../node_modules/chess-console/src/tools/ChessRender.js", "../node_modules/chess-console/src/components/History.js", "../node_modules/chess-console/src/components/CapturedPieces.js", "../node_modules/chess-console/src/components/HistoryControl.js", "../node_modules/cm-web-modules/src/app/Component.js", "../node_modules/chess-console/src/components/Persistence.js", "../node_modules/cm-web-modules/src/audio/Audio.js", "../node_modules/cm-web-modules/src/audio/Sample.js", "../node_modules/cm-web-modules/src/audio/AudioSprite.js", "../node_modules/chess-console/src/components/Sound.js", "../node_modules/bootstrap-show-modal/src/ShowModal.js", "../node_modules/chess-console/src/components/GameControl/NewGameDialog.js", "../node_modules/chess-console/src/components/GameControl/GameControl.js", "../node_modules/cm-engine-runner/src/EngineRunner.js", "../node_modules/cm-engine-runner/src/StockfishRunner.js", "../src/StockfishNewGameDialog.js", "../src/StockfishGameControl.js", "../node_modules/cm-polyglot/lib/stakelbase/Book.js", "../node_modules/cm-polyglot/lib/stakelbase/KeyGenerator.js", "../node_modules/cm-polyglot/src/Polyglot.js", "../node_modules/cm-engine-runner/src/PolyglotRunner.js", "../src/StockfishPlayer.js", "../src/StockfishStateView.js"],
  "sourcesContent": ["/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nexport const TAGS = {\n\n    // Standard \"Seven Tag Roster\"\n    Event: \"Event\", // the name of the tournament or match event\n    Site: \"Site\", // the location of the event\n    Date: \"Date\", // the starting date of the game (format: YYYY.MM.TT)\n    Round: \"Round\", // the playing round ordinal of the game\n    White: \"White\", // the player of the white pieces (last name, pre name)\n    Black: \"Black\", // the player of the black pieces (last name, pre name)\n    Result: \"Result\", // the result of the game (1-0, 1/2-1/2, 0-1, *)\n\n    // Optional (http://www.saremba.de/chessgml/standards/pgn/pgn-complete.htm#c9)\n    //      Player related information\n    WhiteTitle: \"WhiteTitle\", BlackTitle: \"BlackTitle\", // These use string values such as \"FM\", \"IM\", and \"GM\"; these tags are used only for the standard abbreviations for FIDE titles. A value of \"-\" is used for an untitled player.\n    WhiteElo: \"WhiteElo\", BlackElo: \"BlackElo\", // These tags use integer values; these are used for FIDE Elo ratings. A value of \"-\" is used for an unrated player.\n    WhiteUSCF: \"WhiteUSCF\", BlackUSCF: \"BlackUSCF\", // These tags use integer values; these are used for USCF (United States Chess Federation) ratings. Similar tag names can be constructed for other rating agencies.\n    WhiteNA: \"WhiteNA\", BlackNA: \"BlackNA:\", // These tags use string values; these are the e-mail or network addresses of the players. A value of \"-\" is used for a player without an electronic address.\n    WhiteType: \"WhiteType\", BlackType: \"BlackType\", // These tags use string values; these describe the player types. The value \"human\" should be used for a person while the value \"program\" should be used for algorithmic (computer) players.\n    //      Event related information\n    EventDate: \"EventDate\", // This uses a date value, similar to the Date tag field, that gives the starting date of the Event.\n    EventSponsor: \"EventSponsor\", // This uses a string value giving the name of the sponsor of the event.\n    Section: \"Section\", // This uses a string; this is used for the playing section of a tournament (e.g., \"Open\" or \"Reserve\").\n    Stage: \"Stage\", // This uses a string; this is used for the stage of a multistage event (e.g., \"Preliminary\" or \"Semifinal\").\n    Board: \"Board\", // This uses an integer; this identifies the board number in a team event and also in a simultaneous exhibition.\n    //      Opening information (locale specific)\n    Opening: \"Opening\", // This uses a string; this is used for the traditional opening name. This will vary by locale. This tag pair is associated with the use of the EPD opcode \"v0\" described in a later section of this document.\n    ECO: \"ECO\", // This uses a string of either the form \"XDD\" or the form \"XDD/DD\" where the \"X\" is a letter from \"A\" to \"E\" and the \"D\" positions are digits.\n    //      Time and date related information\n    Time: \"Time\", // Time the game started, in \"HH:MM:SS\" format, in local clock time.\n    UTCTime: \"UTCTime\", // This tag is similar to the Time tag except that the time is given according to the Universal Coordinated Time standard.\n    UTCDate: \"UTCDate\", // This tag is similar to the Date tag except that the date is given according to the Universal Coordinated Time standard.\n    //      Time control\n    TimeControl: \"TimeControl\", // 40/7200:3600 (moves per seconds: sudden death seconds)\n    //      Alternative starting positions\n    SetUp: \"SetUp\", // \"0\": position is start position, \"1\": tag FEN defines the position\n    FEN: \"FEN\", //  Alternative start position, tag SetUp has to be set to \"1\"\n    //      Game conclusion\n    Termination: \"Termination\", // Gives more details about the termination of the game. It may be \"abandoned\", \"adjudication\" (result determined by third-party adjudication), \"death\", \"emergency\", \"normal\", \"rules infraction\", \"time forfeit\", or \"unterminated\".\n    //      Miscellaneous\n    Annotator: \"Annotator\", // The person providing notes to the game.\n    Mode: \"Mode\", // \"OTB\" (over-the-board) \"ICS\" (Internet Chess Server)\n    PlyCount: \"PlyCount\", // String value denoting total number of half-moves played.\n\n}\n\nexport class Header {\n\n    constructor(headerString = \"\") {\n        this.clear()\n        const rows = headerString.match(/\\[([^\\]]+)]/g)\n        if (rows && rows.length > 0) {\n            for (let i = 0; i < rows.length; i++) {\n                let tag = rows[i].match(/\\[(\\w+)\\s+\"([^\"]+)\"/)\n                if (tag) {\n                    this.tags[tag[1]] = tag[2]\n                }\n            }\n        }\n    }\n\n    clear() {\n        this.tags = {}\n    }\n\n    render() {\n        let rendered = \"\"\n        for (const tag in this.tags) {\n            rendered += `[${tag} \"${this.tags[tag]}\"]\\n`\n        }\n        return rendered\n    }\n\n}\n\n", "/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { pgn: peg$parsepgn },\n      peg$startRuleFunction  = peg$parsepgn,\n\n      peg$c0 = function(pw, all) { var arr = (all ? all : []); arr.unshift(pw);return arr; },\n      peg$c1 = function(pb, all) { var arr = (all ? all : []); arr.unshift(pb); return arr; },\n      peg$c2 = function() { return [[]]; },\n      peg$c3 = function(pw) { return pw; },\n      peg$c4 = function(pb) { return pb; },\n      peg$c5 = function(cm, mn, cb, hm, nag, ca, vari, all) { var arr = (all ? all : []);\n            var move = {}; move.turn = 'w'; move.moveNumber = mn;\n            move.notation = hm; move.commentBefore = cb; move.commentAfter = ca; move.commentMove = cm;\n            move.variations = (vari ? vari : []); move.nag = (nag ? nag : null); arr.unshift(move); return arr; },\n      peg$c6 = function(cm, me, cb, hm, nag, ca, vari, all) { var arr = (all ? all : []);\n            var move = {}; move.turn = 'b'; move.moveNumber = me;\n            move.notation = hm; move.commentBefore = cb; move.commentAfter = ca;\n            move.variations = (vari ? vari : []); arr.unshift(move); move.nag = (nag ? nag : null); return arr; },\n      peg$c7 = \"1:0\",\n      peg$c8 = peg$literalExpectation(\"1:0\", false),\n      peg$c9 = function() { return [\"1:0\"]; },\n      peg$c10 = \"0:1\",\n      peg$c11 = peg$literalExpectation(\"0:1\", false),\n      peg$c12 = function() { return [\"0:1\"]; },\n      peg$c13 = \"1-0\",\n      peg$c14 = peg$literalExpectation(\"1-0\", false),\n      peg$c15 = function() { return [\"1-0\"]; },\n      peg$c16 = \"0-1\",\n      peg$c17 = peg$literalExpectation(\"0-1\", false),\n      peg$c18 = function() { return [\"0-1\"]; },\n      peg$c19 = \"1/2-1/2\",\n      peg$c20 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c21 = function() { return [\"1/2-1/2\"]; },\n      peg$c22 = \"*\",\n      peg$c23 = peg$literalExpectation(\"*\", false),\n      peg$c24 = function() { return [\"*\"]; },\n      peg$c25 = /^[^}]/,\n      peg$c26 = peg$classExpectation([\"}\"], true, false),\n      peg$c27 = function(cm) { return cm.join(\"\").trim(); },\n      peg$c28 = \"{\",\n      peg$c29 = peg$literalExpectation(\"{\", false),\n      peg$c30 = \"}\",\n      peg$c31 = peg$literalExpectation(\"}\", false),\n      peg$c32 = function(vari, all, me) { var arr = (all ? all : []); arr.unshift(vari); return arr; },\n      peg$c33 = function(vari, all) { var arr = (all ? all : []); arr.unshift(vari); return arr; },\n      peg$c34 = \"(\",\n      peg$c35 = peg$literalExpectation(\"(\", false),\n      peg$c36 = \")\",\n      peg$c37 = peg$literalExpectation(\")\", false),\n      peg$c38 = \".\",\n      peg$c39 = peg$literalExpectation(\".\", false),\n      peg$c40 = function(num) { return num; },\n      peg$c41 = peg$otherExpectation(\"integer\"),\n      peg$c42 = /^[0-9]/,\n      peg$c43 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c44 = function(digits) { return makeInteger(digits); },\n      peg$c45 = \" \",\n      peg$c46 = peg$literalExpectation(\" \", false),\n      peg$c47 = function() { return '';},\n      peg$c48 = function(fig, disc, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.disc =  (disc ? disc : null); hm.strike = (str ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.promotion = pr; hm.notation = (fig ? fig : \"\") + (disc ? disc : \"\") + (str ? str : \"\") + col + row + (pr ? pr : \"\") + (ch ? ch : \"\"); return hm; },\n      peg$c49 = function(fig, cols, rows, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.strike = (str =='x' ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.notation = (fig && (fig!=='P') ? fig : \"\") + cols + rows + (str=='x' ? str : \"-\") + col  + row + (pr ? pr : \"\") + (ch ? ch : \"\"); hm.promotion = pr; return hm; },\n      peg$c50 = function(fig, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.strike = (str ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.notation = (fig ? fig : \"\") + (str ? str : \"\") + col  + row + (pr ? pr : \"\") + (ch ? ch : \"\"); hm.promotion = pr; return hm; },\n      peg$c51 = \"O-O-O\",\n      peg$c52 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c53 = function(ch) { var hm = {}; hm.notation = 'O-O-O'+ (ch ? ch : \"\"); hm.check = (ch ? ch : null); return  hm; },\n      peg$c54 = \"O-O\",\n      peg$c55 = peg$literalExpectation(\"O-O\", false),\n      peg$c56 = function(ch) { var hm = {}; hm.notation = 'O-O'+ (ch ? ch : \"\"); hm.check = (ch ? ch : null); return  hm; },\n      peg$c57 = \"+-\",\n      peg$c58 = peg$literalExpectation(\"+-\", false),\n      peg$c59 = \"+\",\n      peg$c60 = peg$literalExpectation(\"+\", false),\n      peg$c61 = function(ch) { return ch[1]; },\n      peg$c62 = \"$$$\",\n      peg$c63 = peg$literalExpectation(\"$$$\", false),\n      peg$c64 = \"#\",\n      peg$c65 = peg$literalExpectation(\"#\", false),\n      peg$c66 = \"=\",\n      peg$c67 = peg$literalExpectation(\"=\", false),\n      peg$c68 = function(f) { return '=' + f; },\n      peg$c69 = function(nag, nags) { var arr = (nags ? nags : []); arr.unshift(nag); return arr; },\n      peg$c70 = \"$\",\n      peg$c71 = peg$literalExpectation(\"$\", false),\n      peg$c72 = function(num) { return '$' + num; },\n      peg$c73 = \"!!\",\n      peg$c74 = peg$literalExpectation(\"!!\", false),\n      peg$c75 = function() { return '$3'; },\n      peg$c76 = \"??\",\n      peg$c77 = peg$literalExpectation(\"??\", false),\n      peg$c78 = function() { return '$4'; },\n      peg$c79 = \"!?\",\n      peg$c80 = peg$literalExpectation(\"!?\", false),\n      peg$c81 = function() { return '$5'; },\n      peg$c82 = \"?!\",\n      peg$c83 = peg$literalExpectation(\"?!\", false),\n      peg$c84 = function() { return '$6'; },\n      peg$c85 = \"!\",\n      peg$c86 = peg$literalExpectation(\"!\", false),\n      peg$c87 = function() { return '$1'; },\n      peg$c88 = \"?\",\n      peg$c89 = peg$literalExpectation(\"?\", false),\n      peg$c90 = function() { return '$2'; },\n      peg$c91 = \"\\u203C\",\n      peg$c92 = peg$literalExpectation(\"\\u203C\", false),\n      peg$c93 = \"\\u2047\",\n      peg$c94 = peg$literalExpectation(\"\\u2047\", false),\n      peg$c95 = \"\\u2049\",\n      peg$c96 = peg$literalExpectation(\"\\u2049\", false),\n      peg$c97 = \"\\u2048\",\n      peg$c98 = peg$literalExpectation(\"\\u2048\", false),\n      peg$c99 = \"\\u25A1\",\n      peg$c100 = peg$literalExpectation(\"\\u25A1\", false),\n      peg$c101 = function() { return '$7'; },\n      peg$c102 = function() { return '$10'; },\n      peg$c103 = \"\\u221E\",\n      peg$c104 = peg$literalExpectation(\"\\u221E\", false),\n      peg$c105 = function() { return '$13'; },\n      peg$c106 = \"\\u2A72\",\n      peg$c107 = peg$literalExpectation(\"\\u2A72\", false),\n      peg$c108 = function() { return '$14'; },\n      peg$c109 = \"\\u2A71\",\n      peg$c110 = peg$literalExpectation(\"\\u2A71\", false),\n      peg$c111 = function() { return '$15';},\n      peg$c112 = \"\\xB1\",\n      peg$c113 = peg$literalExpectation(\"\\xB1\", false),\n      peg$c114 = function() { return '$16';},\n      peg$c115 = \"\\u2213\",\n      peg$c116 = peg$literalExpectation(\"\\u2213\", false),\n      peg$c117 = function() { return '$17';},\n      peg$c118 = function() { return '$18';},\n      peg$c119 = \"-+\",\n      peg$c120 = peg$literalExpectation(\"-+\", false),\n      peg$c121 = function() { return '$19';},\n      peg$c122 = \"\\u2A00\",\n      peg$c123 = peg$literalExpectation(\"\\u2A00\", false),\n      peg$c124 = function() { return '$22'; },\n      peg$c125 = \"\\u27F3\",\n      peg$c126 = peg$literalExpectation(\"\\u27F3\", false),\n      peg$c127 = function() { return '$32'; },\n      peg$c128 = \"\\u2192\",\n      peg$c129 = peg$literalExpectation(\"\\u2192\", false),\n      peg$c130 = function() { return '$36'; },\n      peg$c131 = \"\\u2191\",\n      peg$c132 = peg$literalExpectation(\"\\u2191\", false),\n      peg$c133 = function() { return '$40'; },\n      peg$c134 = \"\\u21C6\",\n      peg$c135 = peg$literalExpectation(\"\\u21C6\", false),\n      peg$c136 = function() { return '$132'; },\n      peg$c137 = \"D\",\n      peg$c138 = peg$literalExpectation(\"D\", false),\n      peg$c139 = function() { return '$220'; },\n      peg$c140 = /^[RNBQKP]/,\n      peg$c141 = peg$classExpectation([\"R\", \"N\", \"B\", \"Q\", \"K\", \"P\"], false, false),\n      peg$c142 = /^[a-h]/,\n      peg$c143 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c144 = /^[1-8]/,\n      peg$c145 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c146 = \"x\",\n      peg$c147 = peg$literalExpectation(\"x\", false),\n      peg$c148 = \"-\",\n      peg$c149 = peg$literalExpectation(\"-\", false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepgn() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnStartWhite();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnBlack();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsepgnStartBlack();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepgnWhite();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsewhiteSpace();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2();\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepgnStartWhite() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnWhite();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepgnStartBlack() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnBlack();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c4(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepgnWhite() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    s1 = peg$parsewhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsewhiteSpace();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemoveNumber();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsewhiteSpace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecomment();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsewhiteSpace();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsehalfMove();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsewhiteSpace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsenags();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsewhiteSpace();\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsecomment();\n                          if (s12 === peg$FAILED) {\n                            s12 = null;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parsewhiteSpace();\n                            if (s13 === peg$FAILED) {\n                              s13 = null;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parsevariationWhite();\n                              if (s14 === peg$FAILED) {\n                                s14 = null;\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsepgnBlack();\n                                if (s15 === peg$FAILED) {\n                                  s15 = null;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c5(s2, s4, s6, s8, s10, s12, s14, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseendGame();\n    }\n\n    return s0;\n  }\n\n  function peg$parsepgnBlack() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    s1 = peg$parsewhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsewhiteSpace();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemoveEllipse();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsewhiteSpace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecomment();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsewhiteSpace();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsehalfMove();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsewhiteSpace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsenags();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsewhiteSpace();\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsecomment();\n                          if (s12 === peg$FAILED) {\n                            s12 = null;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parsewhiteSpace();\n                            if (s13 === peg$FAILED) {\n                              s13 = null;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parsevariationBlack();\n                              if (s14 === peg$FAILED) {\n                                s14 = null;\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsepgnWhite();\n                                if (s15 === peg$FAILED) {\n                                  s15 = null;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c6(s2, s4, s6, s8, s10, s12, s14, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseendGame();\n    }\n\n    return s0;\n  }\n\n  function peg$parseendGame() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c9();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c10) {\n        s1 = peg$c10;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 3) === peg$c13) {\n          s1 = peg$c13;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c15();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 3) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 7) === peg$c19) {\n              s1 = peg$c19;\n              peg$currPos += 7;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c21();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s1 = peg$c22;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecl();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c25.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c25.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecr();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c27(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecl() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s0 = peg$c28;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecr() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 125) {\n      s0 = peg$c30;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariationWhite() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepl();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnWhite();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepr();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsevariationWhite();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsewhiteSpace();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsemoveEllipse();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c32(s2, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariationBlack() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepl();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnStartBlack();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepr();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsevariationBlack();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33(s2, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepl() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s0 = peg$c34;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepr() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c36;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c38;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c42.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c44(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhiteSpace() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c45;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s2 = peg$c45;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c47();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsehalfMove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefigure();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parsecheckdisc();\n      peg$silentFails--;\n      if (s3 !== peg$FAILED) {\n        peg$currPos = s2;\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsediscriminator();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestrike();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsecolumn();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parserow();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsepromotion();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsecheck();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c48(s1, s3, s4, s5, s6, s7, s8);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsefigure();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolumn();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parserow();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsestrikeOrDash();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsecolumn();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parserow();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsepromotion();\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsecheck();\n                    if (s8 === peg$FAILED) {\n                      s8 = null;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c49(s1, s2, s3, s4, s5, s6, s7, s8);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsefigure();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsestrike();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsecolumn();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parserow();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsepromotion();\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsecheck();\n                  if (s6 === peg$FAILED) {\n                    s6 = null;\n                  }\n                  if (s6 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c50(s1, s2, s3, s4, s5, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s1 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsecheck();\n            if (s2 === peg$FAILED) {\n              s2 = null;\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c53(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c54) {\n              s1 = peg$c54;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c55); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsecheck();\n              if (s2 === peg$FAILED) {\n                s2 = null;\n              }\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c56(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c57) {\n      s3 = peg$c57;\n      peg$currPos += 2;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n    peg$silentFails--;\n    if (s3 === peg$FAILED) {\n      s2 = void 0;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c59;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c61(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 3) === peg$c62) {\n        s3 = peg$c62;\n        peg$currPos += 3;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s3 = peg$c64;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c61(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c66;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefigure();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c68(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenags() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenag();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsewhiteSpace();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenags();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c69(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c70;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinteger();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c72(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c73) {\n        s1 = peg$c73;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c76) {\n          s1 = peg$c76;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c77); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c78();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c79) {\n            s1 = peg$c79;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c80); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c81();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c82) {\n              s1 = peg$c82;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c83); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c84();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 33) {\n                s1 = peg$c85;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c86); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s1 = peg$c88;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c89); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c90();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 8252) {\n                    s1 = peg$c91;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c75();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 8263) {\n                      s1 = peg$c93;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c78();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 8265) {\n                        s1 = peg$c95;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c81();\n                      }\n                      s0 = s1;\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 8264) {\n                          s1 = peg$c97;\n                          peg$currPos++;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c98); }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c84();\n                        }\n                        s0 = s1;\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 9633) {\n                            s1 = peg$c99;\n                            peg$currPos++;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c100); }\n                          }\n                          if (s1 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c101();\n                          }\n                          s0 = s1;\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 61) {\n                              s1 = peg$c66;\n                              peg$currPos++;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                            }\n                            if (s1 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c102();\n                            }\n                            s0 = s1;\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 8734) {\n                                s1 = peg$c103;\n                                peg$currPos++;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c104); }\n                              }\n                              if (s1 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c105();\n                              }\n                              s0 = s1;\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 10866) {\n                                  s1 = peg$c106;\n                                  peg$currPos++;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c107); }\n                                }\n                                if (s1 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c108();\n                                }\n                                s0 = s1;\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$currPos;\n                                  if (input.charCodeAt(peg$currPos) === 10865) {\n                                    s1 = peg$c109;\n                                    peg$currPos++;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c110); }\n                                  }\n                                  if (s1 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c111();\n                                  }\n                                  s0 = s1;\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$currPos;\n                                    if (input.charCodeAt(peg$currPos) === 177) {\n                                      s1 = peg$c112;\n                                      peg$currPos++;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c113); }\n                                    }\n                                    if (s1 !== peg$FAILED) {\n                                      peg$savedPos = s0;\n                                      s1 = peg$c114();\n                                    }\n                                    s0 = s1;\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$currPos;\n                                      if (input.charCodeAt(peg$currPos) === 8723) {\n                                        s1 = peg$c115;\n                                        peg$currPos++;\n                                      } else {\n                                        s1 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c116); }\n                                      }\n                                      if (s1 !== peg$FAILED) {\n                                        peg$savedPos = s0;\n                                        s1 = peg$c117();\n                                      }\n                                      s0 = s1;\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$currPos;\n                                        if (input.substr(peg$currPos, 2) === peg$c57) {\n                                          s1 = peg$c57;\n                                          peg$currPos += 2;\n                                        } else {\n                                          s1 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                        }\n                                        if (s1 !== peg$FAILED) {\n                                          peg$savedPos = s0;\n                                          s1 = peg$c118();\n                                        }\n                                        s0 = s1;\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$currPos;\n                                          if (input.substr(peg$currPos, 2) === peg$c119) {\n                                            s1 = peg$c119;\n                                            peg$currPos += 2;\n                                          } else {\n                                            s1 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c120); }\n                                          }\n                                          if (s1 !== peg$FAILED) {\n                                            peg$savedPos = s0;\n                                            s1 = peg$c121();\n                                          }\n                                          s0 = s1;\n                                          if (s0 === peg$FAILED) {\n                                            s0 = peg$currPos;\n                                            if (input.charCodeAt(peg$currPos) === 10752) {\n                                              s1 = peg$c122;\n                                              peg$currPos++;\n                                            } else {\n                                              s1 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c123); }\n                                            }\n                                            if (s1 !== peg$FAILED) {\n                                              peg$savedPos = s0;\n                                              s1 = peg$c124();\n                                            }\n                                            s0 = s1;\n                                            if (s0 === peg$FAILED) {\n                                              s0 = peg$currPos;\n                                              if (input.charCodeAt(peg$currPos) === 10227) {\n                                                s1 = peg$c125;\n                                                peg$currPos++;\n                                              } else {\n                                                s1 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c126); }\n                                              }\n                                              if (s1 !== peg$FAILED) {\n                                                peg$savedPos = s0;\n                                                s1 = peg$c127();\n                                              }\n                                              s0 = s1;\n                                              if (s0 === peg$FAILED) {\n                                                s0 = peg$currPos;\n                                                if (input.charCodeAt(peg$currPos) === 8594) {\n                                                  s1 = peg$c128;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c129); }\n                                                }\n                                                if (s1 !== peg$FAILED) {\n                                                  peg$savedPos = s0;\n                                                  s1 = peg$c130();\n                                                }\n                                                s0 = s1;\n                                                if (s0 === peg$FAILED) {\n                                                  s0 = peg$currPos;\n                                                  if (input.charCodeAt(peg$currPos) === 8593) {\n                                                    s1 = peg$c131;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c132); }\n                                                  }\n                                                  if (s1 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c133();\n                                                  }\n                                                  s0 = s1;\n                                                  if (s0 === peg$FAILED) {\n                                                    s0 = peg$currPos;\n                                                    if (input.charCodeAt(peg$currPos) === 8646) {\n                                                      s1 = peg$c134;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c135); }\n                                                    }\n                                                    if (s1 !== peg$FAILED) {\n                                                      peg$savedPos = s0;\n                                                      s1 = peg$c136();\n                                                    }\n                                                    s0 = s1;\n                                                    if (s0 === peg$FAILED) {\n                                                      s0 = peg$currPos;\n                                                      if (input.charCodeAt(peg$currPos) === 68) {\n                                                        s1 = peg$c137;\n                                                        peg$currPos++;\n                                                      } else {\n                                                        s1 = peg$FAILED;\n                                                        if (peg$silentFails === 0) { peg$fail(peg$c138); }\n                                                      }\n                                                      if (s1 !== peg$FAILED) {\n                                                        peg$savedPos = s0;\n                                                        s1 = peg$c139();\n                                                      }\n                                                      s0 = s1;\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsediscriminator() {\n    var s0;\n\n    s0 = peg$parsecolumn();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parserow();\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckdisc() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsediscriminator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestrike();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecolumn();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parserow();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveEllipse() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c38;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c38;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefigure() {\n    var s0;\n\n    if (peg$c140.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c141); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolumn() {\n    var s0;\n\n    if (peg$c142.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c143); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserow() {\n    var s0;\n\n    if (peg$c144.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c145); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestrike() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s0 = peg$c146;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestrikeOrDash() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s0 = peg$c146;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c148;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c149); }\n      }\n    }\n\n    return s0;\n  }\n\n\n      function makeInteger(o) {\n          return parseInt(o.join(\"\"), 10);\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n/*\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n*/\nexport class pgnParser {\n  static parse(history, options) {\n    return peg$parse(history, options)\n  }\n}", "/*\n * Copyright (c) 2022, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\nconst SYMBOLS = 'pnbrqkPNBRQK'\n\nconst DEFAULT_POSITION =\n    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\nconst TERMINATION_MARKERS = ['1-0', '0-1', '1/2-1/2', '*']\n\nconst PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15],\n}\n\nconst PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1],\n}\n\n// prettier-ignore\nconst ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n    0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n    0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n    0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n    0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n    0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n    0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n    0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n];\n\n// prettier-ignore\nconst RAYS = [\n    17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n    0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n    0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n    0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n    0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n    1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n    0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n    0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n    0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n    0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n];\n\nconst SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\nconst BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n}\n\nconst RANK_1 = 7\nconst RANK_2 = 6\nconst RANK_3 = 5\nconst RANK_4 = 4\nconst RANK_5 = 3\nconst RANK_6 = 2\nconst RANK_7 = 1\nconst RANK_8 = 0\n\n// prettier-ignore\nconst SQUARE_MAP = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n};\n\nconst ROOKS = {\n    w: [\n        { square: SQUARE_MAP.a1, flag: BITS.QSIDE_CASTLE },\n        { square: SQUARE_MAP.h1, flag: BITS.KSIDE_CASTLE },\n    ],\n    b: [\n        { square: SQUARE_MAP.a8, flag: BITS.QSIDE_CASTLE },\n        { square: SQUARE_MAP.h8, flag: BITS.KSIDE_CASTLE },\n    ],\n}\n\nconst PARSER_STRICT = 0\nconst PARSER_SLOPPY = 1\n\n/* this function is used to uniquely identify ambiguous moves */\nfunction get_disambiguator(move, moves) {\n    var from = move.from\n    var to = move.to\n    var piece = move.piece\n\n    var ambiguities = 0\n    var same_rank = 0\n    var same_file = 0\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n        var ambig_from = moves[i].from\n        var ambig_to = moves[i].to\n        var ambig_piece = moves[i].piece\n\n        /* if a move of the same piece type ends on the same to square, we'll\n         * need to add a disambiguator to the algebraic notation\n         */\n        if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n            ambiguities++\n\n            if (rank(from) === rank(ambig_from)) {\n                same_rank++\n            }\n\n            if (file(from) === file(ambig_from)) {\n                same_file++\n            }\n        }\n    }\n\n    if (ambiguities > 0) {\n        /* if there exists a similar moving piece on the same rank and file as\n         * the move in question, use the square as the disambiguator\n         */\n        if (same_rank > 0 && same_file > 0) {\n            return algebraic(from)\n        } else if (same_file > 0) {\n            /* if the moving piece rests on the same file, use the rank symbol as the\n             * disambiguator\n             */\n            return algebraic(from).charAt(1)\n        } else {\n            /* else use the file symbol */\n            return algebraic(from).charAt(0)\n        }\n    }\n\n    return ''\n}\n\nfunction infer_piece_type(san) {\n    var piece_type = san.charAt(0)\n    if (piece_type >= 'a' && piece_type <= 'h') {\n        var matches = san.match(/[a-h]\\d.*[a-h]\\d/)\n        if (matches) {\n            return undefined\n        }\n        return PAWN\n    }\n    piece_type = piece_type.toLowerCase()\n    if (piece_type === 'o') {\n        return KING\n    }\n    return piece_type\n}\n\n// parses all of the decorators out of a SAN string\nfunction stripped_san(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n}\n\n/*****************************************************************************\n * UTILITY FUNCTIONS\n ****************************************************************************/\nfunction rank(i) {\n    return i >> 4\n}\n\nfunction file(i) {\n    return i & 15\n}\n\nfunction algebraic(i) {\n    var f = file(i),\n        r = rank(i)\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n}\n\nfunction swap_color(c) {\n    return c === WHITE ? BLACK : WHITE\n}\n\nfunction is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1\n}\n\nfunction clone(obj) {\n    var dupe = obj instanceof Array ? [] : {}\n\n    for (var property in obj) {\n        if (typeof property === 'object') {\n            dupe[property] = clone(obj[property])\n        } else {\n            dupe[property] = obj[property]\n        }\n    }\n\n    return dupe\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\n/***************************************************************************\n * PUBLIC CONSTANTS\n **************************************************************************/\n\nexport const BLACK = 'b'\nexport const WHITE = 'w'\n\nexport const EMPTY = -1\n\nexport const PAWN = 'p'\nexport const KNIGHT = 'n'\nexport const BISHOP = 'b'\nexport const ROOK = 'r'\nexport const QUEEN = 'q'\nexport const KING = 'k'\n\nexport const SQUARES = (function () {\n    /* from the ECMA-262 spec (section 12.6.4):\n     * \"The mechanics of enumerating the properties ... is\n     * implementation dependent\"\n     * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n     * ordered correctly\n     */\n    var keys = []\n    for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n        if (i & 0x88) {\n            i += 7\n            continue\n        }\n        keys.push(algebraic(i))\n    }\n    return keys\n})()\n\nexport const FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n}\n\nexport const Chess = function (fen) {\n    var board = new Array(128)\n    var kings = { w: EMPTY, b: EMPTY }\n    var turn = WHITE\n    var castling = { w: 0, b: 0 }\n    var ep_square = EMPTY\n    var half_moves = 0\n    var move_number = 1\n    var history = []\n    var header = {}\n    var comments = {}\n\n    /* if the user passes in a fen string, load it, else default to\n     * starting position\n     */\n    if (typeof fen === 'undefined') {\n        load(DEFAULT_POSITION)\n    } else {\n        load(fen)\n    }\n\n    function clear(keep_headers) {\n        if (typeof keep_headers === 'undefined') {\n            keep_headers = false\n        }\n\n        board = new Array(128)\n        kings = { w: EMPTY, b: EMPTY }\n        turn = WHITE\n        castling = { w: 0, b: 0 }\n        ep_square = EMPTY\n        half_moves = 0\n        move_number = 1\n        history = []\n        if (!keep_headers) header = {}\n        comments = {}\n        update_setup(generate_fen())\n    }\n\n    function prune_comments() {\n        var reversed_history = []\n        var current_comments = {}\n        var copy_comment = function (fen) {\n            if (fen in comments) {\n                current_comments[fen] = comments[fen]\n            }\n        }\n        while (history.length > 0) {\n            reversed_history.push(undo_move())\n        }\n        copy_comment(generate_fen())\n        while (reversed_history.length > 0) {\n            make_move(reversed_history.pop())\n            copy_comment(generate_fen())\n        }\n        comments = current_comments\n    }\n\n    function reset() {\n        load(DEFAULT_POSITION)\n    }\n\n    function load(fen, keep_headers) {\n        if (typeof keep_headers === 'undefined') {\n            keep_headers = false\n        }\n\n        var tokens = fen.split(/\\s+/)\n        var position = tokens[0]\n        var square = 0\n\n        if (!validate_fen(fen).valid) {\n            return false\n        }\n\n        clear(keep_headers)\n\n        for (var i = 0; i < position.length; i++) {\n            var piece = position.charAt(i)\n\n            if (piece === '/') {\n                square += 8\n            } else if (is_digit(piece)) {\n                square += parseInt(piece, 10)\n            } else {\n                var color = piece < 'a' ? WHITE : BLACK\n                put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n                square++\n            }\n        }\n\n        turn = tokens[1]\n\n        if (tokens[2].indexOf('K') > -1) {\n            castling.w |= BITS.KSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            castling.w |= BITS.QSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            castling.b |= BITS.KSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            castling.b |= BITS.QSIDE_CASTLE\n        }\n\n        ep_square = tokens[3] === '-' ? EMPTY : SQUARE_MAP[tokens[3]]\n        half_moves = parseInt(tokens[4], 10)\n        move_number = parseInt(tokens[5], 10)\n\n        update_setup(generate_fen())\n\n        return true\n    }\n\n    /* TODO: this function is pretty much crap - it validates structure but\n     * completely ignores content (e.g. doesn't verify that each side has a king)\n     * ... we should rewrite this, and ditch the silly error_number field while\n     * we're at it\n     */\n    function validate_fen(fen) {\n        var errors = {\n            0: 'No errors.',\n            1: 'FEN string must contain six space-delimited fields.',\n            2: '6th field (move number) must be a positive integer.',\n            3: '5th field (half move counter) must be a non-negative integer.',\n            4: '4th field (en-passant square) is invalid.',\n            5: '3rd field (castling availability) is invalid.',\n            6: '2nd field (side to move) is invalid.',\n            7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n            8: '1st field (piece positions) is invalid [consecutive numbers].',\n            9: '1st field (piece positions) is invalid [invalid piece].',\n            10: '1st field (piece positions) is invalid [row too large].',\n            11: 'Illegal en-passant square',\n        }\n\n        /* 1st criterion: 6 space-seperated fields? */\n        var tokens = fen.split(/\\s+/)\n        if (tokens.length !== 6) {\n            return { valid: false, error_number: 1, error: errors[1] }\n        }\n\n        /* 2nd criterion: move number field is a integer value > 0? */\n        if (isNaN(parseInt(tokens[5])) || parseInt(tokens[5], 10) <= 0) {\n            return { valid: false, error_number: 2, error: errors[2] }\n        }\n\n        /* 3rd criterion: half move counter is an integer >= 0? */\n        if (isNaN(parseInt(tokens[4])) || parseInt(tokens[4], 10) < 0) {\n            return { valid: false, error_number: 3, error: errors[3] }\n        }\n\n        /* 4th criterion: 4th field is a valid e.p.-string? */\n        if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n            return { valid: false, error_number: 4, error: errors[4] }\n        }\n\n        /* 5th criterion: 3th field is a valid castle-string? */\n        if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n            return { valid: false, error_number: 5, error: errors[5] }\n        }\n\n        /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n        if (!/^(w|b)$/.test(tokens[1])) {\n            return { valid: false, error_number: 6, error: errors[6] }\n        }\n\n        /* 7th criterion: 1st field contains 8 rows? */\n        var rows = tokens[0].split('/')\n        if (rows.length !== 8) {\n            return { valid: false, error_number: 7, error: errors[7] }\n        }\n\n        /* 8th criterion: every row is valid? */\n        for (var i = 0; i < rows.length; i++) {\n            /* check for right sum of fields AND not two numbers in succession */\n            var sum_fields = 0\n            var previous_was_number = false\n\n            for (var k = 0; k < rows[i].length; k++) {\n                if (!isNaN(rows[i][k])) {\n                    if (previous_was_number) {\n                        return { valid: false, error_number: 8, error: errors[8] }\n                    }\n                    sum_fields += parseInt(rows[i][k], 10)\n                    previous_was_number = true\n                } else {\n                    if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                        return { valid: false, error_number: 9, error: errors[9] }\n                    }\n                    sum_fields += 1\n                    previous_was_number = false\n                }\n            }\n            if (sum_fields !== 8) {\n                return { valid: false, error_number: 10, error: errors[10] }\n            }\n        }\n\n        if (\n            (tokens[3][1] == '3' && tokens[1] == 'w') ||\n            (tokens[3][1] == '6' && tokens[1] == 'b')\n        ) {\n            return { valid: false, error_number: 11, error: errors[11] }\n        }\n\n        /* everything's okay! */\n        return { valid: true, error_number: 0, error: errors[0] }\n    }\n\n    function generate_fen() {\n        var empty = 0\n        var fen = ''\n\n        for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n            if (board[i] == null) {\n                empty++\n            } else {\n                if (empty > 0) {\n                    fen += empty\n                    empty = 0\n                }\n                var color = board[i].color\n                var piece = board[i].type\n\n                fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n            }\n\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty\n                }\n\n                if (i !== SQUARE_MAP.h1) {\n                    fen += '/'\n                }\n\n                empty = 0\n                i += 8\n            }\n        }\n\n        var cflags = ''\n        if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n            cflags += 'K'\n        }\n        if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n            cflags += 'Q'\n        }\n        if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n            cflags += 'k'\n        }\n        if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n            cflags += 'q'\n        }\n\n        /* do we have an empty castling flag? */\n        cflags = cflags || '-'\n        var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\n        return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n    }\n\n    function set_header(args) {\n        for (var i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n                header[args[i]] = args[i + 1]\n            }\n        }\n        return header\n    }\n\n    /* called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object.  if the FEN is\n     * equal to the default position, the SetUp and FEN are deleted\n     * the setup is only updated if history.length is zero, ie moves haven't been\n     * made.\n     */\n    function update_setup(fen) {\n        if (history.length > 0) return\n\n        if (fen !== DEFAULT_POSITION) {\n            header['SetUp'] = '1'\n            header['FEN'] = fen\n        } else {\n            delete header['SetUp']\n            delete header['FEN']\n        }\n    }\n\n    function get(square) {\n        var piece = board[SQUARE_MAP[square]]\n        return piece ? { type: piece.type, color: piece.color } : null\n    }\n\n    function put(piece, square) {\n        /* check for valid piece object */\n        if (!('type' in piece && 'color' in piece)) {\n            return false\n        }\n\n        /* check for piece */\n        if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n            return false\n        }\n\n        /* check for valid square */\n        if (!(square in SQUARE_MAP)) {\n            return false\n        }\n\n        var sq = SQUARE_MAP[square]\n\n        /* don't let the user place more than one king */\n        if (\n            piece.type == KING &&\n            !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n        ) {\n            return false\n        }\n\n        board[sq] = { type: piece.type, color: piece.color }\n        if (piece.type === KING) {\n            kings[piece.color] = sq\n        }\n\n        update_setup(generate_fen())\n\n        return true\n    }\n\n    function remove(square) {\n        var piece = get(square)\n        board[SQUARE_MAP[square]] = null\n        if (piece && piece.type === KING) {\n            kings[piece.color] = EMPTY\n        }\n\n        update_setup(generate_fen())\n\n        return piece\n    }\n\n    function build_move(board, from, to, flags, promotion) {\n        var move = {\n            color: turn,\n            from: from,\n            to: to,\n            flags: flags,\n            piece: board[from].type,\n        }\n\n        if (promotion) {\n            move.flags |= BITS.PROMOTION\n            move.promotion = promotion\n        }\n\n        if (board[to]) {\n            move.captured = board[to].type\n        } else if (flags & BITS.EP_CAPTURE) {\n            move.captured = PAWN\n        }\n        return move\n    }\n\n    function generate_moves(options) {\n        function add_move(board, moves, from, to, flags) {\n            /* if pawn promotion */\n            if (\n                board[from].type === PAWN &&\n                (rank(to) === RANK_8 || rank(to) === RANK_1)\n            ) {\n                var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n                for (var i = 0, len = pieces.length; i < len; i++) {\n                    moves.push(build_move(board, from, to, flags, pieces[i]))\n                }\n            } else {\n                moves.push(build_move(board, from, to, flags))\n            }\n        }\n\n        var moves = []\n        var us = turn\n        var them = swap_color(us)\n        var second_rank = { b: RANK_7, w: RANK_2 }\n\n        var first_sq = SQUARE_MAP.a8\n        var last_sq = SQUARE_MAP.h1\n        var single_square = false\n\n        /* do we want legal moves? */\n        var legal =\n            typeof options !== 'undefined' && 'legal' in options\n                ? options.legal\n                : true\n\n        var piece_type =\n            typeof options !== 'undefined' &&\n            'piece' in options &&\n            typeof options.piece === 'string'\n                ? options.piece.toLowerCase()\n                : true\n\n        /* are we generating moves for a single square? */\n        if (typeof options !== 'undefined' && 'square' in options) {\n            if (options.square in SQUARE_MAP) {\n                first_sq = last_sq = SQUARE_MAP[options.square]\n                single_square = true\n            } else {\n                /* invalid square */\n                return []\n            }\n        }\n\n        for (var i = first_sq; i <= last_sq; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            var piece = board[i]\n            if (piece == null || piece.color !== us) {\n                continue\n            }\n\n            if (piece.type === PAWN && (piece_type === true || piece_type === PAWN)) {\n                /* single square, non-capturing */\n                var square = i + PAWN_OFFSETS[us][0]\n                if (board[square] == null) {\n                    add_move(board, moves, i, square, BITS.NORMAL)\n\n                    /* double square */\n                    var square = i + PAWN_OFFSETS[us][1]\n                    if (second_rank[us] === rank(i) && board[square] == null) {\n                        add_move(board, moves, i, square, BITS.BIG_PAWN)\n                    }\n                }\n\n                /* pawn captures */\n                for (j = 2; j < 4; j++) {\n                    var square = i + PAWN_OFFSETS[us][j]\n                    if (square & 0x88) continue\n\n                    if (board[square] != null && board[square].color === them) {\n                        add_move(board, moves, i, square, BITS.CAPTURE)\n                    } else if (square === ep_square) {\n                        add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n                    }\n                }\n            } else if (piece_type === true || piece_type === piece.type) {\n                for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n                    var offset = PIECE_OFFSETS[piece.type][j]\n                    var square = i\n\n                    while (true) {\n                        square += offset\n                        if (square & 0x88) break\n\n                        if (board[square] == null) {\n                            add_move(board, moves, i, square, BITS.NORMAL)\n                        } else {\n                            if (board[square].color === us) break\n                            add_move(board, moves, i, square, BITS.CAPTURE)\n                            break\n                        }\n\n                        /* break, if knight or king */\n                        if (piece.type === 'n' || piece.type === 'k') break\n                    }\n                }\n            }\n        }\n\n        /* check for castling if: a) we're generating all moves, or b) we're doing\n         * single square move generation on the king's square\n         */\n        if (piece_type === true || piece_type === KING) {\n            if (!single_square || last_sq === kings[us]) {\n                /* king-side castling */\n                if (castling[us] & BITS.KSIDE_CASTLE) {\n                    var castling_from = kings[us]\n                    var castling_to = castling_from + 2\n\n                    if (\n                        board[castling_from + 1] == null &&\n                        board[castling_to] == null &&\n                        !attacked(them, kings[us]) &&\n                        !attacked(them, castling_from + 1) &&\n                        !attacked(them, castling_to)\n                    ) {\n                        add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n                    }\n                }\n\n                /* queen-side castling */\n                if (castling[us] & BITS.QSIDE_CASTLE) {\n                    var castling_from = kings[us]\n                    var castling_to = castling_from - 2\n\n                    if (\n                        board[castling_from - 1] == null &&\n                        board[castling_from - 2] == null &&\n                        board[castling_from - 3] == null &&\n                        !attacked(them, kings[us]) &&\n                        !attacked(them, castling_from - 1) &&\n                        !attacked(them, castling_to)\n                    ) {\n                        add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n                    }\n                }\n            }\n        }\n\n        /* return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal) {\n            return moves\n        }\n\n        /* filter out illegal moves */\n        var legal_moves = []\n        for (var i = 0, len = moves.length; i < len; i++) {\n            make_move(moves[i])\n            if (!king_attacked(us)) {\n                legal_moves.push(moves[i])\n            }\n            undo_move()\n        }\n\n        return legal_moves\n    }\n\n    /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n     * disambiguation bugs in Fritz and Chessbase.  See below:\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    function move_to_san(move, moves) {\n        var output = ''\n\n        if (move.flags & BITS.KSIDE_CASTLE) {\n            output = 'O-O'\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\n            output = 'O-O-O'\n        } else {\n            if (move.piece !== PAWN) {\n                var disambiguator = get_disambiguator(move, moves)\n                output += move.piece.toUpperCase() + disambiguator\n            }\n\n            if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n                if (move.piece === PAWN) {\n                    output += algebraic(move.from)[0]\n                }\n                output += 'x'\n            }\n\n            output += algebraic(move.to)\n\n            if (move.flags & BITS.PROMOTION) {\n                output += '=' + move.promotion.toUpperCase()\n            }\n        }\n\n        make_move(move)\n        if (in_check()) {\n            if (in_checkmate()) {\n                output += '#'\n            } else {\n                output += '+'\n            }\n        }\n        undo_move()\n\n        return output\n    }\n\n    function attacked(color, square) {\n        for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            /* if empty square or wrong color */\n            if (board[i] == null || board[i].color !== color) continue\n\n            var piece = board[i]\n            var difference = i - square\n            var index = difference + 119\n\n            if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n                if (piece.type === PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === WHITE) return true\n                    } else {\n                        if (piece.color === BLACK) return true\n                    }\n                    continue\n                }\n\n                /* if the piece is a knight or a king */\n                if (piece.type === 'n' || piece.type === 'k') return true\n\n                var offset = RAYS[index]\n                var j = i + offset\n\n                var blocked = false\n                while (j !== square) {\n                    if (board[j] != null) {\n                        blocked = true\n                        break\n                    }\n                    j += offset\n                }\n\n                if (!blocked) return true\n            }\n        }\n\n        return false\n    }\n\n    function king_attacked(color) {\n        return attacked(swap_color(color), kings[color])\n    }\n\n    function in_check() {\n        return king_attacked(turn)\n    }\n\n    function in_checkmate() {\n        return in_check() && generate_moves().length === 0\n    }\n\n    function in_stalemate() {\n        return !in_check() && generate_moves().length === 0\n    }\n\n    function insufficient_material() {\n        var pieces = {}\n        var bishops = []\n        var num_pieces = 0\n        var sq_color = 0\n\n        for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n            sq_color = (sq_color + 1) % 2\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            var piece = board[i]\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n                if (piece.type === BISHOP) {\n                    bishops.push(sq_color)\n                }\n                num_pieces++\n            }\n        }\n\n        /* k vs. k */\n        if (num_pieces === 2) {\n            return true\n        } else if (\n            /* k vs. kn .... or .... k vs. kb */\n            num_pieces === 3 &&\n            (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n        ) {\n            return true\n        } else if (num_pieces === pieces[BISHOP] + 2) {\n            /* kb vs. kb where any number of bishops are all on the same color */\n            var sum = 0\n            var len = bishops.length\n            for (var i = 0; i < len; i++) {\n                sum += bishops[i]\n            }\n            if (sum === 0 || sum === len) {\n                return true\n            }\n        }\n\n        return false\n    }\n\n    function in_threefold_repetition() {\n        /* TODO: while this function is fine for casual use, a better\n         * implementation would use a Zobrist key (instead of FEN). the\n         * Zobrist key would be maintained in the make_move/undo_move functions,\n         * avoiding the costly that we do below.\n         */\n        var moves = []\n        var positions = {}\n        var repetition = false\n\n        while (true) {\n            var move = undo_move()\n            if (!move) break\n            moves.push(move)\n        }\n\n        while (true) {\n            /* remove the last two fields in the FEN string, they're not needed\n             * when checking for draw by rep */\n            var fen = generate_fen().split(' ').slice(0, 4).join(' ')\n\n            /* has the position occurred three or move times */\n            positions[fen] = fen in positions ? positions[fen] + 1 : 1\n            if (positions[fen] >= 3) {\n                repetition = true\n            }\n\n            if (!moves.length) {\n                break\n            }\n            make_move(moves.pop())\n        }\n\n        return repetition\n    }\n\n    function push(move) {\n        history.push({\n            move: move,\n            kings: { b: kings.b, w: kings.w },\n            turn: turn,\n            castling: { b: castling.b, w: castling.w },\n            ep_square: ep_square,\n            half_moves: half_moves,\n            move_number: move_number,\n        })\n    }\n\n    function make_move(move) {\n        var us = turn\n        var them = swap_color(us)\n        push(move)\n\n        board[move.to] = board[move.from]\n        board[move.from] = null\n\n        /* if ep capture, remove the captured pawn */\n        if (move.flags & BITS.EP_CAPTURE) {\n            if (turn === BLACK) {\n                board[move.to - 16] = null\n            } else {\n                board[move.to + 16] = null\n            }\n        }\n\n        /* if pawn promotion, replace with new piece */\n        if (move.flags & BITS.PROMOTION) {\n            board[move.to] = { type: move.promotion, color: us }\n        }\n\n        /* if we moved the king */\n        if (board[move.to].type === KING) {\n            kings[board[move.to].color] = move.to\n\n            /* if we castled, move the rook next to the king */\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                var castling_to = move.to - 1\n                var castling_from = move.to + 1\n                board[castling_to] = board[castling_from]\n                board[castling_from] = null\n            } else if (move.flags & BITS.QSIDE_CASTLE) {\n                var castling_to = move.to + 1\n                var castling_from = move.to - 2\n                board[castling_to] = board[castling_from]\n                board[castling_from] = null\n            }\n\n            /* turn off castling */\n            castling[us] = ''\n        }\n\n        /* turn off castling if we move a rook */\n        if (castling[us]) {\n            for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n                if (\n                    move.from === ROOKS[us][i].square &&\n                    castling[us] & ROOKS[us][i].flag\n                ) {\n                    castling[us] ^= ROOKS[us][i].flag\n                    break\n                }\n            }\n        }\n\n        /* turn off castling if we capture a rook */\n        if (castling[them]) {\n            for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n                if (\n                    move.to === ROOKS[them][i].square &&\n                    castling[them] & ROOKS[them][i].flag\n                ) {\n                    castling[them] ^= ROOKS[them][i].flag\n                    break\n                }\n            }\n        }\n\n        /* if big pawn move, update the en passant square */\n        if (move.flags & BITS.BIG_PAWN) {\n            if (turn === 'b') {\n                ep_square = move.to - 16\n            } else {\n                ep_square = move.to + 16\n            }\n        } else {\n            ep_square = EMPTY\n        }\n\n        /* reset the 50 move counter if a pawn is moved or a piece is captured */\n        if (move.piece === PAWN) {\n            half_moves = 0\n        } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n            half_moves = 0\n        } else {\n            half_moves++\n        }\n\n        if (turn === BLACK) {\n            move_number++\n        }\n        turn = swap_color(turn)\n    }\n\n    function undo_move() {\n        var old = history.pop()\n        if (old == null) {\n            return null\n        }\n\n        var move = old.move\n        kings = old.kings\n        turn = old.turn\n        castling = old.castling\n        ep_square = old.ep_square\n        half_moves = old.half_moves\n        move_number = old.move_number\n\n        var us = turn\n        var them = swap_color(turn)\n\n        board[move.from] = board[move.to]\n        board[move.from].type = move.piece // to undo any promotions\n        board[move.to] = null\n\n        if (move.flags & BITS.CAPTURE) {\n            board[move.to] = { type: move.captured, color: them }\n        } else if (move.flags & BITS.EP_CAPTURE) {\n            var index\n            if (us === BLACK) {\n                index = move.to - 16\n            } else {\n                index = move.to + 16\n            }\n            board[index] = { type: PAWN, color: them }\n        }\n\n        if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n            var castling_to, castling_from\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                castling_to = move.to + 1\n                castling_from = move.to - 1\n            } else if (move.flags & BITS.QSIDE_CASTLE) {\n                castling_to = move.to - 2\n                castling_from = move.to + 1\n            }\n\n            board[castling_to] = board[castling_from]\n            board[castling_from] = null\n        }\n\n        return move\n    }\n\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    function move_from_san(move, sloppy) {\n        // strip off any move decorations: e.g Nf3+?! becomes Nf3\n        var clean_move = stripped_san(move)\n\n        // the move parsers is a 2-step state\n        for (var parser = 0; parser < 2; parser++) {\n            if (parser == PARSER_SLOPPY) {\n                // only run the sloppy parse if explicitly requested\n                if (!sloppy) {\n                    return null\n                }\n\n                // The sloppy parser allows the user to parse non-standard chess\n                // notations. This parser is opt-in (by specifying the\n                // '{ sloppy: true }' setting) and is only run after the Standard\n                // Algebraic Notation (SAN) parser has failed.\n                //\n                // When running the sloppy parser, we'll run a regex to grab the piece,\n                // the to/from square, and an optional promotion piece. This regex will\n                // parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n                // f7f8q, b1c3\n\n                // NOTE: Some positions and moves may be ambiguous when using the\n                // sloppy parser. For example, in this position:\n                // 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1, the move b1c3 may be interpreted\n                // as Nc3 or B1c3 (a disambiguated bishop move). In these cases, the\n                // sloppy parser will default to the most most basic interpretation\n                // (which is b1c3 parsing to Nc3).\n\n                // FIXME: these var's are hoisted into function scope, this will need\n                // to change when switching to const/let\n\n                var overly_disambiguated = false\n\n                var matches = clean_move.match(\n                    /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n                )\n                if (matches) {\n                    var piece = matches[1]\n                    var from = matches[2]\n                    var to = matches[3]\n                    var promotion = matches[4]\n\n                    if (from.length == 1) {\n                        overly_disambiguated = true\n                    }\n                } else {\n                    // The [a-h]?[1-8]? portion of the regex below handles moves that may\n                    // be overly disambiguated (e.g. Nge7 is unnecessary and non-standard\n                    // when there is one legal knight move to e7). In this case, the value\n                    // of 'from' variable will be a rank or file, not a square.\n                    var matches = clean_move.match(\n                        /([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/\n                    )\n\n                    if (matches) {\n                        var piece = matches[1]\n                        var from = matches[2]\n                        var to = matches[3]\n                        var promotion = matches[4]\n\n                        if (from.length == 1) {\n                            var overly_disambiguated = true\n                        }\n                    }\n                }\n            }\n\n            var piece_type = infer_piece_type(clean_move)\n            var moves = generate_moves({\n                legal: true,\n                piece: piece ? piece : piece_type,\n            })\n\n            for (var i = 0, len = moves.length; i < len; i++) {\n                switch (parser) {\n                    case PARSER_STRICT: {\n                        if (clean_move === stripped_san(move_to_san(moves[i], moves))) {\n                            return moves[i]\n                        }\n                        break\n                    }\n                    case PARSER_SLOPPY: {\n                        if (matches) {\n                            // hand-compare move properties with the results from our sloppy\n                            // regex\n                            if (\n                                (!piece || piece.toLowerCase() == moves[i].piece) &&\n                                SQUARE_MAP[from] == moves[i].from &&\n                                SQUARE_MAP[to] == moves[i].to &&\n                                (!promotion || promotion.toLowerCase() == moves[i].promotion)\n                            ) {\n                                return moves[i]\n                            } else if (overly_disambiguated) {\n                                // SPECIAL CASE: we parsed a move string that may have an\n                                // unneeded rank/file disambiguator (e.g. Nge7).  The 'from'\n                                // variable will\n                                var square = algebraic(moves[i].from)\n                                if (\n                                    (!piece || piece.toLowerCase() == moves[i].piece) &&\n                                    SQUARE_MAP[to] == moves[i].to &&\n                                    (from == square[0] || from == square[1]) &&\n                                    (!promotion || promotion.toLowerCase() == moves[i].promotion)\n                                ) {\n                                    return moves[i]\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null\n    }\n\n    /* pretty = external move object */\n    function make_pretty(ugly_move) {\n        var move = clone(ugly_move)\n        move.san = move_to_san(move, generate_moves({ legal: true }))\n        move.to = algebraic(move.to)\n        move.from = algebraic(move.from)\n\n        var flags = ''\n\n        for (var flag in BITS) {\n            if (BITS[flag] & move.flags) {\n                flags += FLAGS[flag]\n            }\n        }\n        move.flags = flags\n\n        return move\n    }\n\n    /*****************************************************************************\n     * DEBUGGING UTILITIES\n     ****************************************************************************/\n    function perft(depth) {\n        var moves = generate_moves({ legal: false })\n        var nodes = 0\n        var color = turn\n\n        for (var i = 0, len = moves.length; i < len; i++) {\n            make_move(moves[i])\n            if (!king_attacked(color)) {\n                if (depth - 1 > 0) {\n                    var child_nodes = perft(depth - 1)\n                    nodes += child_nodes\n                } else {\n                    nodes++\n                }\n            }\n            undo_move()\n        }\n\n        return nodes\n    }\n\n    return {\n        /***************************************************************************\n         * PUBLIC API\n         **************************************************************************/\n        load: function (fen) {\n            return load(fen)\n        },\n\n        reset: function () {\n            return reset()\n        },\n\n        moves: function (options) {\n            /* The internal representation of a chess move is in 0x88 format, and\n             * not meant to be human-readable.  The code below converts the 0x88\n             * square coordinates to algebraic coordinates.  It also prunes an\n             * unnecessary move keys resulting from a verbose call.\n             */\n\n            var ugly_moves = generate_moves(options)\n            var moves = []\n\n            for (var i = 0, len = ugly_moves.length; i < len; i++) {\n                /* does the user want a full move object (most likely not), or just\n                 * SAN\n                 */\n                if (\n                    typeof options !== 'undefined' &&\n                    'verbose' in options &&\n                    options.verbose\n                ) {\n                    moves.push(make_pretty(ugly_moves[i]))\n                } else {\n                    moves.push(\n                        move_to_san(ugly_moves[i], generate_moves({ legal: true }))\n                    )\n                }\n            }\n\n            return moves\n        },\n\n        in_check: function () {\n            return in_check()\n        },\n\n        in_checkmate: function () {\n            return in_checkmate()\n        },\n\n        in_stalemate: function () {\n            return in_stalemate()\n        },\n\n        in_draw: function () {\n            return (\n                half_moves >= 100 ||\n                in_stalemate() ||\n                insufficient_material() ||\n                in_threefold_repetition()\n            )\n        },\n\n        insufficient_material: function () {\n            return insufficient_material()\n        },\n\n        in_threefold_repetition: function () {\n            return in_threefold_repetition()\n        },\n\n        game_over: function () {\n            return (\n                half_moves >= 100 ||\n                in_checkmate() ||\n                in_stalemate() ||\n                insufficient_material() ||\n                in_threefold_repetition()\n            )\n        },\n\n        validate_fen: function (fen) {\n            return validate_fen(fen)\n        },\n\n        fen: function () {\n            return generate_fen()\n        },\n\n        board: function () {\n            var output = [],\n                row = []\n\n            for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n                if (board[i] == null) {\n                    row.push(null)\n                } else {\n                    row.push({\n                        square: algebraic(i),\n                        type: board[i].type,\n                        color: board[i].color,\n                    })\n                }\n                if ((i + 1) & 0x88) {\n                    output.push(row)\n                    row = []\n                    i += 8\n                }\n            }\n\n            return output\n        },\n\n        pgn: function (options) {\n            /* using the specification from http://www.chessclub.com/help/PGN-spec\n             * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n             */\n            var newline =\n                typeof options === 'object' && typeof options.newline_char === 'string'\n                    ? options.newline_char\n                    : '\\n'\n            var max_width =\n                typeof options === 'object' && typeof options.max_width === 'number'\n                    ? options.max_width\n                    : 0\n            var result = []\n            var header_exists = false\n\n            /* add the PGN header information */\n            for (var i in header) {\n                /* TODO: order of enumerated properties in header object is not\n                 * guaranteed, see ECMA-262 spec (section 12.6.4)\n                 */\n                result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n                header_exists = true\n            }\n\n            if (header_exists && history.length) {\n                result.push(newline)\n            }\n\n            var append_comment = function (move_string) {\n                var comment = comments[generate_fen()]\n                if (typeof comment !== 'undefined') {\n                    var delimiter = move_string.length > 0 ? ' ' : ''\n                    move_string = `${move_string}${delimiter}{${comment}}`\n                }\n                return move_string\n            }\n\n            /* pop all of history onto reversed_history */\n            var reversed_history = []\n            while (history.length > 0) {\n                reversed_history.push(undo_move())\n            }\n\n            var moves = []\n            var move_string = ''\n\n            /* special case of a commented starting position with no moves */\n            if (reversed_history.length === 0) {\n                moves.push(append_comment(''))\n            }\n\n            /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n            while (reversed_history.length > 0) {\n                move_string = append_comment(move_string)\n                var move = reversed_history.pop()\n\n                /* if the position started with black to move, start PGN with #. ... */\n                if (!history.length && move.color === 'b') {\n                    const prefix = `${move_number}. ...`\n                    /* is there a comment preceding the first move? */\n                    move_string = move_string ? `${move_string} ${prefix}` : prefix\n                } else if (move.color === 'w') {\n                    /* store the previous generated move_string if we have one */\n                    if (move_string.length) {\n                        moves.push(move_string)\n                    }\n                    move_string = move_number + '.'\n                }\n\n                move_string =\n                    move_string + ' ' + move_to_san(move, generate_moves({ legal: true }))\n                make_move(move)\n            }\n\n            /* are there any other leftover moves? */\n            if (move_string.length) {\n                moves.push(append_comment(move_string))\n            }\n\n            /* is there a result? */\n            if (typeof header.Result !== 'undefined') {\n                moves.push(header.Result)\n            }\n\n            /* history should be back to what it was before we started generating PGN,\n             * so join together moves\n             */\n            if (max_width === 0) {\n                return result.join('') + moves.join(' ')\n            }\n\n            var strip = function () {\n                if (result.length > 0 && result[result.length - 1] === ' ') {\n                    result.pop()\n                    return true\n                }\n                return false\n            }\n\n            /* NB: this does not preserve comment whitespace. */\n            var wrap_comment = function (width, move) {\n                for (var token of move.split(' ')) {\n                    if (!token) {\n                        continue\n                    }\n                    if (width + token.length > max_width) {\n                        while (strip()) {\n                            width--\n                        }\n                        result.push(newline)\n                        width = 0\n                    }\n                    result.push(token)\n                    width += token.length\n                    result.push(' ')\n                    width++\n                }\n                if (strip()) {\n                    width--\n                }\n                return width\n            }\n\n            /* wrap the PGN output at max_width */\n            var current_width = 0\n            for (var i = 0; i < moves.length; i++) {\n                if (current_width + moves[i].length > max_width) {\n                    if (moves[i].includes('{')) {\n                        current_width = wrap_comment(current_width, moves[i])\n                        continue\n                    }\n                }\n                /* if the current move will push past max_width */\n                if (current_width + moves[i].length > max_width && i !== 0) {\n                    /* don't end the line with whitespace */\n                    if (result[result.length - 1] === ' ') {\n                        result.pop()\n                    }\n\n                    result.push(newline)\n                    current_width = 0\n                } else if (i !== 0) {\n                    result.push(' ')\n                    current_width++\n                }\n                result.push(moves[i])\n                current_width += moves[i].length\n            }\n\n            return result.join('')\n        },\n\n        load_pgn: function (pgn, options) {\n            // allow the user to specify the sloppy move parser to work around over\n            // disambiguation bugs in Fritz and Chessbase\n            var sloppy =\n                typeof options !== 'undefined' && 'sloppy' in options\n                    ? options.sloppy\n                    : false\n\n            function mask(str) {\n                return str.replace(/\\\\/g, '\\\\')\n            }\n\n            function parse_pgn_header(header, options) {\n                var newline_char =\n                    typeof options === 'object' &&\n                    typeof options.newline_char === 'string'\n                        ? options.newline_char\n                        : '\\r?\\n'\n                var header_obj = {}\n                var headers = header.split(new RegExp(mask(newline_char)))\n                var key = ''\n                var value = ''\n\n                for (var i = 0; i < headers.length; i++) {\n                    var regex = /^\\s*\\[([A-Za-z]+)\\s*\"(.*)\"\\s*\\]\\s*$/\n                    key = headers[i].replace(regex, '$1')\n                    value = headers[i].replace(regex, '$2')\n                    if (trim(key).length > 0) {\n                        header_obj[key] = value\n                    }\n                }\n\n                return header_obj\n            }\n\n            // strip whitespace from head/tail of PGN block\n            pgn = pgn.trim()\n\n            var newline_char =\n                typeof options === 'object' && typeof options.newline_char === 'string'\n                    ? options.newline_char\n                    : '\\r?\\n'\n\n            // RegExp to split header. Takes advantage of the fact that header and movetext\n            // will always have a blank line between them (ie, two newline_char's).\n            // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\s*\\r?\\n){2}/\n            var header_regex = new RegExp(\n                '^(\\\\[((?:' +\n                mask(newline_char) +\n                ')|.)*\\\\])' +\n                '(?:\\\\s*' +\n                mask(newline_char) +\n                '){2}'\n            )\n\n            // If no header given, begin with moves.\n            var header_string = header_regex.test(pgn)\n                ? header_regex.exec(pgn)[1]\n                : ''\n\n            // Put the board in the starting position\n            reset()\n\n            /* parse PGN header */\n            var headers = parse_pgn_header(header_string, options)\n            var fen = ''\n\n            for (var key in headers) {\n                // check to see user is including fen (possibly with wrong tag case)\n                if (key.toLowerCase() === 'fen') {\n                    fen = headers[key]\n                }\n                set_header([key, headers[key]])\n            }\n\n            /* sloppy parser should attempt to load a fen tag, even if it's\n             * the wrong case and doesn't include a corresponding [SetUp \"1\"] tag */\n            if (sloppy) {\n                if (fen) {\n                    if (!load(fen, true)) {\n                        return false\n                    }\n                }\n            } else {\n                /* strict parser - load the starting position indicated by [Setup '1']\n                 * and [FEN position] */\n                if (headers['SetUp'] === '1') {\n                    if (!('FEN' in headers && load(headers['FEN'], true))) {\n                        // second argument to load: don't clear the headers\n                        return false\n                    }\n                }\n            }\n\n            /* NB: the regexes below that delete move numbers, recursive\n             * annotations, and numeric annotation glyphs may also match\n             * text in comments. To prevent this, we transform comments\n             * by hex-encoding them in place and decoding them again after\n             * the other tokens have been deleted.\n             *\n             * While the spec states that PGN files should be ASCII encoded,\n             * we use {en,de}codeURIComponent here to support arbitrary UTF8\n             * as a convenience for modern users */\n\n            var to_hex = function (string) {\n                return Array.from(string)\n                    .map(function (c) {\n                        /* encodeURI doesn't transform most ASCII characters,\n                         * so we handle these ourselves */\n                        return c.charCodeAt(0) < 128\n                            ? c.charCodeAt(0).toString(16)\n                            : encodeURIComponent(c).replace(/\\%/g, '').toLowerCase()\n                    })\n                    .join('')\n            }\n\n            var from_hex = function (string) {\n                return string.length == 0\n                    ? ''\n                    : decodeURIComponent('%' + string.match(/.{1,2}/g).join('%'))\n            }\n\n            var encode_comment = function (string) {\n                string = string.replace(new RegExp(mask(newline_char), 'g'), ' ')\n                return `{${to_hex(string.slice(1, string.length - 1))}}`\n            }\n\n            var decode_comment = function (string) {\n                if (string.startsWith('{') && string.endsWith('}')) {\n                    return from_hex(string.slice(1, string.length - 1))\n                }\n            }\n\n            /* delete header to get the moves */\n            var ms = pgn\n                .replace(header_string, '')\n                .replace(\n                    /* encode comments so they don't get deleted below */\n                    new RegExp(`(\\{[^}]*\\})+?|;([^${mask(newline_char)}]*)`, 'g'),\n                    function (match, bracket, semicolon) {\n                        return bracket !== undefined\n                            ? encode_comment(bracket)\n                            : ' ' + encode_comment(`{${semicolon.slice(1)}}`)\n                    }\n                )\n                .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\n            /* delete recursive annotation variations */\n            var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n            while (rav_regex.test(ms)) {\n                ms = ms.replace(rav_regex, '')\n            }\n\n            /* delete move numbers */\n            ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n            /* delete ... indicating black to move */\n            ms = ms.replace(/\\.\\.\\./g, '')\n\n            /* delete numeric annotation glyphs */\n            ms = ms.replace(/\\$\\d+/g, '')\n\n            /* trim and get array of moves */\n            var moves = trim(ms).split(new RegExp(/\\s+/))\n\n            /* delete empty entries */\n            moves = moves.join(',').replace(/,,+/g, ',').split(',')\n            var move = ''\n\n            var result = ''\n\n            for (var half_move = 0; half_move < moves.length; half_move++) {\n                var comment = decode_comment(moves[half_move])\n                if (comment !== undefined) {\n                    comments[generate_fen()] = comment\n                    continue\n                }\n\n                move = move_from_san(moves[half_move], sloppy)\n\n                /* invalid move */\n                if (move == null) {\n                    /* was the move an end of game marker */\n                    if (TERMINATION_MARKERS.indexOf(moves[half_move]) > -1) {\n                        result = moves[half_move]\n                    } else {\n                        return false\n                    }\n                } else {\n                    /* reset the end of game marker if making a valid move */\n                    result = ''\n                    make_move(move)\n                }\n            }\n\n            /* Per section 8.2.6 of the PGN spec, the Result tag pair must match\n             * match the termination marker. Only do this when headers are present,\n             * but the result tag is missing\n             */\n            if (result && Object.keys(header).length && !header['Result']) {\n                set_header(['Result', result])\n            }\n\n            return true\n        },\n\n        header: function () {\n            return set_header(arguments)\n        },\n\n        turn: function () {\n            return turn\n        },\n\n        move: function (move, options) {\n            /* The move function can be called with in the following parameters:\n             *\n             * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n             *\n             * .move({ from: 'h7', <- where the 'move' is a move object (additional\n             *         to :'h8',      fields are ignored)\n             *         promotion: 'q',\n             *      })\n             */\n\n            // allow the user to specify the sloppy move parser to work around over\n            // disambiguation bugs in Fritz and Chessbase\n            var sloppy =\n                typeof options !== 'undefined' && 'sloppy' in options\n                    ? options.sloppy\n                    : false\n\n            var move_obj = null\n\n            if (typeof move === 'string') {\n                move_obj = move_from_san(move, sloppy)\n            } else if (typeof move === 'object') {\n                var moves = generate_moves()\n\n                /* convert the pretty move object to an ugly move object */\n                for (var i = 0, len = moves.length; i < len; i++) {\n                    if (\n                        move.from === algebraic(moves[i].from) &&\n                        move.to === algebraic(moves[i].to) &&\n                        (!('promotion' in moves[i]) ||\n                            move.promotion === moves[i].promotion)\n                    ) {\n                        move_obj = moves[i]\n                        break\n                    }\n                }\n            }\n\n            /* failed to find move */\n            if (!move_obj) {\n                return null\n            }\n\n            /* need to make a copy of move because we can't generate SAN after the\n             * move is made\n             */\n            var pretty_move = make_pretty(move_obj)\n\n            make_move(move_obj)\n\n            return pretty_move\n        },\n\n        undo: function () {\n            var move = undo_move()\n            return move ? make_pretty(move) : null\n        },\n\n        clear: function () {\n            return clear()\n        },\n\n        put: function (piece, square) {\n            return put(piece, square)\n        },\n\n        get: function (square) {\n            return get(square)\n        },\n\n        ascii() {\n            var s = '   +------------------------+\\n'\n            for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n                /* display the rank */\n                if (file(i) === 0) {\n                    s += ' ' + '87654321'[rank(i)] + ' |'\n                }\n\n                /* empty piece */\n                if (board[i] == null) {\n                    s += ' . '\n                } else {\n                    var piece = board[i].type\n                    var color = board[i].color\n                    var symbol =\n                        color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n                    s += ' ' + symbol + ' '\n                }\n\n                if ((i + 1) & 0x88) {\n                    s += '|\\n'\n                    i += 8\n                }\n            }\n            s += '   +------------------------+\\n'\n            s += '     a  b  c  d  e  f  g  h'\n\n            return s\n        },\n\n        remove: function (square) {\n            return remove(square)\n        },\n\n        perft: function (depth) {\n            return perft(depth)\n        },\n\n        square_color: function (square) {\n            if (square in SQUARE_MAP) {\n                var sq_0x88 = SQUARE_MAP[square]\n                return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n            }\n\n            return null\n        },\n\n        history: function (options) {\n            var reversed_history = []\n            var move_history = []\n            var verbose =\n                typeof options !== 'undefined' &&\n                'verbose' in options &&\n                options.verbose\n\n            while (history.length > 0) {\n                reversed_history.push(undo_move())\n            }\n\n            while (reversed_history.length > 0) {\n                var move = reversed_history.pop()\n                if (verbose) {\n                    move_history.push(make_pretty(move))\n                } else {\n                    move_history.push(move_to_san(move, generate_moves({ legal: true })))\n                }\n                make_move(move)\n            }\n\n            return move_history\n        },\n\n        get_comment: function () {\n            return comments[generate_fen()]\n        },\n\n        set_comment: function (comment) {\n            comments[generate_fen()] = comment.replace('{', '[').replace('}', ']')\n        },\n\n        delete_comment: function () {\n            var comment = comments[generate_fen()]\n            delete comments[generate_fen()]\n            return comment\n        },\n\n        get_comments: function () {\n            prune_comments()\n            return Object.keys(comments).map(function (fen) {\n                return { fen: fen, comment: comments[fen] }\n            })\n        },\n\n        delete_comments: function () {\n            prune_comments()\n            return Object.keys(comments).map(function (fen) {\n                var comment = comments[fen]\n                delete comments[fen]\n                return { fen: fen, comment: comment }\n            })\n        },\n    }\n}", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nimport {pgnParser} from \"./parser/pgnParser.js\"\nimport {Chess} from \"chess.mjs/src/Chess.js\"\n\nfunction IllegalMoveException(fen, notation) {\n    this.fen = fen\n    this.notation = notation\n    this.toString = function () {\n        return \"IllegalMoveException: \" + fen + \" => \" + notation\n    }\n}\n\nexport class History {\n\n    constructor(historyString = null, setUpFen = null, sloppy = false) {\n        if (!historyString) {\n            this.clear()\n        } else {\n            const parsedMoves = pgnParser.parse(historyString\n                .replace(/\\s\\s+/g, \" \")\n                .replace(/\\n/g, \" \")\n            )\n            this.moves = this.traverse(parsedMoves[0], setUpFen, null, 1, sloppy)\n        }\n        this.setUpFen = setUpFen\n    }\n\n    clear() {\n        this.moves = []\n    }\n\n    traverse(parsedMoves, fen, parent = null, ply = 1, sloppy = false) {\n        const chess = fen ? new Chess(fen) : new Chess() // chess.js must be included in HTML\n        const moves = []\n        let previousMove = parent\n        for (let parsedMove of parsedMoves) {\n            if (parsedMove.notation) {\n                const notation = parsedMove.notation.notation\n                const move = chess.move(notation, {sloppy: sloppy})\n                if (move) {\n                    if (previousMove) {\n                        if (!move.previous) {\n                            move.previous = previousMove\n                        }\n                        if (!previousMove.next) {\n                            previousMove.next = move\n                        }\n                    } else {\n                        move.previous = null\n                    }\n                    move.ply = ply\n                    this.fillMoveFromChessState(move, chess)\n                    if (parsedMove.nag) {\n                        move.nag = parsedMove.nag[0]\n                    }\n                    if (parsedMove.commentBefore) {\n                        move.commentBefore = parsedMove.commentBefore\n                    }\n                    if (parsedMove.commentMove) {\n                        move.commentMove = parsedMove.commentMove\n                    }\n                    if (parsedMove.commentAfter) {\n                        move.commentAfter = parsedMove.commentAfter\n                    }\n                    move.variations = []\n                    const parsedVariations = parsedMove.variations\n                    if (parsedVariations.length > 0) {\n                        const lastFen = moves.length > 0 ? moves[moves.length - 1].fen : fen\n                        for (let parsedVariation of parsedVariations) {\n                            move.variations.push(this.traverse(parsedVariation, lastFen, previousMove, ply, sloppy))\n                        }\n                    }\n                    move.variation = moves\n                    moves.push(move)\n                    previousMove = move\n                } else {\n                    throw new IllegalMoveException(chess.fen(), notation)\n                }\n            }\n            ply++\n        }\n        return moves\n    }\n\n    fillMoveFromChessState(move, chess) {\n        move.fen = chess.fen()\n        move.uci = move.from + move.to + (move.promotion ? move.promotion : \"\")\n        move.variations = []\n        if (chess.game_over()) {\n            move.gameOver = true\n            if (chess.in_draw()) {\n                move.inDraw = true\n            }\n            if (chess.in_stalemate()) {\n                move.inStalemate = true\n            }\n            if (chess.insufficient_material()) {\n                move.insufficientMaterial = true\n            }\n            if (chess.in_threefold_repetition()) {\n                move.inThreefoldRepetition = true\n            }\n            if (chess.in_checkmate()) {\n                move.inCheckmate = true\n            }\n        }\n        if (chess.in_check()) {\n            move.inCheck = true\n        }\n    }\n\n    /**\n     * @param move\n     * @return the history to the move which may be in a variation\n     */\n    historyToMove(move) {\n        const moves = []\n        let pointer = move\n        moves.push(pointer)\n        while (pointer.previous) {\n            moves.push(pointer.previous)\n            pointer = pointer.previous\n        }\n        return moves.reverse()\n    }\n\n    /**\n     * Don't add the move, just validate, if it would be correct\n     * @param notation\n     * @param previous\n     * @param sloppy\n     * @returns {[]|{}}\n     */\n    validateMove(notation, previous = null, sloppy = true) {\n        if (!previous) {\n            if (this.moves.length > 0) {\n                previous = this.moves[this.moves.length - 1]\n            }\n        }\n        const chess = new Chess(this.setUpFen ? this.setUpFen : undefined)\n        if (previous) {\n            const historyToMove = this.historyToMove(previous)\n            for (const moveInHistory of historyToMove) {\n                chess.move(moveInHistory)\n            }\n        }\n        const move = chess.move(notation, {sloppy: sloppy})\n        if (move) {\n            this.fillMoveFromChessState(move, chess)\n        }\n        return move\n    }\n\n    addMove(notation, previous = null, sloppy = true) {\n        if (!previous) {\n            if (this.moves.length > 0) {\n                previous = this.moves[this.moves.length - 1]\n            }\n        }\n        const move = this.validateMove(notation, previous, sloppy)\n        if (!move) {\n            throw new Error(\"invalid move\")\n        }\n        move.previous = previous\n        if (previous) {\n            move.ply = previous.ply + 1\n            move.uci = move.from + move.to + (move.promotion ? move.promotion : \"\")\n            if (previous.next) {\n                previous.next.variations.push([])\n                move.variation = previous.next.variations[previous.next.variations.length - 1]\n                move.variation.push(move)\n            } else {\n                previous.next = move\n                move.variation = previous.variation\n                previous.variation.push(move)\n            }\n        } else {\n            move.variation = this.moves\n            move.ply = 1\n            this.moves.push(move)\n        }\n        return move\n    }\n\n    render(renderComments = true, renderNags = true) {\n        const renderVariation = (variation, needReminder = false) => {\n            let result = \"\"\n            for (let move of variation) {\n                if (move.ply % 2 === 1) {\n                    result += Math.floor(move.ply / 2) + 1 + \". \"\n                } else if (result.length === 0 || needReminder) {\n                    result += move.ply / 2 + \"... \"\n                }\n                needReminder = false\n                if (renderNags && move.nag) {\n                    result += \"$\" + move.nag + \" \"\n                }\n                if (renderComments && move.commentBefore) {\n                    result += \"{\" + move.commentBefore + \"} \"\n                    needReminder = true\n                }\n                result += move.san + \" \"\n                if (renderComments && move.commentMove) {\n                    result += \"{\" + move.commentMove + \"} \"\n                    needReminder = true\n                }\n                if (renderComments && move.commentAfter) {\n                    result += \"{\" + move.commentAfter + \"} \"\n                    needReminder = true\n                }\n                if (move.variations.length > 0) {\n                    for (let variation of move.variations) {\n                        result += \"(\" + renderVariation(variation) + \") \"\n                        needReminder = true\n                    }\n                }\n                result += \" \"\n            }\n            return result\n        }\n        let ret = renderVariation(this.moves)\n        // remove spaces before brackets\n        ret = ret.replace(/\\s+\\)/g, ')')\n        // remove double spaces\n        ret = ret.replace(/\\s\\s+/g, ' ').trim()\n        return ret\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nimport {Header, TAGS} from \"./Header.js\"\nimport {History} from \"./History.js\"\n\nexport class Pgn {\n\n    constructor(pgnString = \"\", props = {}) {\n        // only the header?\n        const lastHeaderElement =  pgnString.trim().slice(-1) === \"]\" ? pgnString.length : pgnString.lastIndexOf(\"]\\n\\n\") + 1\n        const headerString = pgnString.substring(0, lastHeaderElement)\n        const historyString = pgnString.substring(lastHeaderElement)\n        const sloppy = !!props.sloppy\n        this.header = new Header(headerString)\n        if (this.header.tags[TAGS.SetUp] === \"1\" && this.header.tags[TAGS.FEN]) {\n            this.history = new History(historyString, this.header.tags[TAGS.FEN], sloppy)\n        } else {\n            this.history = new History(historyString, null, sloppy)\n        }\n    }\n\n    wrap(str, maxLength) {\n        const words = str.split(\" \")\n        let lines = []\n        let line = \"\"\n        for (let i = 0; i < words.length; i++) {\n            const word = words[i]\n            if (line.length + word.length < maxLength) {\n                line += word + \" \"\n            } else {\n                lines.push(line.trim())\n                line = word + \" \"\n            }\n        }\n        lines.push(line.trim())\n        return lines.join(\"\\n\")\n    }\n\n    render(renderHeader = true, renderComments = true, renderNags = true) {\n        const header = renderHeader ? (this.header.render() + \"\\n\") : \"\";\n        let history = this.history.render(renderComments, renderNags);\n        if(this.header.tags[TAGS.Result]) {\n            history += \" \" + this.header.tags[TAGS.Result];\n        }\n        return header + this.wrap(history, 80)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chess\n * License: MIT, see file 'LICENSE'\n */\nimport {Pgn} from \"cm-pgn/src/Pgn.js\"\nimport {TAGS} from \"cm-pgn/src/Header.js\"\nimport {Chess as ChessJs, SQUARES} from \"chess.mjs/src/Chess.js\"\n\nexport const PIECES = {\n    p: {name: \"pawn\", value: 1},\n    n: {name: \"knight\", value: 3},\n    b: {name: \"bishop\", value: 3},\n    r: {name: \"rook\", value: 5},\n    q: {name: \"queen\", value: 9},\n    k: {name: \"king\", value: Infinity}\n}\n\nexport const COLOR = {\n    white: \"w\",\n    black: \"b\"\n}\n\nexport const FEN = {\n    empty: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n    start: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n}\n\nexport const EVENT_TYPE = {\n    illegalMove: \"illegalMove\",\n    legalMove: \"legalMove\",\n    undoMove: \"undoMove\",\n    initialized: \"initialized\"\n}\n\nfunction publishEvent(observers, event) {\n    for (const observer of observers) {\n        setTimeout(() => {\n            observer(event)\n        })\n    }\n}\n\n/**\n * Like chess.js, but handles variations and is written in ES5\n * Uses chess.js for validation and cm-pgn for the history and PGN header\n */\nexport class Chess {\n\n    constructor(fenOrProps = FEN.start) {\n        this.observers = []\n        this.props = {\n            fen: undefined, // use a fen or a pgn with setUpFen\n            pgn: undefined,\n            sloppy: true // sloppy parsing allows small mistakes in SAN\n        }\n        if (typeof fenOrProps === \"string\") {\n            this.props.fen = fenOrProps\n        } else if (typeof fenOrProps === \"object\") {\n            Object.assign(this.props, fenOrProps)\n        }\n        if (this.props.fen) {\n            this.load(this.props.fen)\n        } else if (this.props.pgn) {\n            this.loadPgn(this.props.pgn)\n        } else {\n            this.load(FEN.start)\n        }\n    }\n\n    /**\n     * @returns {string} the FEN of the last move, or the setUpFen(), if no move was made.\n     */\n    fen(move = this.lastMove()) {\n        if (move) {\n            return move.fen\n        } else {\n            return this.setUpFen()\n        }\n    }\n\n    /**\n     * @returns {string} the setUp FEN in the header or the default start-FEN\n     */\n    setUpFen() {\n        if (this.pgn.header.tags[TAGS.SetUp]) {\n            return this.pgn.header.tags[TAGS.FEN]\n        } else {\n            return FEN.start\n        }\n    }\n\n    /**\n     * @returns {Map<string, string>} the header tags of the PGN.\n     */\n    header() {\n        return this.pgn.header.tags\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is over at that move\n     */\n    gameOver(move = this.lastMove()) {\n        if (move) {\n            return move.gameOver\n        } else {\n            return new ChessJs(this.fen()).game_over()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in draw at that move\n     */\n    inDraw(move = this.lastMove()) {\n        if (move) {\n            return move.inDraw === true\n        } else {\n            return new ChessJs(this.fen()).in_draw()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in statemate at that move\n     */\n    inStalemate(move = this.lastMove()) {\n        if (move) {\n            return move.inStalemate === true\n        } else {\n            return new ChessJs(this.fen()).in_stalemate()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in draw, because of unsufficiant material at that move\n     */\n    insufficientMaterial(move = this.lastMove()) {\n        if (move) {\n            return move.insufficientMaterial === true\n        } else {\n            return new ChessJs(this.fen()).insufficient_material()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in draw, because of threefold repetition at that move\n     */\n    inThreefoldRepetition(move = this.lastMove()) {\n        return move && move.inThreefoldRepetition === true\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in checkmate at that move\n     */\n    inCheckmate(move = this.lastMove()) {\n        if (move) {\n            return move.inCheckmate === true\n        } else {\n            return new ChessJs(this.fen()).in_checkmate()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in check at that move\n     */\n    inCheck(move = this.lastMove()) {\n        if (move) {\n            return move.inCheck === true\n        } else {\n            return new ChessJs(this.fen()).in_check()\n        }\n    }\n\n    /**\n     * cm-chess uses cm-pgn for the history and header. See https://github.com/shaack/cm-pgn\n     * @returns {[]} the moves of the game history\n     */\n    history() {\n        return this.pgn.history.moves\n    }\n\n    /**\n     * @returns {null|move} the last move of the main variation or `null`, if no move was made\n     */\n    lastMove() {\n        if (this.pgn.history.moves.length > 0) {\n            return this.pgn.history.moves[this.pgn.history.moves.length - 1]\n        } else {\n            return null\n        }\n    }\n\n    /**\n     * Load a FEN\n     * @param fen\n     */\n    load(fen) {\n        const chess = new ChessJs(fen)\n        if (chess && chess.fen() === fen) {\n            this.pgn = new Pgn()\n            if (fen !== FEN.start) {\n                this.pgn.header.tags[TAGS.SetUp] = \"1\"\n                this.pgn.header.tags[TAGS.FEN] = chess.fen()\n                this.pgn.history.setUpFen = fen\n            }\n        } else {\n            throw Error(\"Invalid fen \" + fen)\n        }\n        publishEvent(this.observers, {type: EVENT_TYPE.initialized, fen: fen})\n    }\n\n    /**\n     * Load a PGN with variations, NAGs, header and annotations. cm-chess uses cm-pgn\n     * fot the header and history. See https://github.com/shaack/cm-pgn\n     * @param pgn\n     * @param sloppy to allow sloppy SAN\n     */\n    loadPgn(pgn, sloppy = this.props.sloppy) {\n        this.pgn = new Pgn(pgn, {sloppy: sloppy})\n        publishEvent(this.observers, {type: EVENT_TYPE.initialized, pgn: pgn})\n    }\n\n    /**\n     * Make a move in the game.\n     * @param move\n     * @param previousMove optional, the previous move (for variations)\n     * @param sloppy to allow sloppy SAN\n     * @returns {{}|null}\n     */\n    move(move, previousMove = undefined, sloppy = this.props.sloppy) {\n        try {\n            const moveResult = this.pgn.history.addMove(move, previousMove, sloppy)\n            publishEvent(this.observers,\n                {type: EVENT_TYPE.legalMove, move: moveResult, previousMove: previousMove})\n            return moveResult\n        } catch (e) {\n            publishEvent(this.observers,\n                {type: EVENT_TYPE.illegalMove, move: move, previousMove: previousMove})\n            return null\n        }\n    }\n\n    /**\n     * Return all valid moves\n     * @param options {{ square: \"e2\", piece: \"n\", verbose: true }}\n     * Fields with { verbose: true }\n     * - `color` indicates the color of the moving piece (w or b).\n     * - `from` and `to` fields are from and to squares in algebraic notation.\n     * - `piece`, `captured`, and `promotion` fields contain the lowercase representation of the applicable piece (pnbrqk). The captured and promotion fields are only present when the move is a valid capture or promotion.\n     * - `san` is the move in Standard Algebraic Notation (SAN).\n     * - `flags` field contains one or more of the string values:\n     *      n - a non-capture\n     *      b - a pawn push of two squares\n     *      e - an en passant capture\n     *      c - a standard capture\n     *      p - a promotion\n     *      k - kingside castling\n     *      q - queenside castling\n     *   A flags value of pc would mean that a pawn captured a piece on the 8th rank and promoted.\n     * @param move\n     * @returns {{}}\n     */\n    moves(options = undefined, move = this.lastMove()) {\n        const chessJs = new ChessJs(this.fen(move))\n        return chessJs.moves(options)\n    }\n\n    /**\n     * Don't make a move, just validate, if it would be a correct move\n     * @param move\n     * @param previousMove optional, the previous move (for variations)\n     * @param sloppy to allow sloppy SAN\n     * @returns the move object or null if not valid\n     */\n    validateMove(move, previousMove = undefined, sloppy = this.props.sloppy) {\n        return this.pgn.history.validateMove(move, previousMove, sloppy)\n    }\n\n    /**\n     * Render the game as PGN with header, comments and NAGs\n     * @param renderHeader optional, default true\n     * @param renderComments optional, default true\n     * @param renderNags optional, default true\n     * @returns {string} the PGN of the game.\n     */\n    renderPgn(renderHeader = true, renderComments = true, renderNags = true) {\n        return this.pgn.render(renderHeader, renderComments, renderNags)\n    }\n\n    /**\n     * Get the position of the specified figures at a specific move\n     * @param type \"p\", \"n\", \"b\",...\n     * @param color \"b\" or \"w\"\n     * @param move\n     * @returns {[]} the pieces (positions) at a specific move\n     */\n    pieces(type = undefined, color = undefined, move = this.lastMove()) {\n        const chessJs = move ? new ChessJs(move.fen) : new ChessJs(this.fen())\n        let result = []\n        for (let i = 0; i < 64; i++) {\n            const square = SQUARES[i]\n            const piece = chessJs.get(square)\n            if (piece) {\n                piece.square = square\n            }\n            if (!type) {\n                if (!color && piece) {\n                    result.push(piece)\n                }\n            } else if (!color && piece && piece.type === type) {\n                result.push(piece)\n            } else if (piece && piece.color === color && piece.type === type) {\n                result.push(piece)\n            }\n        }\n        return result\n    }\n\n    /**\n     * get the piece on a square\n     * @param square\n     * @param move\n     * @returns {{color: any, type: any}|null}\n     */\n    piece(square, move = this.lastMove()) {\n        const chessJs = move ? new ChessJs(move.fen) : new ChessJs(this.fen())\n        return chessJs.get(square)\n    }\n\n    /**\n     * @param move\n     * @returns {string} \"b\" or \"w\" the color to move in the main variation\n     */\n    turn(move = this.lastMove()) {\n        let factor = 0\n        if (this.setUpFen()) {\n            const fenParts = this.setUpFen().split(\" \")\n            if (fenParts[1] === COLOR.black) {\n                factor = 1\n            }\n        }\n        const ply = move ? move.ply : 0\n        return (ply) % 2 === factor ? COLOR.white : COLOR.black\n    }\n\n    /**\n     * Undo a move and all moves after it\n     * @param move\n     */\n    undo(move = this.lastMove()) {\n        // decouple from previous\n        if (move.previous) {\n            move.previous.next = undefined\n        }\n        // splice all next moves\n        const index = move.variation.findIndex(element => {\n            return element.ply === move.ply\n        })\n        move.variation = move.variation.splice(index)\n        publishEvent(this.observers, {type: EVENT_TYPE.undoMove, move: move})\n    }\n\n    plyCount() {\n        return this.history().length\n    }\n\n    fenOfPly(plyNumber) {\n        if (plyNumber > 0) {\n            return this.history()[plyNumber - 1].fen\n        } else {\n            return this.setUpFen()\n        }\n    }\n\n    addObserver(callback) {\n        this.observers.push(callback)\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nexport const FEN = {\n    start: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n    empty: \"8/8/8/8/8/8/8/8\"\n}\n\nexport class Position {\n\n    constructor(fen = FEN.empty) {\n        this.squares = new Array(64).fill(null)\n        this.setFen(fen)\n    }\n\n    setFen(fen = FEN.empty) {\n        const parts = fen.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").split(/\\/|\\s/)\n        for (let part = 0; part < 8; part++) {\n            const row = parts[7 - part].replace(/\\d/g, (str) => {\n                const numSpaces = parseInt(str)\n                let ret = ''\n                for (let i = 0; i < numSpaces; i++) {\n                    ret += '-'\n                }\n                return ret\n            })\n            for (let c = 0; c < 8; c++) {\n                const char = row.substring(c, c + 1)\n                let piece = null\n                if (char !== '-') {\n                    if (char.toUpperCase() === char) {\n                        piece = `w${char.toLowerCase()}`\n                    } else {\n                        piece = `b${char}`\n                    }\n                }\n                this.squares[part * 8 + c] = piece\n            }\n        }\n    }\n\n    getFen() {\n        let parts = new Array(8).fill(\"\")\n        for (let part = 0; part < 8; part++) {\n            let spaceCounter = 0\n            for (let i = 0; i < 8; i++) {\n                const piece = this.squares[part * 8 + i]\n                if (!piece) {\n                    spaceCounter++\n                } else {\n                    if (spaceCounter > 0) {\n                        parts[7 - part] += spaceCounter\n                        spaceCounter = 0\n                    }\n                    const color = piece.substring(0, 1)\n                    const name = piece.substring(1, 2)\n                    if (color === \"w\") {\n                        parts[7 - part] += name.toUpperCase()\n                    } else {\n                        parts[7 - part] += name\n                    }\n                }\n            }\n            if (spaceCounter > 0) {\n                parts[7 - part] += spaceCounter\n                spaceCounter = 0\n            }\n        }\n        return parts.join(\"/\")\n    }\n\n    getPieces(pieceColor = undefined, pieceType = undefined, sortBy = ['k', 'q', 'r', 'b', 'n', 'p']) {\n        const pieces = []\n        const sort = (a, b) => {\n            return sortBy.indexOf(a.name) - sortBy.indexOf(b.name)\n        }\n        for (let i = 0; i < 64; i++) {\n            const piece = this.squares[i]\n            if (piece) {\n                const type = piece.charAt(1)\n                const color = piece.charAt(0)\n                const square = Position.indexToSquare(i)\n                if(pieceType && pieceType !== type || pieceColor && pieceColor !== color) {\n                    continue\n                }\n                pieces.push({\n                    name: type, // deprecated, use type\n                    type: type,\n                    color: color,\n                    position: square, // deprecated, use square\n                    square: square\n                })\n            }\n        }\n        if (sortBy) {\n            pieces.sort(sort)\n        }\n        return pieces\n    }\n\n    movePiece(squareFrom, squareTo) {\n        if (!this.squares[Position.squareToIndex(squareFrom)]) {\n            console.warn(\"no piece on\", squareFrom)\n            return\n        }\n        this.squares[Position.squareToIndex(squareTo)] = this.squares[Position.squareToIndex(squareFrom)]\n        this.squares[Position.squareToIndex(squareFrom)] = null\n    }\n\n    setPiece(square, piece) {\n        this.squares[Position.squareToIndex(square)] = piece\n    }\n\n    getPiece(square) {\n        return this.squares[Position.squareToIndex(square)]\n    }\n\n    static squareToIndex(square) {\n        const coordinates = Position.squareToCoordinates(square)\n        return coordinates[0] + coordinates[1] * 8\n    }\n\n    static indexToSquare(index) {\n        return this.coordinatesToSquare([Math.floor(index % 8), index / 8])\n    }\n\n    static squareToCoordinates(square) {\n        const file = square.charCodeAt(0) - 97\n        const rank = square.charCodeAt(1) - 49\n        return [file, rank]\n    }\n\n    static coordinatesToSquare(coordinates) {\n        const file = String.fromCharCode(coordinates[0] + 97)\n        const rank = String.fromCharCode(coordinates[1] + 49)\n        return file + rank\n    }\n\n    toString() {\n        return this.getFen()\n    }\n\n    clone() {\n        const cloned = new Position()\n        cloned.squares = this.squares.slice(0)\n        return cloned\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Position} from \"./Position.js\"\n\nexport class ChessboardState {\n\n    constructor() {\n        this.position = new Position()\n        this.orientation = undefined\n        this.inputWhiteEnabled = false\n        this.inputBlackEnabled = false\n        this.squareSelectEnabled = false\n        this.moveInputCallback = null\n        this.extensionPoints = {}\n        this.moveInputProcess = Promise.resolve()\n    }\n\n    inputEnabled() {\n        return this.inputWhiteEnabled || this.inputBlackEnabled\n    }\n\n    invokeExtensionPoints(name, data = {}) {\n        const extensionPoints = this.extensionPoints[name]\n        const dataCloned = Object.assign({}, data)\n        dataCloned.extensionPoint = name\n        let returnValue = true\n        if (extensionPoints) {\n            for (const extensionPoint of extensionPoints) {\n                if(extensionPoint(dataCloned) === false) {\n                    returnValue = false\n                }\n            }\n        }\n        return returnValue\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\"\n\nexport class Svg {\n\n    /**\n     * create the Svg in the HTML DOM\n     * @param containerElement\n     * @returns {Element}\n     */\n    static createSvg(containerElement = undefined) {\n        let svg = document.createElementNS(SVG_NAMESPACE, \"svg\")\n        if (containerElement) {\n            svg.setAttribute(\"width\", \"100%\")\n            svg.setAttribute(\"height\", \"100%\")\n            containerElement.appendChild(svg)\n        }\n        return svg\n    }\n\n    /**\n     * Add an Element to an SVG DOM\n     * @param parent\n     * @param name\n     * @param attributes\n     * @returns {Element}\n     */\n    static addElement(parent, name, attributes = {}) {\n        let element = document.createElementNS(SVG_NAMESPACE, name)\n        if (name === \"use\") {\n            attributes[\"xlink:href\"] = attributes[\"href\"] // fix for safari\n        }\n        for (let attribute in attributes) {\n            if (attributes.hasOwnProperty(attribute)) {\n                if (attribute.indexOf(\":\") !== -1) {\n                    const value = attribute.split(\":\")\n                    element.setAttributeNS(\"http://www.w3.org/1999/\" + value[0], value[1], attributes[attribute])\n                } else {\n                    element.setAttribute(attribute, attributes[attribute])\n                }\n            }\n        }\n        parent.appendChild(element)\n        return element\n    }\n\n    /**\n     * Remove an element from an SVG DOM\n     * @param element\n     */\n    static removeElement(element) {\n        if(!element) {\n            console.warn(\"removeElement, element is\", element)\n            return\n        }\n        if (element.parentNode) {\n            element.parentNode.removeChild(element)\n        } else {\n            console.warn(element, \"without parentNode\")\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport const EXTENSION_POINT = {\n    positionChanged: \"positionChanged\", // the positions of the pieces was changed\n    boardChanged: \"boardChanged\", // the board (orientation) was changed\n    moveInputToggled: \"moveInputToggled\", // move input was enabled or disabled\n    moveInput: \"moveInput\", // move started, moving over a square, validating or canceled\n    beforeRedrawBoard: \"beforeRedrawBoard\", // called before redrawing the board\n    afterRedrawBoard: \"afterRedrawBoard\", // called after redrawing the board\n    redrawBoard: \"redrawBoard\", // called after redrawing the board, DEPRECATED, use afterRedrawBoard 2023-09-18\n    animation: \"animation\", // called on animation start, end, and on every animation frame\n    destroy: \"destroy\" // called, before the board is destroyed\n}\n\nexport class Extension {\n\n    constructor(chessboard) {\n        this.chessboard = chessboard\n    }\n\n    registerExtensionPoint(name, callback) {\n        if(name === EXTENSION_POINT.redrawBoard) { // deprecated 2023-09-18\n            console.warn(\"EXTENSION_POINT.redrawBoard is deprecated, use EXTENSION_POINT.afterRedrawBoard\")\n            name = EXTENSION_POINT.afterRedrawBoard\n        }\n        if (!this.chessboard.state.extensionPoints[name]) {\n            this.chessboard.state.extensionPoints[name] = []\n        }\n        this.chessboard.state.extensionPoints[name].push(callback)\n    }\n\n    /** @deprecated 2023-05-18 */\n    registerMethod(name, callback) {\n        console.warn(\"registerMethod is deprecated, just add methods directly to the chessboard instance\")\n        if (!this.chessboard[name]) {\n            this.chessboard[name] = (...args) => {\n                return callback.apply(this, args)\n            }\n        } else {\n            log.error(\"method\", name, \"already exists\")\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport class Utils {\n\n    static delegate(element, eventName, selector, handler) {\n        const eventListener = function (event) {\n            let target = event.target\n            while (target && target !== this) {\n                if (target.matches(selector)) {\n                    handler.call(target, event)\n                }\n                target = target.parentNode\n            }\n        }\n        element.addEventListener(eventName, eventListener)\n        return {\n            remove: function () {\n                element.removeEventListener(eventName, eventListener)\n            }\n        }\n    }\n\n    static mergeObjects(target, source) {\n        const isObject = (obj) => obj && typeof obj === 'object'\n        if (!isObject(target) || !isObject(source)) {\n            return source\n        }\n        for (const key of Object.keys(source)) {\n            if (source[key] instanceof Object) {\n                Object.assign(source[key], Utils.mergeObjects(target[key], source[key]))\n            }\n        }\n        Object.assign(target || {}, source)\n        return target\n    }\n\n    static createDomElement(html) {\n        const template = document.createElement('template')\n        template.innerHTML = html.trim()\n        return template.content.firstChild\n    }\n\n    static createTask() {\n        let resolve, reject\n        const promise = new Promise(function (_resolve, _reject) {\n            resolve = _resolve\n            reject = _reject\n        })\n        promise.resolve = resolve\n        promise.reject = reject\n        return promise\n    }\n\n    static isAbsoluteUrl(url) {\n        return url.indexOf(\"://\") !== -1 || url.startsWith(\"/\")\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {FEN, Position} from \"../model/Position.js\"\nimport {Svg} from \"../lib/Svg.js\"\nimport {EXTENSION_POINT} from \"../model/Extension.js\"\nimport {Utils} from \"../lib/Utils.js\"\n\n/*\n* Thanks to markosyan for the idea of the PromiseQueue\n* https://medium.com/@karenmarkosyan/how-to-manage-promises-into-dynamic-queue-with-vanilla-javascript-9d0d1f8d4df5\n*/\n\nexport const ANIMATION_EVENT_TYPE = {\n    start: \"start\",\n    frame: \"frame\",\n    end: \"end\"\n}\n\nexport class PromiseQueue {\n\n    constructor() {\n        this.queue = []\n        this.workingOnPromise = false\n        this.stop = false\n    }\n\n    async enqueue(promise) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({\n                promise, resolve, reject,\n            })\n            this.dequeue()\n        })\n    }\n\n    dequeue() {\n        if (this.workingOnPromise) {\n            return\n        }\n        if (this.stop) {\n            this.queue = []\n            this.stop = false\n            return\n        }\n        const entry = this.queue.shift()\n        if (!entry) {\n            return\n        }\n        try {\n            this.workingOnPromise = true\n            entry.promise().then((value) => {\n                this.workingOnPromise = false\n                entry.resolve(value)\n                this.dequeue()\n            }).catch(err => {\n                this.workingOnPromise = false\n                entry.reject(err)\n                this.dequeue()\n            })\n        } catch (err) {\n            this.workingOnPromise = false\n            entry.reject(err)\n            this.dequeue()\n        }\n        return true\n    }\n\n    destroy() {\n        this.stop = true\n    }\n\n}\n\n\nconst CHANGE_TYPE = {\n    move: 0,\n    appear: 1,\n    disappear: 2\n}\n\nexport class PositionsAnimation {\n\n    constructor(view, fromPosition, toPosition, duration, callback) {\n        this.view = view\n        if (fromPosition && toPosition) {\n            this.animatedElements = this.createAnimation(fromPosition.squares, toPosition.squares)\n            this.duration = duration\n            this.callback = callback\n            this.frameHandle = requestAnimationFrame(this.animationStep.bind(this))\n        } else {\n            console.error(\"fromPosition\", fromPosition, \"toPosition\", toPosition)\n        }\n        this.view.positionsAnimationTask = Utils.createTask()\n        this.view.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.animation, {\n            type: ANIMATION_EVENT_TYPE.start\n        })\n    }\n\n    static seekChanges(fromSquares, toSquares) {\n        const appearedList = [], disappearedList = [], changes = []\n        for (let i = 0; i < 64; i++) {\n            const previousSquare = fromSquares[i]\n            const newSquare = toSquares[i]\n            if (newSquare !== previousSquare) {\n                if (newSquare) {\n                    appearedList.push({piece: newSquare, index: i})\n                }\n                if (previousSquare) {\n                    disappearedList.push({piece: previousSquare, index: i})\n                }\n            }\n        }\n        appearedList.forEach((appeared) => {\n            let shortestDistance = 8\n            let foundMoved = null\n            disappearedList.forEach((disappeared) => {\n                if (appeared.piece === disappeared.piece) {\n                    const moveDistance = PositionsAnimation.squareDistance(appeared.index, disappeared.index)\n                    if (moveDistance < shortestDistance) {\n                        foundMoved = disappeared\n                        shortestDistance = moveDistance\n                    }\n                }\n            })\n            if (foundMoved) {\n                disappearedList.splice(disappearedList.indexOf(foundMoved), 1) // remove from disappearedList, because it is moved now\n                changes.push({\n                    type: CHANGE_TYPE.move,\n                    piece: appeared.piece,\n                    atIndex: foundMoved.index,\n                    toIndex: appeared.index\n                })\n            } else {\n                changes.push({type: CHANGE_TYPE.appear, piece: appeared.piece, atIndex: appeared.index})\n            }\n        })\n        disappearedList.forEach((disappeared) => {\n            changes.push({type: CHANGE_TYPE.disappear, piece: disappeared.piece, atIndex: disappeared.index})\n        })\n        return changes\n    }\n\n    createAnimation(fromSquares, toSquares) {\n        const changes = PositionsAnimation.seekChanges(fromSquares, toSquares)\n        const animatedElements = []\n        changes.forEach((change) => {\n            const animatedItem = {\n                type: change.type\n            }\n            switch (change.type) {\n                case CHANGE_TYPE.move:\n                    animatedItem.element = this.view.getPieceElement(Position.indexToSquare(change.atIndex))\n                    animatedItem.element.parentNode.appendChild(animatedItem.element) // move element to top layer\n                    animatedItem.atPoint = this.view.indexToPoint(change.atIndex)\n                    animatedItem.toPoint = this.view.indexToPoint(change.toIndex)\n                    break\n                case CHANGE_TYPE.appear:\n                    animatedItem.element = this.view.drawPieceOnSquare(Position.indexToSquare(change.atIndex), change.piece)\n                    animatedItem.element.style.opacity = 0\n                    break\n                case CHANGE_TYPE.disappear:\n                    animatedItem.element = this.view.getPieceElement(Position.indexToSquare(change.atIndex))\n                    break\n            }\n            animatedElements.push(animatedItem)\n        })\n        return animatedElements\n    }\n\n    animationStep(time) {\n        if(!this.view || !this.view.chessboard.state) { // board was destroyed\n            return\n        }\n        if (!this.startTime) {\n            this.startTime = time\n        }\n        const timeDiff = time - this.startTime\n        if (timeDiff <= this.duration) {\n            this.frameHandle = requestAnimationFrame(this.animationStep.bind(this))\n        } else {\n            cancelAnimationFrame(this.frameHandle)\n            this.animatedElements.forEach((animatedItem) => {\n                if (animatedItem.type === CHANGE_TYPE.disappear) {\n                    Svg.removeElement(animatedItem.element)\n                }\n            })\n            this.view.positionsAnimationTask.resolve()\n            this.view.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.animation, {\n                type: ANIMATION_EVENT_TYPE.end\n            })\n            this.callback()\n            return\n        }\n        const t = Math.min(1, timeDiff / this.duration)\n        let progress = t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t // easeInOut\n        if (isNaN(progress) || progress > 0.99) {\n            progress = 1\n        }\n        this.animatedElements.forEach((animatedItem) => {\n            if (animatedItem.element) {\n                switch (animatedItem.type) {\n                    case CHANGE_TYPE.move:\n                        animatedItem.element.transform.baseVal.removeItem(0)\n                        const transform = (this.view.svg.createSVGTransform())\n                        transform.setTranslate(\n                            animatedItem.atPoint.x + (animatedItem.toPoint.x - animatedItem.atPoint.x) * progress,\n                            animatedItem.atPoint.y + (animatedItem.toPoint.y - animatedItem.atPoint.y) * progress)\n                        animatedItem.element.transform.baseVal.appendItem(transform)\n                        break\n                    case CHANGE_TYPE.appear:\n                        animatedItem.element.style.opacity = Math.round(progress * 100) / 100\n                        break\n                    case CHANGE_TYPE.disappear:\n                        animatedItem.element.style.opacity = Math.round((1 - progress) * 100) / 100\n                        break\n                }\n            } else {\n                console.warn(\"animatedItem has no element\", animatedItem)\n            }\n        })\n        this.view.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.animation, {\n            type: ANIMATION_EVENT_TYPE.frame,\n            progress: progress\n        })\n    }\n\n    static squareDistance(index1, index2) {\n        const file1 = index1 % 8\n        const rank1 = Math.floor(index1 / 8)\n        const file2 = index2 % 8\n        const rank2 = Math.floor(index2 / 8)\n        return Math.max(Math.abs(rank2 - rank1), Math.abs(file2 - file1))\n    }\n\n}\n\nexport class PositionAnimationsQueue extends PromiseQueue {\n\n    constructor(chessboard) {\n        super()\n        this.chessboard = chessboard\n    }\n\n    async enqueuePositionChange(positionFrom, positionTo, animated) {\n        if(positionFrom.getFen() === positionTo.getFen()) {\n            return Promise.resolve()\n        } else {\n            return super.enqueue(() => new Promise((resolve) => {\n                let duration = animated ? this.chessboard.props.style.animationDuration : 0\n                if (this.queue.length > 0) {\n                    duration = duration / (1 + Math.pow(this.queue.length / 5, 2))\n                }\n                new PositionsAnimation(this.chessboard.view,\n                    positionFrom, positionTo, animated ? duration : 0,\n                    () => {\n                        if (this.chessboard.view) { // if destroyed, no view anymore\n                            this.chessboard.view.redrawPieces(positionTo.squares)\n                        }\n                        resolve()\n                    }\n                )\n            }))\n        }\n    }\n\n    async enqueueTurnBoard(position, color, animated) {\n        return super.enqueue(() => new Promise((resolve) => {\n            const emptyPosition = new Position(FEN.empty)\n            let duration = animated ? this.chessboard.props.style.animationDuration : 0\n            if(this.queue.length > 0) {\n                duration = duration / (1 + Math.pow(this.queue.length / 5, 2))\n            }\n            new PositionsAnimation(this.chessboard.view,\n                position, emptyPosition, animated ? duration : 0,\n                () => {\n                    this.chessboard.state.orientation = color\n                    this.chessboard.view.redrawBoard()\n                    this.chessboard.view.redrawPieces(emptyPosition.squares)\n                    new PositionsAnimation(this.chessboard.view,\n                        emptyPosition, position, animated ? duration : 0,\n                        () => {\n                            this.chessboard.view.redrawPieces(position.squares)\n                            resolve()\n                        }\n                    )\n                }\n            )\n        }))\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Svg} from \"../lib/Svg.js\"\nimport {Utils} from \"../lib/Utils.js\"\n\nconst MOVE_INPUT_STATE = {\n    waitForInputStart: \"waitForInputStart\",\n    pieceClickedThreshold: \"pieceClickedThreshold\",\n    clickTo: \"clickTo\",\n    secondClickThreshold: \"secondClickThreshold\",\n    dragTo: \"dragTo\",\n    clickDragTo: \"clickDragTo\",\n    moveDone: \"moveDone\",\n    reset: \"reset\"\n}\n\nexport const MOVE_CANCELED_REASON = {\n    secondClick: \"secondClick\", // clicked the same piece\n    secondaryClick: \"secondaryClick\", // right click while moving\n    movedOutOfBoard: \"movedOutOfBoard\",\n    draggedBack: \"draggedBack\", // dragged to the start square\n    clickedAnotherPiece: \"clickedAnotherPiece\" // of the same color\n}\n\nconst DRAG_THRESHOLD = 4\n\nexport class VisualMoveInput {\n\n    constructor(view) {\n        this.view = view\n        this.chessboard = view.chessboard\n        this.moveInputState = null\n        this.fromSquare = null\n        this.toSquare = null\n\n        this.setMoveInputState(MOVE_INPUT_STATE.waitForInputStart)\n    }\n\n    moveInputStartedCallback(square) {\n        const result = this.view.moveInputStartedCallback(square)\n        if (result) {\n            this.chessboard.state.moveInputProcess = Utils.createTask()\n            this.chessboard.state.moveInputProcess.then((result) => {\n                if (this.moveInputState === MOVE_INPUT_STATE.waitForInputStart ||\n                    this.moveInputState === MOVE_INPUT_STATE.moveDone) {\n                    this.view.moveInputFinishedCallback(this.fromSquare, this.toSquare, result)\n                }\n            })\n        }\n        return result\n    }\n\n    movingOverSquareCallback(fromSquare, toSquare) {\n        this.view.movingOverSquareCallback(fromSquare, toSquare)\n    }\n\n    validateMoveInputCallback(fromSquare, toSquare) {\n        const result = this.view.validateMoveInputCallback(fromSquare, toSquare)\n        this.chessboard.state.moveInputProcess.resolve(result)\n        return result\n    }\n\n    moveInputCanceledCallback(fromSquare, toSquare, reason) {\n        this.view.moveInputCanceledCallback(fromSquare, toSquare, reason)\n        this.chessboard.state.moveInputProcess.resolve()\n    }\n\n    setMoveInputState(newState, params = undefined) {\n        const prevState = this.moveInputState\n        this.moveInputState = newState\n\n        switch (newState) {\n\n            case MOVE_INPUT_STATE.waitForInputStart:\n                break\n\n            case MOVE_INPUT_STATE.pieceClickedThreshold:\n                if (MOVE_INPUT_STATE.waitForInputStart !== prevState && MOVE_INPUT_STATE.clickTo !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.pointerMoveListener) {\n                    removeEventListener(this.pointerMoveListener.type, this.pointerMoveListener)\n                    this.pointerMoveListener = null\n                }\n                if (this.pointerUpListener) {\n                    removeEventListener(this.pointerUpListener.type, this.pointerUpListener)\n                    this.pointerUpListener = null\n                }\n                this.fromSquare = params.square\n                this.toSquare = null\n                this.movedPiece = params.piece\n                this.startPoint = params.point\n                if (!this.pointerMoveListener && !this.pointerUpListener) {\n                    if (params.type === \"mousedown\") {\n                        this.pointerMoveListener = this.onPointerMove.bind(this)\n                        this.pointerMoveListener.type = \"mousemove\"\n                        addEventListener(\"mousemove\", this.pointerMoveListener)\n                        this.pointerUpListener = this.onPointerUp.bind(this)\n                        this.pointerUpListener.type = \"mouseup\"\n                        addEventListener(\"mouseup\", this.pointerUpListener)\n                    } else if (params.type === \"touchstart\") {\n                        this.pointerMoveListener = this.onPointerMove.bind(this)\n                        this.pointerMoveListener.type = \"touchmove\"\n                        addEventListener(\"touchmove\", this.pointerMoveListener)\n                        this.pointerUpListener = this.onPointerUp.bind(this)\n                        this.pointerUpListener.type = \"touchend\"\n                        addEventListener(\"touchend\", this.pointerUpListener)\n                    } else {\n                        throw Error(\"4b74af\")\n                    }\n                    if (!this.contextMenuListener) {\n                        this.contextMenuListener = this.onContextMenu.bind(this)\n                        this.chessboard.view.svg.addEventListener(\"contextmenu\", this.contextMenuListener)\n                    }\n                } else {\n                    throw Error(\"94ad0c\")\n                }\n                break\n\n            case MOVE_INPUT_STATE.clickTo:\n                if (this.draggablePiece) {\n                    Svg.removeElement(this.draggablePiece)\n                    this.draggablePiece = null\n                }\n                if (prevState === MOVE_INPUT_STATE.dragTo) {\n                    this.view.setPieceVisibility(params.square, true)\n                }\n                break\n\n            case MOVE_INPUT_STATE.secondClickThreshold:\n                if (MOVE_INPUT_STATE.clickTo !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.startPoint = params.point\n                break\n\n            case MOVE_INPUT_STATE.dragTo:\n                if (MOVE_INPUT_STATE.pieceClickedThreshold !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.view.chessboard.state.inputEnabled()) {\n                    this.view.setPieceVisibility(params.square, false)\n                    this.createDraggablePiece(params.piece)\n                }\n                break\n\n            case MOVE_INPUT_STATE.clickDragTo:\n                if (MOVE_INPUT_STATE.secondClickThreshold !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.view.chessboard.state.inputEnabled()) {\n                    this.view.setPieceVisibility(params.square, false)\n                    this.createDraggablePiece(params.piece)\n                }\n                break\n\n            case MOVE_INPUT_STATE.moveDone:\n                if ([MOVE_INPUT_STATE.dragTo, MOVE_INPUT_STATE.clickTo, MOVE_INPUT_STATE.clickDragTo].indexOf(prevState) === -1) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.toSquare = params.square\n                if (this.toSquare && this.validateMoveInputCallback(this.fromSquare, this.toSquare)) {\n                    this.chessboard.movePiece(this.fromSquare, this.toSquare, prevState === MOVE_INPUT_STATE.clickTo).then(() => {\n                        if (prevState === MOVE_INPUT_STATE.clickTo) {\n                            this.view.setPieceVisibility(this.toSquare, true)\n                        }\n                        this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                    })\n                } else {\n                    this.view.setPieceVisibility(this.fromSquare, true)\n                    this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                }\n                break\n\n            case MOVE_INPUT_STATE.reset:\n                if (this.fromSquare && !this.toSquare && this.movedPiece) {\n                    this.chessboard.state.position.setPiece(this.fromSquare, this.movedPiece)\n                }\n                this.fromSquare = null\n                this.toSquare = null\n                this.movedPiece = null\n                if (this.draggablePiece) {\n                    Svg.removeElement(this.draggablePiece)\n                    this.draggablePiece = null\n                }\n                if (this.pointerMoveListener) {\n                    removeEventListener(this.pointerMoveListener.type, this.pointerMoveListener)\n                    this.pointerMoveListener = null\n                }\n                if (this.pointerUpListener) {\n                    removeEventListener(this.pointerUpListener.type, this.pointerUpListener)\n                    this.pointerUpListener = null\n                }\n                if (this.contextMenuListener) {\n                    removeEventListener(\"contextmenu\", this.contextMenuListener)\n                    this.contextMenuListener = null\n                }\n                this.setMoveInputState(MOVE_INPUT_STATE.waitForInputStart)\n                // set temporarily hidden pieces visible again\n                const hiddenPieces = this.view.piecesGroup.querySelectorAll(\"[visibility=hidden]\")\n                for (let i = 0; i < hiddenPieces.length; i++) {\n                    hiddenPieces[i].removeAttribute(\"visibility\")\n                }\n                break\n\n            default:\n                throw Error(`260b09: moveInputState ${newState}`)\n        }\n    }\n\n    createDraggablePiece(pieceName) {\n        // maybe I should use the existing piece from the board and don't create a new one\n        if (this.draggablePiece) {\n            throw Error(\"draggablePiece already exists\")\n        }\n        this.draggablePiece = Svg.createSvg(document.body)\n        this.draggablePiece.classList.add(\"cm-chessboard-draggable-piece\")\n        this.draggablePiece.setAttribute(\"width\", this.view.squareWidth)\n        this.draggablePiece.setAttribute(\"height\", this.view.squareHeight)\n        this.draggablePiece.setAttribute(\"style\", \"pointer-events: none\")\n        this.draggablePiece.name = pieceName\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.view.getSpriteUrl()\n        const piece = Svg.addElement(this.draggablePiece, \"use\", {\n            href: `${spriteUrl}#${pieceName}`\n        })\n        const scaling = this.view.squareHeight / this.chessboard.props.style.pieces.tileSize\n        const transformScale = (this.draggablePiece.createSVGTransform())\n        transformScale.setScale(scaling, scaling)\n        piece.transform.baseVal.appendItem(transformScale)\n    }\n\n    moveDraggablePiece(x, y) {\n        this.draggablePiece.setAttribute(\"style\",\n            `pointer-events: none; position: absolute; left: ${x - (this.view.squareHeight / 2)}px; top: ${y - (this.view.squareHeight / 2)}px`)\n    }\n\n    onPointerDown(e) {\n        if (!(e.type === \"mousedown\" && e.button === 0 || e.type === \"touchstart\")) {\n            return\n        }\n        const square = e.target.getAttribute(\"data-square\")\n        if (!square) { // pointer on square\n            return\n        }\n        const pieceName = this.chessboard.getPiece(square)\n        let color\n        if (pieceName) {\n            color = pieceName ? pieceName.substring(0, 1) : null\n            // allow scrolling, if not pointed on draggable piece\n            if (color === \"w\" && this.chessboard.state.inputWhiteEnabled ||\n                color === \"b\" && this.chessboard.state.inputBlackEnabled) {\n                e.preventDefault()\n            }\n        }\n        if (this.moveInputState !== MOVE_INPUT_STATE.waitForInputStart ||\n            this.chessboard.state.inputWhiteEnabled && color === \"w\" ||\n            this.chessboard.state.inputBlackEnabled && color === \"b\") {\n            let point\n            if (e.type === \"mousedown\") {\n                point = {x: e.clientX, y: e.clientY}\n            } else if (e.type === \"touchstart\") {\n                point = {x: e.touches[0].clientX, y: e.touches[0].clientY}\n            }\n            if (this.moveInputState === MOVE_INPUT_STATE.waitForInputStart && pieceName && this.moveInputStartedCallback(square)) {\n                this.setMoveInputState(MOVE_INPUT_STATE.pieceClickedThreshold, {\n                    square: square,\n                    piece: pieceName,\n                    point: point,\n                    type: e.type\n                })\n            } else if (this.moveInputState === MOVE_INPUT_STATE.clickTo) {\n                if (square === this.fromSquare) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.secondClickThreshold, {\n                        square: square,\n                        piece: pieceName,\n                        point: point,\n                        type: e.type\n                    })\n                } else {\n                    const pieceName = this.chessboard.getPiece(square)\n                    const pieceColor = pieceName ? pieceName.substring(0, 1) : null\n                    const startPieceName = this.chessboard.getPiece(this.fromSquare)\n                    const startPieceColor = startPieceName ? startPieceName.substring(0, 1) : null\n                    if (color && startPieceColor === pieceColor) {\n                        this.moveInputCanceledCallback(this.fromSquare, square, MOVE_CANCELED_REASON.clickedAnotherPiece)\n                        if (this.moveInputStartedCallback(square)) {\n                            this.setMoveInputState(MOVE_INPUT_STATE.pieceClickedThreshold, {\n                                square: square,\n                                piece: pieceName,\n                                point: point,\n                                type: e.type\n                            })\n                        } else {\n                            this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                        }\n                    } else {\n                        this.setMoveInputState(MOVE_INPUT_STATE.moveDone, {square: square})\n                    }\n                }\n            }\n        }\n    }\n\n    onPointerMove(e) {\n        let pageX, pageY, clientX, clientY, target\n        if (e.type === \"mousemove\") {\n            clientX = e.clientX\n            clientY = e.clientY\n            pageX = e.pageX\n            pageY = e.pageY\n            target = e.target\n        } else if (e.type === \"touchmove\") {\n            clientX = e.touches[0].clientX\n            clientY = e.touches[0].clientY\n            pageX = e.touches[0].pageX\n            pageY = e.touches[0].pageY\n            target = document.elementFromPoint(clientX, clientY)\n        }\n        if (this.moveInputState === MOVE_INPUT_STATE.pieceClickedThreshold || this.moveInputState === MOVE_INPUT_STATE.secondClickThreshold) {\n            if (Math.abs(this.startPoint.x - clientX) > DRAG_THRESHOLD || Math.abs(this.startPoint.y - clientY) > DRAG_THRESHOLD) {\n                if (this.moveInputState === MOVE_INPUT_STATE.secondClickThreshold) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.clickDragTo, {\n                        square: this.fromSquare,\n                        piece: this.movedPiece\n                    })\n                } else {\n                    this.setMoveInputState(MOVE_INPUT_STATE.dragTo, {square: this.fromSquare, piece: this.movedPiece})\n                }\n                if (this.view.chessboard.state.inputEnabled()) {\n                    this.moveDraggablePiece(pageX, pageY)\n                }\n            }\n        } else if (this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo || this.moveInputState === MOVE_INPUT_STATE.clickTo) {\n            if (target && target.getAttribute && target.parentElement === this.view.boardGroup) {\n                const square = target.getAttribute(\"data-square\")\n                if (square !== this.fromSquare && square !== this.toSquare) {\n                    this.toSquare = square\n                    this.movingOverSquareCallback(this.fromSquare, this.toSquare)\n                } else if (square === this.fromSquare && this.toSquare !== null) {\n                    this.toSquare = null\n                    this.movingOverSquareCallback(this.fromSquare, null)\n                }\n            } else if (this.toSquare !== null) {\n                this.toSquare = null\n                this.movingOverSquareCallback(this.fromSquare, null)\n            }\n\n            if (this.view.chessboard.state.inputEnabled() && (this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo)) {\n                this.moveDraggablePiece(pageX, pageY)\n            }\n        }\n    }\n\n    onPointerUp(e) {\n        let target\n        if (e.type === \"mouseup\") {\n            target = e.target\n        } else if (e.type === \"touchend\") {\n            target = document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY)\n        }\n        if (target && target.getAttribute) {\n            const square = target.getAttribute(\"data-square\")\n\n            if (square) {\n                if (this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo) {\n                    if (this.fromSquare === square) {\n                        if (this.moveInputState === MOVE_INPUT_STATE.clickDragTo) {\n                            this.chessboard.state.position.setPiece(this.fromSquare, this.movedPiece)\n                            this.view.setPieceVisibility(this.fromSquare)\n                            this.moveInputCanceledCallback(square, null, MOVE_CANCELED_REASON.draggedBack)\n                            this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                        } else {\n                            this.setMoveInputState(MOVE_INPUT_STATE.clickTo, {square: square})\n                        }\n                    } else {\n                        this.setMoveInputState(MOVE_INPUT_STATE.moveDone, {square: square})\n                    }\n                } else if (this.moveInputState === MOVE_INPUT_STATE.pieceClickedThreshold) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.clickTo, {square: square})\n                } else if (this.moveInputState === MOVE_INPUT_STATE.secondClickThreshold) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                    this.moveInputCanceledCallback(square, null, MOVE_CANCELED_REASON.secondClick)\n                }\n            } else {\n                this.view.redrawPieces()\n                const moveStartSquare = this.fromSquare\n                this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                this.moveInputCanceledCallback(moveStartSquare, null, MOVE_CANCELED_REASON.movedOutOfBoard)\n            }\n        } else {\n            this.view.redrawPieces()\n            this.setMoveInputState(MOVE_INPUT_STATE.reset)\n        }\n    }\n\n    onContextMenu(e) { // while moving\n        e.preventDefault()\n        this.view.redrawPieces()\n        this.setMoveInputState(MOVE_INPUT_STATE.reset)\n        this.moveInputCanceledCallback(this.fromSquare, null, MOVE_CANCELED_REASON.secondaryClick)\n    }\n\n    isDragging() {\n        return this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo\n    }\n\n    destroy() {\n        this.setMoveInputState(MOVE_INPUT_STATE.reset)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {VisualMoveInput} from \"./VisualMoveInput.js\"\nimport {Position} from \"../model/Position.js\"\nimport {EXTENSION_POINT} from \"../model/Extension.js\"\nimport {Svg} from \"../lib/Svg.js\"\nimport {Utils} from \"../lib/Utils.js\"\n\nexport const COLOR = {\n    white: \"w\",\n    black: \"b\"\n}\nexport const INPUT_EVENT_TYPE = {\n    moveInputStarted: \"moveInputStarted\",\n    movingOverSquare: \"movingOverSquare\", // while dragging or hover after click\n    validateMoveInput: \"validateMoveInput\",\n    moveInputCanceled: \"moveInputCanceled\",\n    moveInputFinished: \"moveInputFinished\"\n}\nexport const POINTER_EVENTS = {\n    pointercancel: \"pointercancel\",\n    pointerdown: \"pointerdown\",\n    pointerenter: \"pointerenter\",\n    pointerleave: \"pointerleave\",\n    pointermove: \"pointermove\",\n    pointerout: \"pointerout\",\n    pointerover: \"pointerover\",\n    pointerup: \"pointerup\"\n}\nexport const BORDER_TYPE = {\n    none: \"none\", // no border\n    thin: \"thin\", // thin border\n    frame: \"frame\" // wide border with coordinates in it\n}\n\nexport class ChessboardView {\n    constructor(chessboard) {\n        this.chessboard = chessboard\n        this.visualMoveInput = new VisualMoveInput(this)\n        if (chessboard.props.assetsCache) {\n            this.cacheSpriteToDiv(\"cm-chessboard-sprite\", this.getSpriteUrl())\n        }\n        this.container = document.createElement(\"div\")\n        this.chessboard.context.appendChild(this.container)\n        if (chessboard.props.responsive) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                this.resizeObserver = new ResizeObserver(() => {\n                    setTimeout(() => { // prevents \"ResizeObserver loop completed with undelivered notifications.\"\n                        this.handleResize()\n                    })\n                })\n                this.resizeObserver.observe(this.chessboard.context)\n            } else {\n                this.resizeListener = this.handleResize.bind(this)\n                window.addEventListener(\"resize\", this.resizeListener)\n            }\n        }\n        this.positionsAnimationTask = Promise.resolve()\n        this.pointerDownListener = this.pointerDownHandler.bind(this)\n        this.container.addEventListener(\"mousedown\", this.pointerDownListener)\n        this.container.addEventListener(\"touchstart\", this.pointerDownListener, {passive: false})\n        this.createSvgAndGroups()\n        this.handleResize()\n    }\n\n    pointerDownHandler(e) {\n        this.visualMoveInput.onPointerDown(e)\n    }\n\n    destroy() {\n        this.visualMoveInput.destroy()\n        if (this.resizeObserver) {\n            this.resizeObserver.unobserve(this.chessboard.context)\n        }\n        if (this.resizeListener) {\n            window.removeEventListener(\"resize\", this.resizeListener)\n        }\n        this.chessboard.context.removeEventListener(\"mousedown\", this.pointerDownListener)\n        this.chessboard.context.removeEventListener(\"touchstart\", this.pointerDownListener)\n        Svg.removeElement(this.svg)\n        this.container.remove()\n    }\n\n    // Sprite //\n\n    cacheSpriteToDiv(wrapperId, url) {\n        if (!document.getElementById(wrapperId)) {\n            const wrapper = document.createElement(\"div\")\n            wrapper.style.transform = \"scale(0)\"\n            wrapper.style.position = \"absolute\"\n            wrapper.setAttribute(\"aria-hidden\", \"true\")\n            wrapper.id = wrapperId\n            document.body.appendChild(wrapper)\n            const xhr = new XMLHttpRequest()\n            xhr.open(\"GET\", url, true)\n            xhr.onload = function () {\n                wrapper.insertAdjacentHTML('afterbegin', xhr.response)\n            }\n            xhr.send()\n        }\n    }\n\n    createSvgAndGroups() {\n        this.svg = Svg.createSvg(this.container)\n        // let description = document.createElement(\"description\")\n        // description.innerText = \"Chessboard\"\n        // description.id = \"svg-description\"\n        // this.svg.appendChild(description)\n        let cssClass = this.chessboard.props.style.cssClass ? this.chessboard.props.style.cssClass : \"default\"\n        this.svg.setAttribute(\"class\", \"cm-chessboard border-type-\" + this.chessboard.props.style.borderType + \" \" + cssClass)\n        // this.svg.setAttribute(\"aria-describedby\", \"svg-description\")\n        this.svg.setAttribute(\"role\", \"img\")\n        this.updateMetrics()\n        this.boardGroup = Svg.addElement(this.svg, \"g\", {class: \"board\"})\n        this.coordinatesGroup = Svg.addElement(this.svg, \"g\", {class: \"coordinates\", \"aria-hidden\": \"true\"})\n        this.markersLayer = Svg.addElement(this.svg, \"g\", {class: \"markers-layer\"})\n        this.piecesLayer = Svg.addElement(this.svg, \"g\", {class: \"pieces-layer\"})\n        this.piecesGroup = Svg.addElement(this.piecesLayer, \"g\", {class: \"pieces\"})\n        this.markersTopLayer = Svg.addElement(this.svg, \"g\", {class: \"markers-top-layer\"})\n        this.interactiveTopLayer = Svg.addElement(this.svg, \"g\", {class: \"interactive-top-layer\"})\n    }\n\n    updateMetrics() {\n        const piecesTileSize = this.chessboard.props.style.pieces.tileSize\n        this.width = this.container.clientWidth\n        this.height = this.container.clientWidth * (this.chessboard.props.style.aspectRatio || 1)\n        if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n            this.borderSize = this.width / 25\n        } else if (this.chessboard.props.style.borderType === BORDER_TYPE.thin) {\n            this.borderSize = this.width / 320\n        } else {\n            this.borderSize = 0\n        }\n        this.innerWidth = this.width - 2 * this.borderSize\n        this.innerHeight = this.height - 2 * this.borderSize\n        this.squareWidth = this.innerWidth / 8\n        this.squareHeight = this.innerHeight / 8\n        this.scalingX = this.squareWidth / piecesTileSize\n        this.scalingY = this.squareHeight / piecesTileSize\n        this.pieceXTranslate = (this.squareWidth / 2 - piecesTileSize * this.scalingY / 2)\n    }\n\n    handleResize() {\n        this.container.style.width = (this.chessboard.context.clientWidth) + \"px\"\n        this.container.style.height = (this.chessboard.context.clientWidth * this.chessboard.props.style.aspectRatio) + \"px\"\n        if (this.container.clientWidth !== this.width || this.container.clientHeight !== this.height) {\n            this.updateMetrics()\n            this.redrawBoard()\n            this.redrawPieces()\n        }\n        this.svg.setAttribute(\"width\", \"100%\")\n        this.svg.setAttribute(\"height\", \"100%\")\n    }\n\n    redrawBoard() {\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.beforeRedrawBoard)\n        this.redrawSquares()\n        this.drawCoordinates()\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.afterRedrawBoard)\n        this.visualizeInputState()\n    }\n\n    // Board //\n\n    redrawSquares() {\n        while (this.boardGroup.firstChild) {\n            this.boardGroup.removeChild(this.boardGroup.lastChild)\n        }\n\n        let boardBorder = Svg.addElement(this.boardGroup, \"rect\", {width: this.width, height: this.height})\n        boardBorder.setAttribute(\"class\", \"border\")\n        if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n            const innerPos = this.borderSize\n            let borderInner = Svg.addElement(this.boardGroup, \"rect\", {\n                x: innerPos, y: innerPos, width: this.width - innerPos * 2, height: this.height - innerPos * 2\n            })\n            borderInner.setAttribute(\"class\", \"border-inner\")\n        }\n\n        for (let i = 0; i < 64; i++) {\n            const index = this.chessboard.state.orientation === COLOR.white ? i : 63 - i\n            const squareColor = ((9 * index) & 8) === 0 ? 'black' : 'white'\n            const fieldClass = `square ${squareColor}`\n            const point = this.squareToPoint(Position.indexToSquare(index))\n            const squareRect = Svg.addElement(this.boardGroup, \"rect\", {\n                x: point.x, y: point.y, width: this.squareWidth, height: this.squareHeight\n            })\n            squareRect.setAttribute(\"class\", fieldClass)\n            squareRect.setAttribute(\"data-square\", Position.indexToSquare(index))\n        }\n    }\n\n    drawCoordinates() {\n        if (!this.chessboard.props.style.showCoordinates) {\n            return\n        }\n        while (this.coordinatesGroup.firstChild) {\n            this.coordinatesGroup.removeChild(this.coordinatesGroup.lastChild)\n        }\n        const inline = this.chessboard.props.style.borderType !== BORDER_TYPE.frame\n        for (let file = 0; file < 8; file++) {\n            let x = this.borderSize + (17 + this.chessboard.props.style.pieces.tileSize * file) * this.scalingX\n            let y = this.height - this.scalingY * 3.5\n            let cssClass = \"coordinate file\"\n            if (inline) {\n                x = x + this.scalingX * 15.5\n                cssClass += file % 2 ? \" white\" : \" black\"\n            }\n            const textElement = Svg.addElement(this.coordinatesGroup, \"text\", {\n                class: cssClass, x: x, y: y, style: `font-size: ${this.scalingY * 10}px`\n            })\n            if (this.chessboard.state.orientation === COLOR.white) {\n                textElement.textContent = String.fromCharCode(97 + file)\n            } else {\n                textElement.textContent = String.fromCharCode(104 - file)\n            }\n        }\n        for (let rank = 0; rank < 8; rank++) {\n            let x = (this.borderSize / 3.7)\n            let y = this.borderSize + 25 * this.scalingY + rank * this.squareHeight\n            let cssClass = \"coordinate rank\"\n            if (inline) {\n                cssClass += rank % 2 ? \" black\" : \" white\"\n                if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n                    x = x + this.scalingX * 10\n                    y = y - this.scalingY * 15\n                } else {\n                    x = x + this.scalingX * 2\n                    y = y - this.scalingY * 15\n                }\n            }\n            const textElement = Svg.addElement(this.coordinatesGroup, \"text\", {\n                class: cssClass, x: x, y: y, style: `font-size: ${this.scalingY * 10}px`\n            })\n            if (this.chessboard.state.orientation === COLOR.white) {\n                textElement.textContent = \"\" + (8 - rank)\n            } else {\n                textElement.textContent = \"\" + (1 + rank)\n            }\n        }\n    }\n\n    // Pieces //\n\n    redrawPieces(squares = this.chessboard.state.position.squares) {\n        const childNodes = Array.from(this.piecesGroup.childNodes)\n        const isDragging = this.visualMoveInput.isDragging()\n        for (let i = 0; i < 64; i++) {\n            const pieceName = squares[i]\n            if (pieceName) {\n                const square = Position.indexToSquare(i)\n                this.drawPieceOnSquare(square, pieceName, isDragging && square === this.visualMoveInput.fromSquare)\n            }\n        }\n        for (const childNode of childNodes) {\n            this.piecesGroup.removeChild(childNode)\n        }\n    }\n\n    drawPiece(parentGroup, pieceName, point) {\n        const pieceGroup = Svg.addElement(parentGroup, \"g\", {})\n        pieceGroup.setAttribute(\"data-piece\", pieceName)\n        const transform = (this.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        pieceGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.getSpriteUrl()\n        const pieceUse = Svg.addElement(pieceGroup, \"use\", {\n            href: `${spriteUrl}#${pieceName}`, class: \"piece\"\n        })\n        const transformScale = (this.svg.createSVGTransform())\n        transformScale.setScale(this.scalingY, this.scalingY)\n        pieceUse.transform.baseVal.appendItem(transformScale)\n        return pieceGroup\n    }\n\n    drawPieceOnSquare(square, pieceName, hidden = false) {\n        const pieceGroup = Svg.addElement(this.piecesGroup, \"g\", {})\n        pieceGroup.setAttribute(\"data-piece\", pieceName)\n        pieceGroup.setAttribute(\"data-square\", square)\n        if (hidden) {\n            pieceGroup.setAttribute(\"visibility\", \"hidden\")\n        }\n        const point = this.squareToPoint(square)\n        const transform = (this.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        pieceGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.getSpriteUrl()\n        const pieceUse = Svg.addElement(pieceGroup, \"use\", {\n            href: `${spriteUrl}#${pieceName}`, class: \"piece\"\n        })\n        // center on square\n        const transformTranslate = (this.svg.createSVGTransform())\n        transformTranslate.setTranslate(this.pieceXTranslate, 0)\n        pieceUse.transform.baseVal.appendItem(transformTranslate)\n        // scale\n        const transformScale = (this.svg.createSVGTransform())\n        transformScale.setScale(this.scalingY, this.scalingY)\n        pieceUse.transform.baseVal.appendItem(transformScale)\n        return pieceGroup\n    }\n\n    setPieceVisibility(square, visible = true) {\n        const piece = this.getPieceElement(square)\n        if (piece) {\n            if (visible) {\n                piece.setAttribute(\"visibility\", \"visible\")\n            } else {\n                piece.setAttribute(\"visibility\", \"hidden\")\n            }\n        } else {\n            console.warn(\"no piece on\", square)\n        }\n    }\n\n    getPieceElement(square) {\n        if (!square || square.length < 2) {\n            console.warn(\"invalid square\", square)\n            return null\n        }\n        const piece = this.piecesGroup.querySelector(`g[data-square='${square}']`)\n        if (!piece) {\n            console.warn(\"no piece on\", square)\n            return null\n        }\n        return piece\n    }\n\n    // enable and disable move input //\n\n    enableMoveInput(eventHandler, color = null) {\n        if (this.chessboard.state.moveInputCallback) {\n            throw Error(\"moveInput already enabled\")\n        }\n        if (color === COLOR.white) {\n            this.chessboard.state.inputWhiteEnabled = true\n        } else if (color === COLOR.black) {\n            this.chessboard.state.inputBlackEnabled = true\n        } else {\n            this.chessboard.state.inputWhiteEnabled = true\n            this.chessboard.state.inputBlackEnabled = true\n        }\n        this.chessboard.state.moveInputCallback = eventHandler\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInputToggled, {enabled: true, color: color})\n        this.visualizeInputState()\n    }\n\n    disableMoveInput() {\n        this.chessboard.state.inputWhiteEnabled = false\n        this.chessboard.state.inputBlackEnabled = false\n        this.chessboard.state.moveInputCallback = null\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInputToggled, {enabled: false})\n        this.visualizeInputState()\n    }\n\n    // callbacks //\n\n    moveInputStartedCallback(square) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.moveInputStarted,\n            square: square, /** square is deprecated, use squareFrom (2023-05-22) */\n            squareFrom: square,\n            piece: this.chessboard.getPiece(square)\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            data.moveInputCallbackResult = this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n        return data.moveInputCallbackResult\n    }\n\n    movingOverSquareCallback(squareFrom, squareTo) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.movingOverSquare,\n            squareFrom: squareFrom,\n            squareTo: squareTo,\n            piece: this.chessboard.getPiece(squareFrom)\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            data.moveInputCallbackResult = this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n    }\n\n    validateMoveInputCallback(squareFrom, squareTo) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.validateMoveInput,\n            squareFrom: squareFrom,\n            squareTo: squareTo,\n            piece: this.chessboard.getPiece(squareFrom)\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            data.moveInputCallbackResult = this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n        return data.moveInputCallbackResult\n    }\n\n    moveInputCanceledCallback(squareFrom, squareTo, reason) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.moveInputCanceled,\n            reason: reason,\n            squareFrom: squareFrom,\n            squareTo: squareTo\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n    }\n\n    moveInputFinishedCallback(squareFrom, squareTo, legalMove) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.moveInputFinished,\n            squareFrom: squareFrom,\n            squareTo: squareTo,\n            legalMove: legalMove\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n    }\n\n    // Helpers //\n\n    visualizeInputState() {\n        if (this.chessboard.state) { // fix https://github.com/shaack/cm-chessboard/issues/47\n            if (this.chessboard.state.inputWhiteEnabled || this.chessboard.state.inputBlackEnabled) {\n                this.boardGroup.setAttribute(\"class\", \"board input-enabled\")\n            } else {\n                this.boardGroup.setAttribute(\"class\", \"board\")\n            }\n        }\n    }\n\n    indexToPoint(index) {\n        let x, y\n        if (this.chessboard.state.orientation === COLOR.white) {\n            x = this.borderSize + (index % 8) * this.squareWidth\n            y = this.borderSize + (7 - Math.floor(index / 8)) * this.squareHeight\n        } else {\n            x = this.borderSize + (7 - index % 8) * this.squareWidth\n            y = this.borderSize + (Math.floor(index / 8)) * this.squareHeight\n        }\n        return {x: x, y: y}\n    }\n\n    squareToPoint(square) {\n        const index = Position.squareToIndex(square)\n        return this.indexToPoint(index)\n    }\n\n    getSpriteUrl() {\n        if (Utils.isAbsoluteUrl(this.chessboard.props.style.pieces.file)) {\n            return this.chessboard.props.style.pieces.file\n        } else {\n            return this.chessboard.props.assetsUrl + this.chessboard.props.style.pieces.file\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {ChessboardState} from \"./model/ChessboardState.js\"\nimport {FEN, Position} from \"./model/Position.js\"\nimport {PositionAnimationsQueue} from \"./view/PositionAnimationsQueue.js\"\nimport {EXTENSION_POINT} from \"./model/Extension.js\"\nimport {ChessboardView, COLOR, INPUT_EVENT_TYPE, BORDER_TYPE, POINTER_EVENTS} from \"./view/ChessboardView.js\"\nimport {Utils} from \"./lib/Utils.js\"\n\nexport const PIECE = {\n    wp: \"wp\", wb: \"wb\", wn: \"wn\", wr: \"wr\", wq: \"wq\", wk: \"wk\",\n    bp: \"bp\", bb: \"bb\", bn: \"bn\", br: \"br\", bq: \"bq\", bk: \"bk\"\n}\nexport const PIECE_TYPE = {\n    pawn: \"p\", knight: \"n\", bishop: \"b\", rook: \"r\", queen: \"q\", king: \"k\"\n}\nexport const PIECES_FILE_TYPE = {\n    svgSprite: \"svgSprite\"\n}\nexport {COLOR}\nexport {INPUT_EVENT_TYPE}\nexport {POINTER_EVENTS}\nexport {BORDER_TYPE}\nexport {FEN}\n\nexport class Chessboard {\n\n    constructor(context, props = {}) {\n        if (!context) {\n            throw new Error(\"container element is \" + context)\n        }\n        this.context = context\n        this.id = (Math.random() + 1).toString(36).substring(2, 8)\n        this.extensions = []\n        this.props = {\n            position: FEN.empty, // set position as fen, use FEN.start or FEN.empty as shortcuts\n            orientation: COLOR.white, // white on bottom\n            responsive: true, // resize the board automatically to the size of the context element\n            assetsUrl: \"./assets/\", // put all css and sprites in this folder, will be ignored for absolute urls of assets files\n            assetsCache: true, // cache the sprites, deactivate if you want to use multiple pieces sets in one page\n            style: {\n                cssClass: \"default\", // set the css theme of the board, try \"green\", \"blue\" or \"chess-club\"\n                showCoordinates: true, // show ranks and files\n                borderType: BORDER_TYPE.none, // \"thin\" thin border, \"frame\" wide border with coordinates in it, \"none\" no border\n                aspectRatio: 1, // height/width of the board\n                pieces: {\n                    type: PIECES_FILE_TYPE.svgSprite, // pieces are in an SVG sprite, no other type supported for now\n                    file: \"pieces/standard.svg\", // the filename of the sprite in `assets/pieces/` or an absolute url like `https://\u2026` or `/\u2026`\n                    tileSize: 40 // the tile size in the sprite\n                },\n                animationDuration: 300 // pieces animation duration in milliseconds. Disable all animations with `0`\n            },\n            extensions: [ /* {class: ExtensionClass, props: { ... }} */] // add extensions here\n        }\n        Utils.mergeObjects(this.props, props)\n        this.state = new ChessboardState()\n        this.view = new ChessboardView(this)\n        this.positionAnimationsQueue = new PositionAnimationsQueue(this)\n        this.state.orientation = this.props.orientation\n        // instantiate extensions\n        for (const extensionData of this.props.extensions) {\n            this.addExtension(extensionData.class, extensionData.props)\n        }\n        this.view.redrawBoard()\n        this.state.position = new Position(this.props.position)\n        this.view.redrawPieces()\n        this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        this.initialized = Promise.resolve() // deprecated 2023-09-19 don't use this anymore\n    }\n\n    // API //\n\n    async setPiece(square, piece, animated = false) {\n        const positionFrom = this.state.position.clone()\n        this.state.position.setPiece(square, piece)\n        this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        return this.positionAnimationsQueue.enqueuePositionChange(positionFrom, this.state.position.clone(), animated)\n    }\n\n    async movePiece(squareFrom, squareTo, animated = false) {\n        const positionFrom = this.state.position.clone()\n        this.state.position.movePiece(squareFrom, squareTo)\n        this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        return this.positionAnimationsQueue.enqueuePositionChange(positionFrom, this.state.position.clone(), animated)\n    }\n\n    async setPosition(fen, animated = false) {\n        const positionFrom = this.state.position.clone()\n        const positionTo = new Position(fen)\n        if (positionFrom.getFen() !== positionTo.getFen()) {\n            this.state.position.setFen(fen)\n            this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        }\n        return this.positionAnimationsQueue.enqueuePositionChange(positionFrom, this.state.position.clone(), animated)\n    }\n\n    async setOrientation(color, animated = false) {\n        const position = this.state.position.clone()\n        if (this.boardTurning) {\n            console.warn(\"setOrientation is only once in queue allowed\")\n            return\n        }\n        this.boardTurning = true\n        return this.positionAnimationsQueue.enqueueTurnBoard(position, color, animated).then(() => {\n            this.boardTurning = false\n            this.state.invokeExtensionPoints(EXTENSION_POINT.boardChanged)\n        })\n    }\n\n    getPiece(square) {\n        return this.state.position.getPiece(square)\n    }\n\n    getPosition() {\n        return this.state.position.getFen()\n    }\n\n    getOrientation() {\n        return this.state.orientation\n    }\n\n    enableMoveInput(eventHandler, color = undefined) {\n        this.view.enableMoveInput(eventHandler, color)\n    }\n\n    disableMoveInput() {\n        this.view.disableMoveInput()\n    }\n\n    isMoveInputEnabled() {\n        return this.state.inputWhiteEnabled || this.state.inputBlackEnabled\n    }\n\n    enableSquareSelect(eventType = POINTER_EVENTS.pointerdown, eventHandler) {\n        if (!this.squareSelectListener) {\n            this.squareSelectListener = function (e) {\n                const square = e.target.getAttribute(\"data-square\")\n                eventHandler({\n                    eventType: e.type,\n                    event: e,\n                    chessboard: this,\n                    square: square\n                })\n            }\n        }\n        this.context.addEventListener(eventType, this.squareSelectListener)\n        this.state.squareSelectEnabled = true\n        this.view.visualizeInputState()\n    }\n\n    disableSquareSelect(eventType) {\n        this.context.removeEventListener(eventType, this.squareSelectListener)\n        this.squareSelectListener = undefined\n        this.state.squareSelectEnabled = false\n        this.view.visualizeInputState()\n    }\n\n    isSquareSelectEnabled() {\n        return this.state.squareSelectEnabled\n    }\n\n    addExtension(extensionClass, props) {\n        if (this.getExtension(extensionClass)) {\n            throw Error(\"extension \\\"\" + extensionClass.name + \"\\\" already added\")\n        }\n        this.extensions.push(new extensionClass(this, props))\n    }\n\n    getExtension(extensionClass) {\n        for (const extension of this.extensions) {\n            if (extension instanceof extensionClass) {\n                return extension\n            }\n        }\n        return null\n    }\n\n    destroy() {\n        this.state.invokeExtensionPoints(EXTENSION_POINT.destroy)\n        this.positionAnimationsQueue.destroy()\n        this.view.destroy()\n        this.view = undefined\n        this.state = undefined\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class I18n {\n\n    constructor(props = {}) {\n        this.props = {\n            locale: null,\n            fallbackLang: \"en\" // used, when the translation was not found for locale\n        }\n        Object.assign(this.props, props)\n        this.locale = this.props.locale\n        if (!this.locale) {\n            const htmlLang = document.documentElement.getAttribute(\"lang\")\n            if (htmlLang) {\n                this.locale = htmlLang\n            }\n            if (!this.locale) {\n                this.locale = navigator.language\n            }\n        }\n        this.lang = this.locale.substr(0, 2)\n        this.translations = {}\n    }\n\n    load(dictionary) {\n        let fetchPromises = []\n        for (const lang in dictionary) {\n            if (dictionary.hasOwnProperty(lang)) {\n                if (!this.translations[lang]) {\n                    this.translations[lang] = {}\n                }\n                const translations = dictionary[lang]\n                if (typeof translations === \"string\") {\n                    fetchPromises.push(new Promise((resolve) => {\n                        fetch(translations)\n                            .then(res => res.json())\n                            .then(json => {\n                                Object.assign(this.translations[lang], json)\n                                resolve()\n                            })\n                            .catch(err => {\n                                throw err\n                            })\n                    }))\n                } else {\n                    Object.assign(this.translations[lang], translations)\n                }\n            }\n        }\n        if(fetchPromises.length > 0) {\n            return Promise.all(fetchPromises)\n        } else {\n            return Promise.resolve()\n        }\n    }\n\n    t(code, ...values) {\n        let translation\n        if (this.translations[this.locale] && this.translations[this.locale][code]) {\n            translation = this.translations[this.locale][code]\n        } else if (this.translations[this.lang] && this.translations[this.lang][code]) {\n            translation = this.translations[this.lang][code]\n        } else if (this.translations[this.props.fallbackLang][code]) {\n            translation = this.translations[this.props.fallbackLang][code]\n        } else {\n            console.warn(\"Error, no translation found for locale:\", this.locale,\n                \", lang: \", this.lang, \", code: \", code)\n            return \"?\" + code + \"?\"\n        }\n        if (values && values.length > 0) {\n            let i = 0\n            for (const value of values) {\n                translation = translation.replace(new RegExp(\"\\\\$\" + i, \"g\"), value)\n                i++\n            }\n        }\n        return translation\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class MessageBroker {\n\n    constructor() {\n        this.topics = []\n    }\n\n    subscribe(topic, callback) {\n        if(!topic) {\n            const message = \"subscribe: topic needed\"\n            console.error(message, callback)\n            throw new Error(message)\n        }\n        if(!callback) {\n            const message = \"subscribe: callback needed\"\n            console.error(message, topic)\n            throw new Error(message)\n        }\n        if (this.topics[topic] === undefined) {\n            this.topics[topic] = []\n        }\n        if (this.topics[topic].indexOf(callback) === -1) {\n            this.topics[topic].push(callback)\n        }\n    }\n\n    unsubscribe(topic = null, callback = null) {\n        if(callback !== null && topic !== null) {\n            this.topics[topic].splice(this.topics[topic].indexOf(callback), 1)\n        } else if (callback === null && topic !== null) {\n            this.topics[topic] = []\n        } else if (topic === null && callback !== null) {\n            for (const topicName in this.topics) {\n                // noinspection JSUnfilteredForInLoop\n                const topic = this.topics[topicName]\n                for (const topicSubscriber of topic) {\n                    if(topicSubscriber === callback) {\n                        // noinspection JSUnfilteredForInLoop\n                        this.unsubscribe(topicName, callback)\n                    }\n                }\n            }\n        } else {\n            this.topics = []\n        }\n        if(topic !== null) {\n            if(this.topics[topic] && this.topics[topic].length === 0) {\n                delete this.topics[topic]\n            }\n        }\n    }\n\n    publish(topic, object = {}, async = true) {\n        if(!topic) {\n            const message = \"publish: topic needed\"\n            console.error(message, object)\n            throw new Error(message)\n        }\n        const breadcrumbArray = topic.split(\"/\")\n        let wildcardTopic = \"\"\n        for (const topicPart of breadcrumbArray) {\n            this.callback(wildcardTopic + \"#\", topic, object, async)\n            wildcardTopic += topicPart + \"/\"\n        }\n        this.callback(topic, topic, object, async)\n    }\n\n    callback(wildcardTopic, topic, object = {}, async = true) {\n        if (this.topics[wildcardTopic]) {\n            this.topics[wildcardTopic].forEach(function (callback) {\n                if(async) {\n                    setTimeout(function () {\n                        callback(object, topic)\n                    })\n                } else {\n                    return callback(object, topic)\n                }\n            })\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport const piecesTranslations = {\n    en: {\n        colors: {\n            w: \"w\", b: \"b\"\n        },\n        colors_long: {\n            w: \"White\", b: \"Black\"\n        },\n        pieces: {\n            p: \"p\", n: \"n\", b: \"b\", r: \"r\", q: \"q\", k: \"k\"\n        },\n        pieces_long: {\n            p: \"Pawn\", n: \"Knight\", b: \"Bishop\", r: \"Rook\", q: \"Queen\", k: \"King\"\n        }\n    },\n    de: {\n        colors: {\n            w: \"w\", b: \"s\"\n        },\n        colors_long: {\n            w: \"Wei\u00DF\", b: \"Schwarz\"\n        },\n        pieces: {\n            p: \"b\", n: \"s\", b: \"l\", r: \"t\", q: \"d\", k: \"k\"\n        },\n        pieces_long: {\n            p: \"Bauer\", n: \"Springer\", b: \"L\u00E4ufer\", r: \"Turm\", q: \"Dame\", k: \"K\u00F6nig\"\n        }\n    }\n}\n\nexport function renderPieceTitle(lang, name, color = undefined) {\n    let title = piecesTranslations[lang].pieces_long[name]\n    if (color) {\n        title += \" \" + piecesTranslations[lang].colors_long[color]\n    }\n    return title\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nconst collectionMutationMethods = {\n    array: [\"copyWithin\", \"fill\", \"pop\", \"push\", \"reverse\", \"shift\", \"unshift\", \"sort\", \"splice\"],\n    set: [\"add\", \"clear\", \"delete\"],\n    map: [\"set\", \"clear\", \"delete\"]\n}\n\nconst registry = new Map()\n\nexport class Observe {\n\n    /**\n     * Intercept a function call before the function is executed. Can manipulate\n     * arguments in callback.\n     * @param object\n     * @param functionName allows multiple names as array\n     * @param callback\n     * @returns Object with `remove` function to remove the interceptor\n     */\n    static preFunction(object, functionName, callback) {\n        if (Array.isArray(functionName)) {\n            let removes = []\n            functionName.forEach((functionNameItem) => {\n                removes.push(Observe.preFunction(object, functionNameItem, callback))\n            })\n            return {\n                remove: () => {\n                    removes.forEach((remove) => {\n                        remove.remove()\n                    })\n                }\n            }\n        }\n        if (!registry.has(object)) {\n            registry.set(object, {})\n        }\n        const registryObject = registry.get(object)\n        if (registryObject.observedPreFunctions === undefined) {\n            registryObject.observedPreFunctions = new Map()\n        }\n        if (!registryObject.observedPreFunctions.has(functionName)) {\n            registryObject.observedPreFunctions.set(functionName, new Set())\n            const originalMethod = object[functionName]\n            object[functionName] = function () {\n                let functionArguments = arguments\n                registryObject.observedPreFunctions.get(functionName).forEach(function (callback) {\n                    const params = {functionName: functionName, arguments: functionArguments}\n                    const callbackReturn = callback(params)\n                    if (callbackReturn) {\n                        functionArguments = callbackReturn\n                    }\n                })\n                return originalMethod.apply(object, functionArguments)\n            }\n        }\n        registryObject.observedPreFunctions.get(functionName).add(callback)\n        return {\n            remove: () => {\n                registryObject.observedPreFunctions.get(functionName).delete(callback)\n            }\n        }\n    }\n\n    /**\n     * Intercept a function call after the function is executed. Can manipulate\n     * returnValue in callback.\n     * @param object\n     * @param functionName allows multiple names as array\n     * @param callback\n     * @returns Object with `remove` function to remove the interceptor\n     */\n    static postFunction(object, functionName, callback) {\n        if (Array.isArray(functionName)) {\n            let removes = []\n            functionName.forEach((functionNameItem) => {\n                removes.push(Observe.postFunction(object, functionNameItem, callback))\n            })\n            return {\n                remove: () => {\n                    removes.forEach((remove) => {\n                        remove.remove()\n                    })\n                }\n            }\n        }\n        if (!registry.has(object)) {\n            registry.set(object, {})\n        }\n        const registryObject = registry.get(object)\n        if (registryObject.observedPostFunctions === undefined) {\n            registryObject.observedPostFunctions = new Map()\n        }\n        if (!registryObject.observedPostFunctions.has(functionName)) {\n            registryObject.observedPostFunctions.set(functionName, new Set())\n            const originalMethod = object[functionName]\n            object[functionName] = function () {\n                let returnValue = originalMethod.apply(object, arguments)\n                const functionArguments = arguments\n                registryObject.observedPostFunctions.get(functionName).forEach(function (callback) {\n                    const params = {functionName: functionName, arguments: functionArguments, returnValue: returnValue}\n                    callback(params)\n                    returnValue = params.returnValue // modifiable if called synced\n                })\n                return returnValue\n            }\n        }\n        registryObject.observedPostFunctions.get(functionName).add(callback)\n        return {\n            remove: () => {\n                registryObject.observedPostFunctions.get(functionName).delete(callback)\n            }\n        }\n    }\n\n    /**\n     * Observe properties (attributes) of an object. Works also with Arrays, Maps and Sets.\n     * The parameter `propertyName` can be an array of names to observe multiple properties.\n     * @param object\n     * @param propertyName allows multiple names as array\n     * @param callback\n     */\n    static property(object, propertyName, callback) {\n        // console.warn(\"`Observe` was deprecated at 2022-06-29, use `Observed`\")\n        if (Array.isArray(propertyName)) {\n            let removes = []\n            propertyName.forEach((propertyNameItem) => {\n                removes.push(Observe.property(object, propertyNameItem, callback))\n            })\n            return {\n                remove: () => {\n                    removes.forEach((remove) => {\n                        remove.remove()\n                    })\n                }\n            }\n        }\n        if (!object.hasOwnProperty(propertyName)) {\n            console.error(\"Observe.property\", object, \"missing property: \" + propertyName)\n            return\n        }\n        let isCollection = false\n        if (!registry.has(object)) {\n            registry.set(object, {})\n        }\n        const registryObject = registry.get(object)\n        if (registryObject.observedProperties === undefined) {\n            registryObject.observedProperties = new Map()\n        }\n        if (!registryObject.observedProperties.has(propertyName)) {\n            registryObject.observedProperties.set(propertyName, {\n                value: object[propertyName],\n                observers: new Set()\n            });\n\n            const property = object[propertyName]\n            let mutationMethods = []\n            if (property instanceof Array) {\n                isCollection = true\n                mutationMethods = collectionMutationMethods.array\n            } else if (property instanceof Set || property instanceof WeakSet) {\n                isCollection = true\n                mutationMethods = collectionMutationMethods.set\n            } else if (property instanceof Map || property instanceof WeakMap) {\n                isCollection = true\n                mutationMethods = collectionMutationMethods.map\n            }\n            if (delete object[propertyName]) { // handling for simple properties\n                Object.defineProperty(object, propertyName, {\n                    get: function () {\n                        return registryObject.observedProperties.get(propertyName).value\n                    },\n                    set: function (newValue) {\n                        const oldValue = registryObject.observedProperties.get(propertyName).value\n                        if (newValue !== oldValue) {\n                            registryObject.observedProperties.get(propertyName).value = newValue\n                            registryObject.observedProperties.get(propertyName).observers.forEach(function (callback) {\n                                const params = {propertyName: propertyName, oldValue: oldValue, newValue: newValue}\n                                callback(params)\n                            })\n                        }\n                    },\n                    enumerable: true,\n                    configurable: true\n                })\n                if (isCollection) { // handling for Collections\n                    mutationMethods.forEach(function (methodName) {\n                        object[propertyName][methodName] = function () {\n                            // object[propertyName].constructor.prototype[methodName] is Array or Set or...\n                            // noinspection JSPotentiallyInvalidConstructorUsage\n                            object[propertyName].constructor.prototype[methodName].apply(this, arguments)\n                            const methodArguments = arguments\n                            registryObject.observedProperties.get(propertyName).observers.forEach(function (observer) {\n                                const params = {\n                                    propertyName: propertyName,\n                                    methodName: methodName,\n                                    arguments: methodArguments,\n                                    newValue: object[propertyName]\n                                }\n                                observer(params)\n                            })\n                        }\n                    })\n                }\n            } else {\n                console.error(\"Error: Observe.property\", propertyName, \"failed\")\n            }\n        }\n        registryObject.observedProperties.get(propertyName).observers.add(callback)\n        return {\n            remove: () => {\n                registryObject.observedProperties.get(propertyName).observers.delete(callback)\n            }\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {COLOR} from \"cm-chessboard/src/Chessboard.js\"\nimport {Chess} from \"cm-chess/src/Chess.js\"\n\nexport class ChessConsoleState {\n\n    constructor(props) {\n        this.chess = new Chess() // used to validate moves and keep the history\n        this.orientation = props.playerColor || COLOR.white\n        this.plyViewed = undefined // the play viewed on the board\n    }\n\n    observeChess(callback) {\n        const chessManipulationMethods = [\n            'move', 'clear', 'load', 'loadPgn', 'put', 'remove', 'reset', 'undo'\n        ]\n        chessManipulationMethods.forEach((methodName) => {\n            Observe.postFunction(this.chess, methodName, (params) => {\n                callback(params)\n            })\n        })\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class DomUtils {\n\n    static onDocumentReady(callback) {\n        this.documentReady(callback)\n    }\n\n    /** @deprecated 2023-05-31 use onDocumentReady() */\n    static documentReady(callback) {\n        document.addEventListener(\"DOMContentLoaded\", callback)\n        if (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n            document.removeEventListener(\"DOMContentLoaded\", callback)\n            callback()\n        }\n    }\n\n    // todo test, if it works with document.body\n    static onDomNodeRemoved(elementToWatch, callback, parent = document.querySelector('body')) {\n        const observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList') {\n                    if (mutation.removedNodes.length > 0 && mutation.removedNodes[0] === elementToWatch) {\n                        callback(elementToWatch)\n                    }\n                }\n            })\n        })\n        observer.observe(parent, {childList: true})\n    };\n\n    // https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n    static isElementVisible(element) {\n        return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n    }\n\n    // https://stackoverflow.com/questions/123999/how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    static isElementInViewport(element) {\n        const rect = element.getBoundingClientRect()\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n        )\n    }\n\n    static getFormInputValues(context) {\n        const inputs = context.querySelectorAll(\"input,select\")\n        const values = {}\n        inputs.forEach((input) => {\n            if (input.type === \"checkbox\") {\n                values[input.id] = !!input.checked\n            } else {\n                values[input.id] = input.value\n            }\n        })\n        return values\n    }\n\n    static isBrowserDarkMode() {\n        return !!(window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n    }\n\n    static browserSupportsPreferredColorScheme() {\n        return window.matchMedia &&\n            (window.matchMedia(\"(prefers-color-scheme: dark)\").matches ||\n                window.matchMedia(\"(prefers-color-scheme: light)\").matches)\n    }\n\n    static loadJs(src) {\n        const element = document.createElement(\"script\")\n        element.setAttribute(\"type\", \"text/javascript\")\n        element.setAttribute(\"src\", src)\n        document.getElementsByTagName(\"head\")[0].appendChild(element)\n    }\n\n    static loadCss(src) {\n        const element = document.createElement(\"link\")\n        element.setAttribute(\"rel\", \"stylesheet\")\n        element.setAttribute(\"type\", \"text/css\")\n        element.setAttribute(\"href\", src)\n        document.getElementsByTagName(\"head\")[0].appendChild(element)\n    }\n\n    static setCustomProperty(name, value, element = document.documentElement) {\n        element.style.setProperty(\"--\" + name, value.trim())\n    }\n\n    static getCustomProperty(name, element = document.documentElement) {\n        return getComputedStyle(element).getPropertyValue(\"--\" + name).trim()\n    }\n\n    static createElement(html) {\n        const template = document.createElement(\"template\")\n        template.innerHTML = html.trim()\n        return template.content.firstChild\n    }\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element)\n    }\n\n    static clearElement(element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild)\n        }\n    }\n\n    static insertAfter(newChild, refChild) {\n        refChild.parentNode.insertBefore(newChild, refChild.nextSibling)\n    }\n\n    static delegate(element, eventName, selector, handler) {\n        const eventListener = function (event) {\n            let target = event.target\n            while (target && target !== this) {\n                if (target.matches(selector)) {\n                    handler.call(target, event)\n                }\n                target = target.parentNode\n            }\n        }\n        element.addEventListener(eventName, eventListener)\n        return {\n            remove: function () {\n                element.removeEventListener(eventName, eventListener)\n            }\n        }\n    }\n\n    static isExternalLink(link) {\n        return link.hostname !== window.location.hostname;\n    }\n\n    static openExternalLinksBlank(context = document) {\n        const links = context.links\n        for (let i = 0; i < links.length; i++) {\n            if (this.isExternalLink(links[i]) && links[i].target !== \"_self\") {\n                links[i].target = \"_blank\"\n            }\n        }\n    }\n\n    static disableButtonsOnSubmit() {\n        const buttons = document.querySelectorAll(\"button[data-disable-on-submit]\")\n        buttons.forEach((button) => {\n            button.addEventListener(\"click\", () => {\n                button.setAttribute(\"disabled\", \"disabled\")\n            })\n        })\n    }\n\n    /**\n     * Searches for \"data-event-listener\" attributes in the HTML, and couples them with actions.\n     * Tag Attributes:\n     *  - `data-event-listener`: The event \"click\", \"change\",...\n     *  - `data-action`: The action in this.actions, called on the event\n     *  - `data-delegate`: Query selector, to delegate the event from a child element\n     */\n    static autoBindDataEvents(controller, props = {}) {\n        const context = controller.context\n        const eventListenerElements = context.querySelectorAll(\"[data-event]\")\n        this.props = {\n            debug: false,\n            ...props\n        }\n        if (this.props.debug) {\n            console.log(\"eventListenerElements\", context, eventListenerElements)\n        }\n        for (const eventListenerElement of eventListenerElements) {\n            const eventName = eventListenerElement.dataset.event\n            const action = eventListenerElement.dataset.action\n            const delegate = eventListenerElement.dataset.delegate\n            if(!action) {\n                console.error(\"no action defined\", eventListenerElement)\n            }\n            if (!controller.actions[action]) {\n                console.error(context, \"You have to add the action \\\"\" + action + \"\\\" to your component.\")\n            }\n            if (delegate) {\n                DomUtils.delegate(eventListenerElement, eventName, delegate, (target) => {\n                    if (this.props.debug) {\n                        console.log(\"delegate\", action, target)\n                    }\n                    controller.actions[action](target)\n                })\n            } else {\n                if (this.props.debug) {\n                    console.log(\"addEventListener\", eventName, action)\n                }\n                if (!controller.actions[action]) {\n                    console.error(\"no action\", \"\\\"\" + action + \"\\\"\", \"is defined\")\n                } else {\n                    eventListenerElement.addEventListener(eventName, controller.actions[action].bind(controller))\n                }\n            }\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {FEN} from \"cm-chess/src/Chess.js\"\nimport {COLOR} from \"cm-chessboard/src/Chessboard.js\"\nimport {I18n} from \"cm-web-modules/src/i18n/I18n.js\"\nimport {MessageBroker} from \"cm-web-modules/src/message-broker/MessageBroker.js\"\nimport {piecesTranslations} from \"cm-chessboard/src/extensions/accessibility/I18n.js\"\nimport {ChessConsoleState} from \"./ChessConsoleState.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\n\nexport const CONSOLE_MESSAGE_TOPICS = {\n    newGame: \"game/new\", // if a new game was startet\n    initGame: \"game/init\", // after a page reload and when a new game was started\n    gameOver: \"game/over\",\n    moveRequest: \"game/moveRequest\",\n    legalMove: \"game/move/legal\",\n    illegalMove: \"game/move/illegal\",\n    moveUndone: \"game/move/undone\", // mainly for sound\n    load: \"game/load\"\n}\n\nexport class ChessConsole {\n\n    constructor(context, player, opponent, props = {},\n                state = new ChessConsoleState(props)) {\n        this.context = context\n        this.state = state\n        this.props = {\n            locale: navigator.language, // locale for i18n\n            playerColor: COLOR.white, // the players color (color at bottom)\n            pgn: undefined, // initial pgn, can contain header and history\n            accessible: false // render additional information to improve the usage for people using screen readers (beta)\n        }\n        if (!this.props.figures) {\n            this.props.figures = {\n                Rw: '<i class=\"fas fa-fw fa-chess-rook fa-figure-white\"></i>',\n                Nw: '<i class=\"fas fa-fw fa-chess-knight fa-figure-white\"></i>',\n                Bw: '<i class=\"fas fa-fw fa-chess-bishop fa-figure-white\"></i>',\n                Qw: '<i class=\"fas fa-fw fa-chess-queen fa-figure-white\"></i>',\n                Kw: '<i class=\"fas fa-fw fa-chess-king fa-figure-white\"></i>',\n                Pw: '<i class=\"fas fa-fw fa-chess-pawn fa-figure-white\"></i>',\n                Rb: '<i class=\"fas fa-fw fa-chess-rook fa-figure-black\"></i>',\n                Nb: '<i class=\"fas fa-fw fa-chess-knight fa-figure-black\"></i>',\n                Bb: '<i class=\"fas fa-fw fa-chess-bishop fa-figure-black\"></i>',\n                Qb: '<i class=\"fas fa-fw fa-chess-queen fa-figure-black\"></i>',\n                Kb: '<i class=\"fas fa-fw fa-chess-king fa-figure-black\"></i>',\n                Pb: '<i class=\"fas fa-fw fa-chess-pawn fa-figure-black\"></i>'\n            }\n        }\n        const colSets = {\n            consoleGame: \"col-xl-7 order-xl-2 col-lg-8 order-lg-1 order-md-1 col-md-12\",\n            consoleRight: \"col-xl-3 order-xl-3 col-lg-4 order-lg-2 col-md-8 order-md-3\",\n            consoleLeft: \"col-xl-2 order-xl-1 order-lg-3 col-lg-12 col-md-4 order-md-2\"\n        }\n        this.initialized = new Promise((resolve => {\n            this.i18n = new I18n({locale: props.locale})\n            this.i18n.load({\n                de: {\n                    ok: \"OK\",\n                    cancel: \"Abbrechen\",\n                },\n                en: {\n                    ok: \"OK\",\n                    cancel: \"Cancel\",\n                }\n            }).then(() => {\n                this.i18n.load(piecesTranslations).then(() => {\n                    resolve(this)\n                })\n            })\n        }))\n        /**\n         * @deprecated 2023-04-11 use this.initialized instead\n         */\n        this.initialization = this.initialized\n        if (!this.props.template) {\n            this.props.template = `\n                <div class=\"row chess-console\">\n                    <div class=\"chess-console-center ${colSets.consoleGame}\">\n                        <div class=\"chess-console-board\"></div>\n                    </div>\n                    <div class=\"chess-console-right ${colSets.consoleRight}\">\n                        <div class=\"control-buttons buttons-grid mb-4\"></div>\n                        <div class=\"chess-console-notifications\"></div>\n                    </div>\n                    <div class=\"chess-console-left ${colSets.consoleLeft}\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-4 col-md-12 col-6\">\n                                <div class=\"chess-console-history\"></div>\n                            </div>\n                            <div class=\"col-xl-12 col-lg-8 col-md-12 col-6\">\n                                <div class=\"chess-console-captured\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>`\n        }\n        Object.assign(this.props, props)\n        this.messageBroker = new MessageBroker()\n        const innerHTMLElement = DomUtils.createElement(this.context.innerHTML)\n        if (!(innerHTMLElement instanceof Element) ||\n            (!innerHTMLElement.querySelector(\".chess-console\") &&\n                !innerHTMLElement.classList.contains(\"chess-console\"))) {\n            this.context.innerHTML = this.props.template\n        }\n        this.componentContainers = {\n            center: this.context.querySelector(\".chess-console-center\"),\n            left: this.context.querySelector(\".chess-console-left\"),\n            right: this.context.querySelector(\".chess-console-right\"),\n            board: this.context.querySelector(\".chess-console-board\"),\n            controlButtons: this.context.querySelector(\".control-buttons\"),\n            notifications: this.context.querySelector(\".chess-console-notifications\")\n        }\n        this.components = {\n            // put here components, which want to be accessible from other components\n        }\n        this.player = new player.type(this, player.name, player.props)\n        this.opponent = new opponent.type(this, opponent.name, opponent.props)\n\n        /** @var this.persistence Persistence */\n        this.persistence = undefined\n    }\n\n    initGame(props = {}, requestNextMove = true) {\n        Object.assign(this.props, props)\n        this.state.orientation = this.props.playerColor\n        if (props.pgn) {\n            this.state.chess.loadPgn(props.pgn, true)\n            this.state.plyViewed = this.state.chess.plyCount()\n        } else {\n            this.state.chess.load(FEN.start)\n            this.state.plyViewed = 0\n        }\n        if (requestNextMove) {\n            this.nextMove()\n        }\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.initGame, {props: props})\n    }\n\n    newGame(props = {}) {\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.newGame, {props: props})\n        this.initGame(props)\n        if (this.components.board.chessboard) {\n            this.components.board.chessboard.disableMoveInput()\n        }\n    }\n\n    playerWhite() {\n        return this.props.playerColor === COLOR.white ? this.player : this.opponent\n    }\n\n    playerBlack() {\n        return this.props.playerColor === COLOR.white ? this.opponent : this.player\n    }\n\n    playerToMove() {\n        if (this.state.chess.gameOver()) {\n            return null\n        } else {\n            if (this.state.chess.turn() === \"w\") {\n                return this.playerWhite()\n            } else {\n                return this.playerBlack()\n            }\n        }\n    }\n\n    /*\n     * - calls `moveRequest()` in next player\n     */\n    nextMove() {\n        const playerToMove = this.playerToMove()\n        if (playerToMove) {\n            this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.moveRequest, {playerToMove: playerToMove})\n            setTimeout(() => {\n                playerToMove.moveRequest(this.state.chess.fen(), (move) => {\n                    return this.handleMoveResponse(move)\n                })\n            })\n        }\n    }\n\n    /*\n     * - validates move\n     * - requests nextMove\n     */\n    handleMoveResponse(move) {\n        const playerMoved = this.playerToMove()\n        const moveResult = this.state.chess.move(move)\n        if (!moveResult) {\n            if (this.props.debug) {\n                console.warn(\"illegalMove\", this.state.chess, move)\n            }\n            this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.illegalMove, {\n                playerMoved: playerMoved,\n                move: move\n            })\n            return moveResult\n        }\n        if (this.state.plyViewed === this.state.chess.plyCount() - 1) {\n            this.state.plyViewed++\n        }\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.legalMove, {\n            playerMoved: playerMoved,\n            move: move,\n            moveResult: moveResult\n        })\n        if (!this.state.chess.gameOver()) {\n            this.nextMove()\n        } else {\n            let wonColor = null\n            if (this.state.chess.inCheckmate()) {\n                wonColor = (this.state.chess.turn() === COLOR.white) ? COLOR.black : COLOR.white\n            }\n            this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.gameOver, {wonColor: wonColor})\n        }\n        return moveResult\n    }\n\n    undoMove() {\n        this.components.board.chessboard.disableMoveInput()\n        this.state.chess.undo()\n        if (this.playerToMove() !== this.player) {\n            this.state.chess.undo()\n        }\n        if (this.state.plyViewed > this.state.chess.plyCount()) {\n            this.state.plyViewed = this.state.chess.plyCount()\n        }\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.moveUndone)\n        this.nextMove()\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nexport class ChessConsolePlayer {\n\n    constructor(chessConsole, name) {\n        this.chessConsole = chessConsole\n        this.name = name\n    }\n\n    /**\n     * Called, when the Console requests the next Move from a Player.\n     * The Player should answer the moveRequest with a moveResponse.\n     * The moveResponse then returns the move result, if no move result was returned, the move was not legal.\n     * @param fen current position\n     * @param moveResponse a callback function to call as the moveResponse. Parameter is an object,\n     * containing 'from' and `to`. Example: `moveResult = moveResponse({from: \"e2\", to: \"e4\", promotion: null})`.\n     */\n    moveRequest(fen, moveResponse) {\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\nimport {COLOR, INPUT_EVENT_TYPE} from \"cm-chessboard/src/Chessboard.js\"\nimport {Chess} from \"chess.mjs/src/Chess.js\"\nimport {ChessConsolePlayer} from \"../ChessConsolePlayer.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\n\nexport class LocalPlayer extends ChessConsolePlayer {\n\n    constructor(chessConsole, name, props) {\n        super(chessConsole, name)\n        this.props = {\n            allowPremoves: false\n        }\n        Object.assign(this.props, props)\n        this.premoves = []\n    }\n\n    /**\n     * The return value returns, if valid or if is promotion.\n     * The callback returns the move.\n     */\n    validateMoveAndPromote(fen, squareFrom, squareTo, callback) {\n        const tmpChess = new Chess(fen)\n        let move = {from: squareFrom, to: squareTo}\n        const moveResult = tmpChess.move(move)\n        if (moveResult) {\n            callback(moveResult)\n            return true\n        } else { // is a promotion?\n            if (tmpChess.get(squareFrom) && tmpChess.get(squareFrom).type === \"p\") {\n                const possibleMoves = tmpChess.moves({square: squareFrom, verbose: true})\n                for (let possibleMove of possibleMoves) {\n                    if (possibleMove.to === squareTo && possibleMove.promotion) {\n                        const chessboard = this.chessConsole.components.board.chessboard\n                        chessboard.showPromotionDialog(squareTo, tmpChess.turn(), (event) => {\n                            console.log(event)\n                            if (event.piece) {\n                                move.promotion = event.piece.charAt(1)\n                                console.log(move)\n                                callback(tmpChess.move(move))\n                            } else {\n                                callback(null)\n                            }\n                        })\n                        return true\n                    }\n                }\n            }\n        }\n        callback(null)\n        return false\n    }\n\n    /**\n     * Handles the events from cm-chessboard\n     *\n     * INPUT_EVENT_TYPE.moveDone\n     * - validates Move, returns false, if not valid\n     * - does promotion\n     * - calls moveResponse()\n     *\n     * INPUT_EVENT_TYPE.moveStart\n     * - allowed only the right color to move\n     */\n    chessboardMoveInputCallback(event, moveResponse) {\n        // if player can make move, make, if not store as premove\n        // const boardFen = this.chessConsole.components.board.chessboard.getPosition()\n        const gameFen = this.chessConsole.state.chess.fen()\n        if (this.chessConsole.playerToMove() === this) {\n            if (event.type === INPUT_EVENT_TYPE.validateMoveInput) {\n                return this.validateMoveAndPromote(gameFen, event.squareFrom, event.squareTo, (moveResult) => {\n                    let result\n                    if (moveResult) { // valid\n                        result = moveResponse(moveResult)\n                    } else { // not valid\n                        result = moveResponse({from: event.squareFrom, to: event.squareTo})\n                        this.premoves = []\n                        this.updatePremoveMarkers()\n                    }\n                    if (result) {\n                        if(!this.props.allowPremoves) {\n                            this.chessConsole.components.board.chessboard.disableMoveInput()\n                        }\n                    }\n                })\n            } else if (event.type === INPUT_EVENT_TYPE.moveInputStarted) {\n                if (this.chessConsole.state.plyViewed !== this.chessConsole.state.chess.plyCount()) {\n                    this.chessConsole.state.plyViewed = this.chessConsole.state.chess.plyCount()\n                    return false\n                } else {\n                    const possibleMoves = this.chessConsole.state.chess.moves({square: event.square})\n                    if(possibleMoves.length > 0) {\n                        return true\n                    } else {\n                        this.chessConsole.components.board.chessConsole.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.illegalMove, {\n                            move: {\n                                from: event.squareFrom\n                            }\n                        })\n                        return false\n                    }\n                }\n            }\n        } else {\n            // premoves\n            if (event.type === INPUT_EVENT_TYPE.validateMoveInput) {\n                this.premoves.push(event)\n                this.updatePremoveMarkers()\n            }\n            return true\n        }\n    }\n\n    moveRequest(fen, moveResponse) {\n        if(!this.contextMenuEvent) {\n            this.chessConsole.components.board.chessboard.context.addEventListener(\"contextmenu\", (event) => {\n                event.preventDefault()\n                if(this.premoves.length > 0) {\n                    this.resetBoardPosition()\n                    this.premoves = []\n                    this.updatePremoveMarkers()\n                }\n            })\n            this.contextMenuEvent = true\n        }\n        const color = this.chessConsole.state.chess.turn() === 'w' ? COLOR.white : COLOR.black\n        if (!this.chessConsole.state.chess.gameOver()) {\n            if (this.premoves.length > 0) {\n                // premove\n                const eventFromPremovesQueue = this.premoves.shift()\n                this.updatePremoveMarkers()\n                setTimeout(() => {\n                    this.chessboardMoveInputCallback(eventFromPremovesQueue, moveResponse)\n                }, 20)\n                return true\n            }\n            // normal move\n            if(!this.chessConsole.components.board.chessboard.isMoveInputEnabled()) {\n                this.chessConsole.components.board.chessboard.enableMoveInput(\n                    (event) => {\n                        return this.chessboardMoveInputCallback(event, moveResponse)\n                    }, color\n                )\n            }\n        }\n    }\n\n    updatePremoveMarkers() {\n        this.chessConsole.components.board.chessboard.removeMarkers(this.chessConsole.components.board.props.markers.premove)\n        for (const premove of this.premoves) {\n            this.chessConsole.components.board.chessboard.addMarker(this.chessConsole.components.board.props.markers.premove, premove.squareTo)\n        }\n    }\n\n    resetBoardPosition() {\n        this.chessConsole.components.board.chessboard.setPosition(this.chessConsole.state.chess.fen(), true)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\nimport {Svg} from \"../../lib/Svg.js\"\nimport {INPUT_EVENT_TYPE} from \"../../Chessboard.js\"\nimport {Utils} from \"../../lib/Utils.js\"\n\nexport const MARKER_TYPE = {\n    frame: {class: \"marker-frame\", slice: \"markerFrame\"},\n    framePrimary: {class: \"marker-frame-primary\", slice: \"markerFrame\"},\n    frameDanger: {class: \"marker-frame-danger\", slice: \"markerFrame\"},\n    circle: {class: \"marker-circle\", slice: \"markerCircle\"},\n    circlePrimary: {class: \"marker-circle-primary\", slice: \"markerCircle\"},\n    circleDanger: {class: \"marker-circle-danger\", slice: \"markerCircle\"},\n    square: {class: \"marker-square\", slice: \"markerSquare\"},\n    dot: {class: \"marker-dot\", slice: \"markerDot\", position: 'above'},\n    bevel: {class: \"marker-bevel\", slice: \"markerBevel\"}\n}\n\nexport class Markers extends Extension {\n\n    /** @constructor */\n    constructor(chessboard, props = {}) {\n        super(chessboard)\n        this.registerExtensionPoint(EXTENSION_POINT.afterRedrawBoard, () => {\n            this.onRedrawBoard()\n        })\n        this.props = {\n            autoMarkers: MARKER_TYPE.frame, // set to `null` to disable autoMarkers\n            sprite: \"extensions/markers/markers.svg\" // the sprite file of the markers\n        }\n        Object.assign(this.props, props)\n        if (chessboard.props.assetsCache) {\n            chessboard.view.cacheSpriteToDiv(\"cm-chessboard-markers\", this.getSpriteUrl())\n        }\n        chessboard.addMarker = this.addMarker.bind(this)\n        chessboard.getMarkers = this.getMarkers.bind(this)\n        chessboard.removeMarkers = this.removeMarkers.bind(this)\n        chessboard.addLegalMovesMarkers = this.addLegalMovesMarkers.bind(this)\n        chessboard.removeLegalMovesMarkers = this.removeLegalMovesMarkers.bind(this)\n        this.markerGroupDown = Svg.addElement(chessboard.view.markersLayer, \"g\", {class: \"markers\"})\n        this.markerGroupUp = Svg.addElement(chessboard.view.markersTopLayer, \"g\", {class: \"markers\"})\n        this.markers = []\n        if (this.props.autoMarkers) {\n            Object.assign(this.props.autoMarkers, this.props.autoMarkers)\n            this.registerExtensionPoint(EXTENSION_POINT.moveInput, (event) => {\n                this.drawAutoMarkers(event)\n            })\n        }\n    }\n\n    drawAutoMarkers(event) {\n        if(event.type !== INPUT_EVENT_TYPE.moveInputFinished) {\n            this.removeMarkers(this.props.autoMarkers)\n        }\n        if (event.type === INPUT_EVENT_TYPE.moveInputStarted &&\n            !event.moveInputCallbackResult) {\n            return\n        }\n        if (event.type === INPUT_EVENT_TYPE.moveInputStarted ||\n            event.type === INPUT_EVENT_TYPE.movingOverSquare) {\n            if (event.squareFrom) {\n                this.addMarker(this.props.autoMarkers, event.squareFrom)\n            }\n            if (event.squareTo) {\n                this.addMarker(this.props.autoMarkers, event.squareTo)\n            }\n        }\n    }\n\n    onRedrawBoard() {\n        while (this.markerGroupUp.firstChild) {\n            this.markerGroupUp.removeChild(this.markerGroupUp.firstChild)\n        }\n        while (this.markerGroupDown.firstChild) {\n            this.markerGroupDown.removeChild(this.markerGroupDown.firstChild)\n        }\n        this.markers.forEach((marker) => {\n                this.drawMarker(marker)\n            }\n        )\n    }\n\n    addLegalMovesMarkers(moves) {\n        for (const move of moves) {\n            if (move.promotion && move.promotion !== \"q\") {\n                continue\n            }\n            if (this.chessboard.getPiece(move.to)) {\n                this.chessboard.addMarker(MARKER_TYPE.bevel, move.to)\n            } else {\n                this.chessboard.addMarker(MARKER_TYPE.dot, move.to)\n            }\n        }\n    }\n\n    removeLegalMovesMarkers() {\n        this.chessboard.removeMarkers(MARKER_TYPE.bevel)\n        this.chessboard.removeMarkers(MARKER_TYPE.dot)\n    }\n\n    drawMarker(marker) {\n        let markerGroup\n        if (marker.type.position === 'above') {\n            markerGroup = Svg.addElement(this.markerGroupUp, \"g\")\n        } else {\n            markerGroup = Svg.addElement(this.markerGroupDown, \"g\")\n        }\n        markerGroup.setAttribute(\"data-square\", marker.square)\n        const point = this.chessboard.view.squareToPoint(marker.square)\n        const transform = (this.chessboard.view.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        markerGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.getSpriteUrl()\n        const markerUse = Svg.addElement(markerGroup, \"use\",\n            {href: `${spriteUrl}#${marker.type.slice}`, class: \"marker \" + marker.type.class})\n        const transformScale = (this.chessboard.view.svg.createSVGTransform())\n        transformScale.setScale(this.chessboard.view.scalingX, this.chessboard.view.scalingY)\n        markerUse.transform.baseVal.appendItem(transformScale)\n        return markerGroup\n    }\n\n    addMarker(type, square) {\n        if (typeof type === \"string\" || typeof square === \"object\") { // todo remove 2022-12-01\n            console.error(\"changed the signature of `addMarker` to `(type, square)` with v5.1.x\")\n            return\n        }\n        this.markers.push(new Marker(square, type))\n        this.onRedrawBoard()\n    }\n\n    getMarkers(type = undefined, square = undefined) {\n        if (typeof type === \"string\" || typeof square === \"object\") { // todo remove 2022-12-01\n            console.error(\"changed the signature of `getMarkers` to `(type, square)` with v5.1.x\")\n            return\n        }\n        let markersFound = []\n        this.markers.forEach((marker) => {\n            if (marker.matches(square, type)) {\n                markersFound.push(marker)\n            }\n        })\n        return markersFound\n    }\n\n    removeMarkers(type = undefined, square = undefined) {\n        if (typeof type === \"string\" || typeof square === \"object\") { // todo remove 2022-12-01\n            console.error(\"changed the signature of `removeMarkers` to `(type, square)` with v5.1.x\")\n            return\n        }\n        this.markers = this.markers.filter((marker) => !marker.matches(square, type))\n        this.onRedrawBoard()\n    }\n\n    getSpriteUrl() {\n        if(Utils.isAbsoluteUrl(this.props.sprite)) {\n            return this.props.sprite\n        } else {\n            return this.chessboard.props.assetsUrl + this.props.sprite\n        }\n    }\n}\n\nclass Marker {\n    constructor(square, type) {\n        this.square = square\n        this.type = type\n    }\n\n    matches(square = undefined, type = undefined) {\n        if (!type && !square) {\n            return true\n        } else if (!type) {\n            if (square === this.square) {\n                return true\n            }\n        } else if (!square) {\n            if (this.type === type) {\n                return true\n            }\n        } else if (this.type === type && square === this.square) {\n            return true\n        }\n        return false\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class CoreUtils {\n\n    static debounce(callback, wait = 0, immediate = false) {\n        let timeout\n        return function executedFunction(...args) {\n            if (immediate && !timeout) {\n                callback(...args)\n                timeout = true\n            } else {\n                const debounced = () => {\n                    clearTimeout(timeout)\n                    callback(...args)\n                }\n                clearTimeout(timeout)\n                timeout = setTimeout(debounced, wait)\n            }\n        }\n    }\n\n    static mergeObjects(target, source) {\n        const isObject = (obj) => obj && typeof obj === 'object'\n        if (!isObject(target) || !isObject(source)) {\n            return source\n        }\n        for (const key of Object.keys(source)) {\n            if (source[key] instanceof Object) {\n                Object.assign(source[key], CoreUtils.mergeObjects(target[key], source[key]))\n            }\n        }\n        Object.assign(target || {}, source)\n        return target\n    }\n\n    static createTask() {\n        let resolve, reject\n        const promise = new Promise(function (_resolve, _reject) {\n            resolve = _resolve\n            reject = _reject\n        })\n        promise.resolve = resolve\n        promise.reject = reject\n        return promise\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\nimport {COLOR, PIECE} from \"../../Chessboard.js\"\nimport {Svg} from \"../../lib/Svg.js\"\nimport {Utils} from \"../../lib/Utils.js\"\n\nconst DISPLAY_STATE = {\n    hidden: \"hidden\",\n    displayRequested: \"displayRequested\",\n    shown: \"shown\"\n}\n\nexport const PROMOTION_DIALOG_RESULT_TYPE = {\n    pieceSelected: \"pieceSelected\",\n    canceled: \"canceled\"\n}\n\nexport class PromotionDialog extends Extension {\n\n    /** @constructor */\n    constructor(chessboard) {\n        super(chessboard)\n        this.registerExtensionPoint(EXTENSION_POINT.afterRedrawBoard, this.extensionPointRedrawBoard.bind(this))\n        chessboard.showPromotionDialog = this.showPromotionDialog.bind(this)\n        chessboard.isPromotionDialogShown = this.isPromotionDialogShown.bind(this)\n        this.promotionDialogGroup = Svg.addElement(chessboard.view.interactiveTopLayer, \"g\", {class: \"promotion-dialog-group\"})\n        this.state = {\n            displayState: DISPLAY_STATE.hidden,\n            callback: null,\n            dialogParams: {\n                square: null,\n                color: null\n            }\n        }\n    }\n\n    // public (chessboard.showPromotionDialog)\n    showPromotionDialog(square, color, callback) {\n        this.state.dialogParams.square = square\n        this.state.dialogParams.color = color\n        this.state.callback = callback\n        this.setDisplayState(DISPLAY_STATE.displayRequested)\n        setTimeout(() => {\n                this.chessboard.view.positionsAnimationTask.then(() => {\n                    this.setDisplayState(DISPLAY_STATE.shown)\n                })\n            }\n        )\n    }\n\n    // public (chessboard.isPromotionDialogShown)\n    isPromotionDialogShown() {\n        return this.state.displayState === DISPLAY_STATE.shown ||\n            this.state.displayState === DISPLAY_STATE.displayRequested\n    }\n\n    // private\n    extensionPointRedrawBoard() {\n        this.redrawDialog()\n    }\n\n    drawPieceButton(piece, point) {\n        const squareWidth = this.chessboard.view.squareWidth\n        const squareHeight = this.chessboard.view.squareHeight\n        Svg.addElement(this.promotionDialogGroup,\n            \"rect\", {\n                x: point.x, y: point.y, width: squareWidth, height: squareHeight,\n                class: \"promotion-dialog-button\",\n                \"data-piece\": piece\n            })\n        this.chessboard.view.drawPiece(this.promotionDialogGroup, piece, point)\n    }\n\n    redrawDialog() {\n        while (this.promotionDialogGroup.firstChild) {\n            this.promotionDialogGroup.removeChild(this.promotionDialogGroup.firstChild)\n        }\n        if (this.state.displayState === DISPLAY_STATE.shown) {\n            const squareWidth = this.chessboard.view.squareWidth\n            const squareHeight = this.chessboard.view.squareHeight\n            const squareCenterPoint = this.chessboard.view.squareToPoint(this.state.dialogParams.square)\n            squareCenterPoint.x = squareCenterPoint.x + squareWidth / 2\n            squareCenterPoint.y = squareCenterPoint.y + squareHeight / 2\n            let turned = false\n            const rank = parseInt(this.state.dialogParams.square.charAt(1), 10)\n            if (this.chessboard.getOrientation() === COLOR.white && rank < 5 ||\n                this.chessboard.getOrientation() === COLOR.black && rank >= 5) {\n                turned = true\n            }\n            const offsetY = turned ? -4 * squareHeight : 0\n            const offsetX = squareCenterPoint.x + squareWidth > this.chessboard.view.width ? -squareWidth : 0\n            Svg.addElement(this.promotionDialogGroup,\n                \"rect\", {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + offsetY,\n                    width: squareWidth,\n                    height: squareHeight * 4,\n                    class: \"promotion-dialog\"\n                })\n            const dialogParams = this.state.dialogParams\n            if (turned) {\n                this.drawPieceButton(PIECE[dialogParams.color + \"q\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"r\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight * 2\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"b\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight * 3\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"n\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight * 4\n                })\n            } else {\n                this.drawPieceButton(PIECE[dialogParams.color + \"q\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"r\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + squareHeight\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"b\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + squareHeight * 2\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"n\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + squareHeight * 3\n                })\n            }\n        }\n    }\n\n    promotionDialogOnClickPiece(event) {\n        if (event.button !== 2) {\n            if (event.target.dataset.piece) {\n                if(this.state.callback) {\n                    this.state.callback({\n                        type: PROMOTION_DIALOG_RESULT_TYPE.pieceSelected,\n                        square: this.state.dialogParams.square,\n                        piece: event.target.dataset.piece\n                    })\n                }\n                this.setDisplayState(DISPLAY_STATE.hidden)\n            } else {\n                this.promotionDialogOnCancel(event)\n            }\n        }\n    }\n\n    promotionDialogOnCancel(event) {\n        if (this.state.displayState === DISPLAY_STATE.shown) {\n            event.preventDefault()\n            this.setDisplayState(DISPLAY_STATE.hidden)\n            if(this.state.callback) {\n                this.state.callback({type: PROMOTION_DIALOG_RESULT_TYPE.canceled})\n            }\n        }\n    }\n\n    contextMenu(event) {\n        event.preventDefault()\n        this.setDisplayState(DISPLAY_STATE.hidden)\n        if(this.state.callback) {\n            this.state.callback({type: PROMOTION_DIALOG_RESULT_TYPE.canceled})\n        }\n    }\n\n    setDisplayState(displayState) {\n        this.state.displayState = displayState\n        if (displayState === DISPLAY_STATE.shown) {\n            this.clickDelegate = Utils.delegate(this.chessboard.view.svg,\n                \"pointerdown\",\n                \"*\",\n                this.promotionDialogOnClickPiece.bind(this))\n            this.contextMenuListener = this.contextMenu.bind(this)\n            this.chessboard.view.svg.addEventListener(\"contextmenu\", this.contextMenuListener)\n        } else if (displayState === DISPLAY_STATE.hidden) {\n            this.clickDelegate.remove()\n            this.chessboard.view.svg.removeEventListener(\"contextmenu\", this.contextMenuListener)\n        }\n        this.redrawDialog()\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\nimport {COLOR, INPUT_EVENT_TYPE} from \"../../Chessboard.js\"\nimport {piecesTranslations, renderPieceTitle} from \"./I18n.js\"\nimport {Utils} from \"../../lib/Utils.js\"\n\nconst translations = {\n    de: {\n        chessboard: \"Schachbrett\",\n        pieces_lists: \"Figurenlisten\",\n        board_as_table: \"Schachbrett als Tabelle\",\n        move_piece: \"Figur bewegen\",\n        from: \"Zug von\",\n        to: \"Zug nach\",\n        move: \"Zug ausf\u00FChren\",\n        input_white_enabled: \"Eingabe Wei\u00DF aktiviert\",\n        input_black_enabled: \"Eingabe Schwarz aktiviert\",\n        input_disabled: \"Eingabe deaktiviert\",\n        pieces: \"Figuren\",\n    },\n    en: {\n        chessboard: \"Chessboard\",\n        pieces_lists: \"Pieces lists\",\n        board_as_table: \"Chessboard as table\",\n        move_piece: \"Move piece\",\n        from: \"Move from\",\n        to: \"Move to\",\n        move: \"Make move\",\n        input_white_enabled: \"Input white enabled\",\n        input_black_enabled: \"Input black enabled\",\n        input_disabled: \"Input disabled\",\n        pieces: \"Pieces\"\n    }\n}\n\nexport class Accessibility extends Extension {\n    constructor(chessboard, props) {\n        super(chessboard)\n        this.props = {\n            language: navigator.language.substring(0, 2).toLowerCase(), // supports \"de\" and \"en\" for now, used for pieces naming\n            brailleNotationInAlt: true, // show the braille notation of the position in the alt attribute of the SVG image\n            movePieceForm: true, // display a form to move a piece (from, to, move)\n            boardAsTable: true, // display the board additionally as HTML table\n            piecesAsList: true, // display the pieces additionally as List\n            visuallyHidden: true // hide all those extra outputs visually but keep them accessible for screen readers and braille displays\n        }\n        Object.assign(this.props, props)\n        if (this.props.language !== \"de\" && this.props.language !== \"en\") {\n            this.props.language = \"en\"\n        }\n        this.lang = this.props.language\n        this.tPieces = piecesTranslations[this.lang]\n        this.t = translations[this.lang]\n        this.components = []\n        if(this.props.movePieceForm || this.props.boardAsTable || this.props.piecesAsList) {\n            const container = document.createElement(\"div\")\n            container.classList.add(\"cm-chessboard-accessibility\")\n            this.chessboard.context.appendChild(container)\n            if(this.props.visuallyHidden) {\n                container.classList.add(\"visually-hidden\")\n            }\n            if (this.props.movePieceForm) {\n                this.components.push(new MovePieceForm(container, this))\n            }\n            if (this.props.boardAsTable) {\n                this.components.push(new BoardAsTable(container, this))\n            }\n            if (this.props.piecesAsList) {\n                this.components.push(new PiecesAsList(container, this))\n            }\n        }\n        if (this.props.brailleNotationInAlt) {\n            this.components.push(new BrailleNotationInAlt(this))\n        }\n    }\n}\n\nclass BrailleNotationInAlt {\n    constructor(extension) {\n        this.extension = extension\n        extension.registerExtensionPoint(EXTENSION_POINT.positionChanged, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        const pieces = this.extension.chessboard.state.position.getPieces()\n        let listW = piecesTranslations[this.extension.lang].colors.w.toUpperCase() + \":\"\n        let listB = piecesTranslations[this.extension.lang].colors.b.toUpperCase() + \":\"\n        for (const piece of pieces) {\n            const pieceName = piece.type === \"p\" ? \"\" : piecesTranslations[this.extension.lang].pieces[piece.type].toUpperCase()\n            if (piece.color === \"w\") {\n                listW += \" \" + pieceName + piece.position\n            } else {\n                listB += \" \" + pieceName + piece.position\n            }\n        }\n        const altText = `${listW}\n${listB}`\n        this.extension.chessboard.view.svg.setAttribute(\"alt\", altText)\n    }\n}\n\nclass MovePieceForm {\n    constructor(container, extension) {\n        this.chessboard = extension.chessboard\n        this.movePieceFormContainer = Utils.createDomElement(`\n<div>\n    <h3 id=\"hl_form_${this.chessboard.id}\">${extension.t.move_piece}</h3>\n    <form aria-labelledby=\"hl_form_${this.chessboard.id}\">\n        <label for=\"move_piece_input_from_${this.chessboard.id}\">${extension.t.from}</label>\n        <input class=\"input-from\" type=\"text\" size=\"2\" id=\"move_piece_input_from_${this.chessboard.id}\"/>\n        <label for=\"move_piece_input_to_${this.chessboard.id}\">${extension.t.to}</label>\n        <input class=\"input-to\" type=\"text\" size=\"2\" id=\"move_piece_input_to_${this.chessboard.id}\"/>\n        <button type=\"submit\" class=\"button-move\">${extension.t.move}</button>\n    </form>\n</div>`)\n        this.form = this.movePieceFormContainer.querySelector(\"form\")\n        this.inputFrom = this.form.querySelector(\".input-from\")\n        this.inputTo = this.form.querySelector(\".input-to\")\n        this.moveButton = this.form.querySelector(\".button-move\")\n        this.form.addEventListener(\"submit\", (evt) => {\n            evt.preventDefault()\n            if (this.chessboard.state.moveInputCallback({\n                chessboard: this.chessboard,\n                type: INPUT_EVENT_TYPE.validateMoveInput,\n                squareFrom: this.inputFrom.value,\n                squareTo: this.inputTo.value\n            })) {\n                this.chessboard.movePiece(this.inputFrom.value, this.inputTo.value,\n                    true).then(() => {\n                    this.inputFrom.value = \"\"\n                    this.inputTo.value = \"\"\n                })\n            }\n        })\n        container.appendChild(this.movePieceFormContainer)\n        extension.registerExtensionPoint(EXTENSION_POINT.moveInputToggled, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        if (this.inputFrom) {\n            if (this.chessboard.state.inputWhiteEnabled || this.chessboard.state.inputBlackEnabled) {\n                this.inputFrom.disabled = false\n                this.inputTo.disabled = false\n                this.moveButton.disabled = false\n            } else {\n                this.inputFrom.disabled = true\n                this.inputTo.disabled = true\n                this.moveButton.disabled = true\n            }\n        }\n    }\n}\n\nclass BoardAsTable {\n    constructor(container, extension) {\n        this.extension = extension\n        this.chessboard = extension.chessboard\n        this.boardAsTableContainer = Utils.createDomElement(`<div><h3 id=\"hl_table_${this.chessboard.id}\">${extension.t.board_as_table}</h3><div class=\"table\"></div></div>`)\n        this.boardAsTable = this.boardAsTableContainer.querySelector(\".table\")\n        container.appendChild(this.boardAsTableContainer)\n        extension.registerExtensionPoint(EXTENSION_POINT.positionChanged, () => {\n            this.redraw()\n        })\n        extension.registerExtensionPoint(EXTENSION_POINT.boardChanged, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        const squares = this.chessboard.state.position.squares.slice()\n        const ranks = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\n        const files = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"]\n        if (this.chessboard.state.orientation === COLOR.black) {\n            ranks.reverse()\n            files.reverse()\n            squares.reverse()\n        }\n        let html = `<table aria-labelledby=\"hl_table_${this.chessboard.id}\"><tr><th></th>`\n        for (const rank of ranks) {\n            html += `<th scope='col'>${rank}</th>`\n        }\n        html += \"</tr>\"\n        for (let x = 7; x >= 0; x--) {\n            html += `<tr><th scope=\"row\">${files[7 - x]}</th>`\n            for (let y = 0; y < 8; y++) {\n                const pieceCode = squares[y % 8 + x * 8]\n                let color, name\n                if (pieceCode) {\n                    color = pieceCode.charAt(0)\n                    name = pieceCode.charAt(1)\n                    html += `<td>${renderPieceTitle(this.extension.lang, name, color)}</td>`\n                } else {\n                    html += `<td></td>`\n                }\n            }\n            html += \"</tr>\"\n        }\n        html += \"</table>\"\n        this.boardAsTable.innerHTML = html\n    }\n}\n\nclass PiecesAsList {\n    constructor(container, extension) {\n        this.extension = extension\n        this.chessboard = extension.chessboard\n        this.piecesListContainer = Utils.createDomElement(`<div><h3 id=\"hl_lists_${this.chessboard.id}\">${extension.t.pieces_lists}</h3><div class=\"list\"></div></div>`)\n        this.piecesList = this.piecesListContainer.querySelector(\".list\")\n        container.appendChild(this.piecesListContainer)\n        extension.registerExtensionPoint(EXTENSION_POINT.positionChanged, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        const pieces = this.chessboard.state.position.getPieces()\n        let listW = \"\"\n        let listB = \"\"\n        for (const piece of pieces) {\n            if (piece.color === \"w\") {\n                listW += `<li class=\"list-inline-item\">${renderPieceTitle(this.extension.lang, piece.type)} ${piece.position}</li>`\n            } else {\n                listB += `<li class=\"list-inline-item\">${renderPieceTitle(this.extension.lang, piece.type)} ${piece.position}</li>`\n            }\n        }\n        this.piecesList.innerHTML = `\n        <h4 id=\"white_${this.chessboard.id}\">${this.extension.t.pieces} ${this.extension.tPieces.colors_long.w}</h4>\n        <ul aria-labelledby=\"white_${this.chessboard.id}\" class=\"list-inline\">${listW}</ul>\n        <h4 id=\"black_${this.chessboard.id}\">${this.extension.t.pieces} ${this.extension.tPieces.colors_long.b}</h4>\n        <ul aria-labelledby=\"black_${this.chessboard.id}\" class=\"list-inline\">${listB}</ul>`\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\n\nexport class AutoBorderNone extends Extension {\n    constructor(chessboard, props = {}) {\n        super(chessboard)\n        this.props = {\n            chessboardBorderType: chessboard.props.style.borderType,\n            borderNoneBelow: 540 // pixels width of the board, where the border is set to none\n        }\n        Object.assign(this.props, props)\n        this.registerExtensionPoint(EXTENSION_POINT.beforeRedrawBoard, this.extensionPointBeforeRedrawBoard.bind(this))\n    }\n    extensionPointBeforeRedrawBoard() {\n        let newBorderType\n        if(this.chessboard.view.width < this.props.borderNoneBelow){\n            newBorderType = \"none\"\n        } else {\n            newBorderType = this.props.chessboardBorderType\n        }\n        if(newBorderType !== this.chessboard.props.style.borderType) {\n            this.chessboard.props.style.borderType = newBorderType\n            this.chessboard.view.updateMetrics()\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Chessboard, COLOR, INPUT_EVENT_TYPE} from \"cm-chessboard/src/Chessboard.js\"\nimport {FEN} from \"cm-chessboard/src/model/Position.js\"\nimport {Markers} from \"cm-chessboard/src/extensions/markers/Markers.js\"\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {CoreUtils} from \"cm-web-modules/src/utils/CoreUtils.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\nimport {PromotionDialog} from \"cm-chessboard/src/extensions/promotion-dialog/PromotionDialog.js\"\nimport {Accessibility} from \"cm-chessboard/src/extensions/accessibility/Accessibility.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\nimport {AutoBorderNone} from \"cm-chessboard/src/extensions/auto-border-none/AutoBorderNone.js\"\n\nexport const CONSOLE_MARKER_TYPE = {\n    moveInput: {class: \"marker-frame\", slice: \"markerFrame\"},\n    check: {class: \"marker-circle-danger\", slice: \"markerCircle\"},\n    wrongMove: {class: \"marker-frame-danger\", slice: \"markerFrame\"},\n    premove: {class: \"marker-frame-primary\", slice: \"markerFrame\"},\n    legalMove: {class: \"marker-dot\", slice: \"markerDot\"},\n    legalMoveCapture: {class: \"marker-bevel\", slice: \"markerBevel\"}\n}\n\nexport class Board {\n\n    constructor(chessConsole, props = {}) {\n        this.context = chessConsole.componentContainers.board\n        chessConsole.components.board = this // register board component, to allow access to the promotion dialog\n        this.initialized = new Promise((resolve) => {\n            this.i18n = chessConsole.i18n\n            this.i18n.load({\n                de: {\n                    chessBoard: \"Schachbrett\"\n                },\n                en: {\n                    chessBoard: \"Chess Board\"\n                }\n            }).then(() => {\n                this.chessConsole = chessConsole\n                this.elements = {\n                    playerTop: document.createElement(\"div\"),\n                    playerBottom: document.createElement(\"div\"),\n                    chessboard: document.createElement(\"div\")\n                }\n                this.elements.playerTop.setAttribute(\"class\", \"player top\")\n                this.elements.playerTop.innerHTML = \"&nbsp;\"\n                this.elements.playerBottom.setAttribute(\"class\", \"player bottom\")\n                this.elements.playerBottom.innerHTML = \"&nbsp;\"\n                this.elements.chessboard.setAttribute(\"class\", \"chessboard\")\n                this.context.appendChild(DomUtils.createElement(\"<h2 class='visually-hidden'>\" + this.i18n.t(\"chessBoard\") + \"</h2>\"))\n                this.context.appendChild(this.elements.playerTop)\n                this.context.appendChild(this.elements.chessboard)\n                this.context.appendChild(this.elements.playerBottom)\n                this.chessConsole.state.observeChess((params) => {\n                    let animated = true\n                    if (params.functionName === \"load_pgn\") {\n                        animated = false\n                    }\n                    this.setPositionOfPlyViewed(animated)\n                    this.markLastMove()\n                })\n                Observe.property(this.chessConsole.state, \"plyViewed\", (props) => {\n                    this.setPositionOfPlyViewed(props.oldValue !== undefined)\n                    this.markLastMove()\n                })\n                this.props = {\n                    position: FEN.empty,\n                    orientation: chessConsole.state.orientation,\n                    assetsUrl: undefined,\n                    markLegalMoves: true,\n                    style: {\n                        aspectRatio: 0.98\n                    },\n                    accessibility: {\n                        active: true, // turn accessibility on or off\n                        brailleNotationInAlt: true, // show the braille notation of the position in the alt attribute of the SVG image\n                        movePieceForm: true, // display a form to move a piece (from, to, move)\n                        boardAsTable: true, // display the board additionally as HTML table\n                        piecesAsList: true, // display the pieces additionally as List\n                        visuallyHidden: true // hide all those extra outputs visually but keep them accessible for screen readers and braille displays\n                    },\n                    markers: {\n                        moveInput: CONSOLE_MARKER_TYPE.moveInput,\n                        check: CONSOLE_MARKER_TYPE.check,\n                        wrongMove: CONSOLE_MARKER_TYPE.wrongMove,\n                        premove: CONSOLE_MARKER_TYPE.premove,\n                        legalMove: CONSOLE_MARKER_TYPE.legalMove,\n                        legalMoveCapture: CONSOLE_MARKER_TYPE.legalMoveCapture\n                    },\n                    extensions: [{class: PromotionDialog}, {\n                        class: ChessConsoleMarkers, props: {\n                            board: this,\n                            autoMarkers: props.markers && props.markers.moveInput ? {...props.markers.moveInput} : {...CONSOLE_MARKER_TYPE.moveInput}\n                        }\n                    }, {class: AutoBorderNone, props: { borderNoneBelow: 580 }}]\n                }\n                CoreUtils.mergeObjects(this.props, props)\n                if (this.props.accessibility.active) {\n                    this.props.extensions.push({\n                        class: Accessibility, props: this.props.accessibility\n                    })\n                }\n                this.chessboard = new Chessboard(this.elements.chessboard, this.props)\n                Observe.property(chessConsole.state, \"orientation\", () => {\n                    this.setPlayerNames()\n                    this.chessboard.setOrientation(chessConsole.state.orientation).then(() => {\n                        this.markPlayerToMove()\n                    })\n                })\n                Observe.property(chessConsole.player, \"name\", () => {\n                    this.setPlayerNames()\n                })\n                Observe.property(chessConsole.opponent, \"name\", () => {\n                    this.setPlayerNames()\n                })\n                chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.moveRequest, () => {\n                    this.markPlayerToMove()\n                })\n                this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.illegalMove, (message) => {\n                    this.chessboard.removeMarkers(this.props.markers.wrongMove)\n                    clearTimeout(this.removeMarkersTimeout)\n                    if (message.move.from) {\n                        this.chessboard.addMarker(this.props.markers.wrongMove, message.move.from)\n                    } else {\n                        console.warn(\"illegalMove without `message.move.from`\")\n                    }\n                    if (message.move.to) {\n                        this.chessboard.addMarker(this.props.markers.wrongMove, message.move.to)\n                    }\n                    this.removeMarkersTimeout = setTimeout(() => {\n                        this.chessboard.removeMarkers(this.props.markers.wrongMove)\n                    }, 500)\n                })\n                this.setPositionOfPlyViewed(false)\n                this.setPlayerNames()\n                this.markPlayerToMove()\n                this.markLastMove()\n\n                resolve(this)\n            })\n        })\n        /**\n         * @deprecated 2023-04-11 use `this.initialized` instead\n         */\n        this.initialization = this.initialized\n    }\n\n    setPositionOfPlyViewed(animated = true) {\n        clearTimeout(this.setPositionOfPlyViewedDebounced)\n        this.setPositionOfPlyViewedDebounced = setTimeout(() => {\n            const to = this.chessConsole.state.chess.fenOfPly(this.chessConsole.state.plyViewed)\n            this.chessboard.setPosition(to, animated)\n        })\n    }\n\n    markLastMove() {\n        window.clearTimeout(this.markLastMoveDebounce)\n        this.markLastMoveDebounce = setTimeout(() => {\n            this.chessboard.removeMarkers(this.props.markers.moveInput)\n            this.chessboard.removeMarkers(this.props.markers.check)\n            if (this.chessConsole.state.plyViewed > 0) {\n                const lastMove = this.chessConsole.state.chess.history()[this.chessConsole.state.plyViewed - 1]\n                if (lastMove) {\n                    this.chessboard.addMarker(this.props.markers.moveInput, lastMove.from)\n                    this.chessboard.addMarker(this.props.markers.moveInput, lastMove.to)\n                    if (this.chessConsole.state.chess.inCheck(lastMove) || this.chessConsole.state.chess.inCheckmate(lastMove)) {\n                        const kingSquare = this.chessConsole.state.chess.pieces(\"k\", this.chessConsole.state.chess.turn(lastMove), lastMove)[0]\n                        this.chessboard.addMarker(this.props.markers.check, kingSquare.square)\n                    }\n                }\n            }\n        })\n    }\n\n    setPlayerNames() {\n        window.clearTimeout(this.setPlayerNamesDebounce)\n        this.setPlayerNamesDebounce = setTimeout(() => {\n            if (this.chessConsole.props.playerColor === this.chessConsole.state.orientation) {\n                this.elements.playerBottom.innerHTML = this.chessConsole.player.name\n                this.elements.playerTop.innerHTML = this.chessConsole.opponent.name\n            } else {\n                this.elements.playerBottom.innerHTML = this.chessConsole.opponent.name\n                this.elements.playerTop.innerHTML = this.chessConsole.player.name\n            }\n        })\n    }\n\n    markPlayerToMove() {\n        clearTimeout(this.markPlayerToMoveDebounce)\n        this.markPlayerToMoveDebounce = setTimeout(() => {\n            this.elements.playerTop.classList.remove(\"to-move\")\n            this.elements.playerBottom.classList.remove(\"to-move\")\n            this.elements.playerTop.classList.remove(\"not-to-move\")\n            this.elements.playerBottom.classList.remove(\"not-to-move\")\n            const playerMove = this.chessConsole.playerToMove()\n            if (\n                this.chessConsole.state.orientation === COLOR.white &&\n                playerMove === this.chessConsole.playerWhite() ||\n                this.chessConsole.state.orientation === COLOR.black &&\n                playerMove === this.chessConsole.playerBlack()) {\n                this.elements.playerBottom.classList.add(\"to-move\")\n                this.elements.playerTop.classList.add(\"not-to-move\")\n            } else {\n                this.elements.playerTop.classList.add(\"to-move\")\n                this.elements.playerBottom.classList.add(\"not-to-move\")\n            }\n        }, 10)\n    }\n\n}\n\nclass ChessConsoleMarkers extends Markers {\n    drawAutoMarkers(event) {\n        clearTimeout(this.drawAutoMarkersDebounced)\n        this.drawAutoMarkersDebounced = setTimeout(() => {\n                this.removeMarkers(this.props.autoMarkers)\n                const board = this.props.board\n                const moves = this.props.board.chessConsole.state.chess.moves({square: event.square, verbose: true})\n                if (board.props.markLegalMoves) {\n                    if (event.type === INPUT_EVENT_TYPE.moveInputStarted ||\n                        event.type === INPUT_EVENT_TYPE.validateMoveInput ||\n                        event.type === INPUT_EVENT_TYPE.moveInputCanceled ||\n                        event.type === INPUT_EVENT_TYPE.moveInputFinished) {\n                        event.chessboard.removeMarkers(board.props.markers.legalMove)\n                        event.chessboard.removeMarkers(board.props.markers.legalMoveCapture)\n                    }\n                    if (event.type === INPUT_EVENT_TYPE.moveInputStarted) {\n                        for (const move of moves) { // draw dots on possible squares\n                            if (move.promotion && move.promotion !== \"q\") {\n                                continue\n                            }\n                            if (event.chessboard.getPiece(move.to)) {\n                                event.chessboard.addMarker(board.props.markers.legalMoveCapture, move.to)\n                            } else {\n                                event.chessboard.addMarker(board.props.markers.legalMove, move.to)\n                            }\n                        }\n                    }\n                }\n                if (event.type === INPUT_EVENT_TYPE.moveInputStarted) {\n                    if (event.moveInputCallbackResult) {\n                        this.addMarker(this.props.autoMarkers, event.squareFrom)\n                    }\n                } else if (event.type === INPUT_EVENT_TYPE.movingOverSquare) {\n                    this.addMarker(this.props.autoMarkers, event.squareFrom)\n                    if (event.squareTo) {\n                        this.addMarker(this.props.autoMarkers, event.squareTo)\n                    }\n                }\n            }\n        )\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nexport class GameStateOutput {\n\n    constructor(chessConsole) {\n        this.context = chessConsole.componentContainers.notifications\n        this.chessConsole = chessConsole\n        this.i18n = chessConsole.i18n\n        this.i18n.load(\n            {\n                de: {\n                    game_over: \"Das Spiel ist beendet\",\n                    check: \"Schach!\",\n                    checkmate: \"Schachmatt\",\n                    draw: \"Remis\",\n                    stalemate: \"Patt\",\n                    threefold_repetition: \"Remis durch dreifache Wiederholung\"\n                },\n                en: {\n                    game_over: \"The game is over\",\n                    check: \"Check!\",\n                    checkmate: \"Checkmate\",\n                    draw: \"Remis\",\n                    stalemate: \"Stalemate\",\n                    threefold_repetition: \"Remis by threefold repetition\"\n                }\n            }\n        )\n        this.element = document.createElement(\"div\")\n        this.element.setAttribute(\"class\", \"gameState alert alert-primary mb-2\")\n        this.context.appendChild(this.element)\n\n        this.chessConsole.state.observeChess(() => {\n            this.redraw()\n        })\n        this.redraw()\n    }\n\n    redraw() {\n        const chess = this.chessConsole.state.chess\n        let html = ''\n        if (chess.gameOver()) {\n            html += `<b>${this.i18n.t(\"game_over\")}</b><br/>`\n            if (chess.inCheckmate()) {\n                html += `${this.i18n.t(\"checkmate\")}`\n            } else if (chess.inStalemate()) {\n                html += `${this.i18n.t(\"stalemate\")}`\n            } else if (chess.inThreefoldRepetition()) {\n                html += `${this.i18n.t(\"threefold_repetition\")}`\n            } else if (chess.inDraw()) {\n                html += `${this.i18n.t(\"draw\")}`\n            }\n        } else if (chess.inCheck()) {\n            html = `${this.i18n.t(\"check\")}`\n        } else {\n            html = \"\"\n        }\n        if (html) {\n            this.chessConsole.componentContainers.notifications.style.display = \"block\"\n            this.element.innerHTML = `${html}`\n        } else {\n            this.chessConsole.componentContainers.notifications.style.display = \"none\"\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chess\n * License: MIT, see file 'LICENSE'\n *\n * @deprecated\n */\n\nimport {COLOR} from \"cm-chess/src/Chess.js\"\n\nexport const PIECES = {\n    notation: {\n        de: {\n            R: \"T\", N: \"S\", B: \"L\", Q: \"D\", K: \"K\", P: \"\"\n        }\n    },\n    figures: {\n        utf8: {\n            Rw: \"\u2656\", Nw: \"\u2658\", Bw: \"\u2657\", Qw: \"\u2655\", Kw: \"\u2654\", Pw: \"\u2659\",\n            Rb: \"\u265C\", Nb: \"\u265E\", Bb: \"\u265D\", Qb: \"\u265B\", Kb: \"\u265A\", Pb: \"\u265F\"\n        },\n        fontAwesomePro: {\n            Rw: '<i class=\"far fa-fw fa-chess-rook\"></i>',\n            Nw: '<i class=\"far fa-fw fa-chess-knight\"></i>',\n            Bw: '<i class=\"far fa-fw fa-chess-bishop\"></i>',\n            Qw: '<i class=\"far fa-fw fa-chess-queen\"></i>',\n            Kw: '<i class=\"far fa-fw fa-chess-king\"></i>',\n            Pw: '<i class=\"far fa-fw fa-chess-pawn\"></i>',\n            Rb: '<i class=\"fas fa-fw fa-chess-rook\"></i>',\n            Nb: '<i class=\"fas fa-fw fa-chess-knight\"></i>',\n            Bb: '<i class=\"fas fa-fw fa-chess-bishop\"></i>',\n            Qb: '<i class=\"fas fa-fw fa-chess-queen\"></i>',\n            Kb: '<i class=\"fas fa-fw fa-chess-king\"></i>',\n            Pb: '<i class=\"fas fa-fw fa-chess-pawn\"></i>'\n        }\n    }\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport class ChessRender {\n    static san(san, color = COLOR.white, lang = \"en\", mode = \"text\", pieces = PIECES.figures.utf8) {\n        // console.warn(\"ChessRender is deprecated and will be removed in future\")\n        if(mode === \"figures\") {\n            if (color === COLOR.white) {\n                return this.replaceAll(san, {\n                    \"R\": pieces.Rw,\n                    \"N\": pieces.Nw,\n                    \"B\": pieces.Bw,\n                    \"Q\": pieces.Qw,\n                    \"K\": pieces.Kw\n                })\n            } else {\n                return this.replaceAll(san, {\n                    \"R\": pieces.Rb,\n                    \"N\": pieces.Nb,\n                    \"B\": pieces.Bb,\n                    \"Q\": pieces.Qb,\n                    \"K\": pieces.Kb\n                })\n            }\n        } else if(mode === \"text\") {\n            return this.replaceAll(san, PIECES.notation[lang])\n        } else {\n            console.error(\"mode must be 'text' or 'figures'\")\n        }\n    }\n    static replaceAll(str, replacementsObj, ignoreCase = false) {\n        let retStr = str\n        const flags = ignoreCase ? \"gi\" : \"g\"\n        for (let needle in replacementsObj) {\n            // noinspection JSUnfilteredForInLoop\n            retStr = retStr.replace(new RegExp(needle, flags), replacementsObj[needle])\n        }\n        return retStr\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {COLOR} from \"cm-chess/src/Chess.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\nimport {ChessRender} from \"../tools/ChessRender.js\"\n\nexport class History {\n\n    constructor(chessConsole, props) {\n        this.context = chessConsole.componentContainers.left.querySelector(\".chess-console-history\")\n        this.chessConsole = chessConsole\n        this.element = document.createElement(\"div\")\n        this.element.setAttribute(\"class\", \"history\")\n        this.context.appendChild(this.element)\n        this.props = {\n            notationType: \"figures\",\n            makeClickable: true\n        }\n        Object.assign(this.props, props)\n        this.chessConsole.state.observeChess(() => {\n            this.redraw()\n        })\n        Observe.property(chessConsole.state, \"plyViewed\", () => {\n            this.redraw()\n        })\n        if(this.props.makeClickable) {\n            this.addClickEvents()\n        }\n        this.i18n = chessConsole.i18n\n        this.i18n.load({\n            \"de\": {\n                \"game_history\": \"Spielnotation\"\n            },\n            \"en\": {\n                \"game_history\": \"Game notation\"\n            }\n        }).then(() => {\n            this.redraw()\n        })\n    }\n\n    addClickEvents() {\n        this.clickHandler = DomUtils.delegate(this.element, \"click\", \".ply\", (event) => {\n            const ply = parseInt(event.target.getAttribute(\"data-ply\"), 10)\n            if(ply <= this.chessConsole.state.chess.history().length) {\n                this.chessConsole.state.plyViewed = ply\n            }\n        })\n        this.element.classList.add(\"clickable\")\n    }\n\n    removeClickEvents() {\n        this.clickHandler.remove()\n        this.element.classList.remove(\"clickable\")\n    }\n\n    redraw() {\n        window.clearTimeout(this.redrawDebounce)\n        this.redrawDebounce = setTimeout(() => {\n            const history = this.chessConsole.state.chess.history()\n            let sanWhite\n            let sanBlack\n            let output = \"\"\n            let i\n            let rowClass = \"\"\n            let whiteClass = \"\"\n            let blackClass = \"\"\n            for (i = 0; i < history.length; i += 2) {\n                const moveWhite = history[i]\n                if (moveWhite) {\n                    sanWhite = ChessRender.san(moveWhite.san, COLOR.white, this.chessConsole.i18n.lang, this.props.notationType, this.chessConsole.props.figures)\n                }\n                const moveBlack = history[i + 1]\n                if (moveBlack) {\n                    sanBlack = ChessRender.san(moveBlack.san, COLOR.black, this.chessConsole.i18n.lang, this.props.notationType, this.chessConsole.props.figures)\n                } else {\n                    sanBlack = \"\"\n                }\n                if (this.chessConsole.state.plyViewed < i + 1) {\n                    whiteClass = \"text-muted\"\n                }\n                if(this.chessConsole.state.plyViewed === i + 1) {\n                    whiteClass = \"active\"\n                }\n                if (this.chessConsole.state.plyViewed < i + 2) {\n                    blackClass = \"text-muted\"\n                }\n                if(this.chessConsole.state.plyViewed === i + 2) {\n                    blackClass = \"active\"\n                }\n                output += \"<tr><td class='num \" + rowClass + \"'>\" + (i / 2 + 1) + \".</td><td data-ply='\" + (i + 1) + \"' class='ply \" + whiteClass + \" ply\" + (i + 1) + \"'>\" + sanWhite + \"</td><td data-ply='\" + (i + 2) + \"' class='ply \" + blackClass + \" ply\" + (i + 2) + \"'>\" + sanBlack + \"</td></tr>\"\n            }\n            this.element.innerHTML = \"<h2 class='visually-hidden'>\" + this.i18n.t(\"game_history\") + \"</h2>\" +\n                \"<table>\" + output + \"</table>\"\n            if (this.chessConsole.state.plyViewed > 0) {\n                const $ply = $(this.element).find('.ply' + this.chessConsole.state.plyViewed)\n                if ($ply.position()) {\n                    this.element.scrollTop = 0\n                    this.element.scrollTop = ($ply.position().top - 68)\n                }\n            }\n        })\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {PIECES} from \"cm-chess/src/Chess.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\n\nconst zeroWithSpace = \"&#8203;\"\n\nexport class CapturedPieces {\n\n    constructor(chessConsole) {\n        this.chessConsole = chessConsole\n        this.element = document.createElement(\"div\")\n        this.element.setAttribute(\"class\", \"captured-pieces\")\n        this.chessConsole.componentContainers.left.querySelector(\".chess-console-captured\").appendChild(this.element)\n        this.chessConsole.state.observeChess(() => {\n            this.redraw()\n        })\n        Observe.property(this.chessConsole.state, \"plyViewed\", () => {\n            this.redraw()\n        })\n        Observe.property(this.chessConsole.state, \"orientation\", () => {\n            this.redraw()\n        })\n        this.i18n = chessConsole.i18n\n        this.i18n.load({\n            \"de\": {\n                \"captured_pieces\": \"Geschlagene Figuren\"\n            },\n            \"en\": {\n                \"captured_pieces\": \"Captured pieces\"\n            }\n        }).then(() => {\n            this.redraw()\n        })\n        DomUtils.delegate(this.element, \"click\", \".piece\", (event) => {\n            const ply = event.target.getAttribute(\"data-ply\")\n            this.chessConsole.state.plyViewed = parseInt(ply, 10)\n        })\n    }\n\n    redraw() {\n        window.clearTimeout(this.redrawDebounce)\n        this.redrawDebounce = setTimeout(() => {\n            const capturedPiecesWhite = []\n            const capturedPiecesWhiteAfterPlyViewed = []\n            const capturedPiecesBlack = []\n            const capturedPiecesBlackAfterPlyViewed = []\n\n            const history = this.chessConsole.state.chess.history({verbose: true})\n            let pointsWhite = 0\n            let pointsBlack = 0\n            history.forEach((move, index) => {\n                if (move.flags.indexOf(\"c\") !== -1 || move.flags.indexOf(\"e\") !== -1) {\n                    const pieceCaptured = move.captured.toUpperCase()\n                    if (move.color === \"b\") {\n                        const pieceHtml = `<span class=\"piece\" role='button' data-ply='${move.ply}'>` + this.chessConsole.props.figures[pieceCaptured + \"w\"] + \"</span>\"\n                        if (index < this.chessConsole.state.plyViewed) {\n                            capturedPiecesWhite.push(pieceHtml)\n                        } else {\n                            capturedPiecesWhiteAfterPlyViewed.push(pieceHtml)\n                        }\n                        pointsWhite += PIECES[pieceCaptured.toLowerCase()].value\n                    } else if (move.color === \"w\") {\n                        const pieceHtml = `<span class=\"piece\" role='button' data-ply='${move.ply}'>`  + this.chessConsole.props.figures[pieceCaptured + \"b\"] + \"</span>\"\n                        if (index < this.chessConsole.state.plyViewed) {\n                            capturedPiecesBlack.push(pieceHtml)\n                        } else {\n                            capturedPiecesBlackAfterPlyViewed.push(pieceHtml)\n                        }\n                        pointsBlack += PIECES[pieceCaptured.toLowerCase()].value\n                    }\n                }\n            })\n            const outputWhite = this.renderPieces(capturedPiecesWhite, capturedPiecesWhiteAfterPlyViewed, pointsWhite)\n            const outputBlack = this.renderPieces(capturedPiecesBlack, capturedPiecesBlackAfterPlyViewed, pointsBlack)\n            this.element.innerHTML = \"<h2 class='visually-hidden'>\" + this.i18n.t(\"captured_pieces\") + \"</h2>\" +\n                (this.chessConsole.state.orientation === \"w\" ? outputWhite + outputBlack : outputBlack + outputWhite)\n        })\n    }\n\n    renderPieces(capturedPieces, capturedPiecesAfterPlyViewed, points) {\n        let output = \"<div>\"\n        if (capturedPieces.length > 0) {\n            output += capturedPieces.join(zeroWithSpace)\n        }\n        if (capturedPiecesAfterPlyViewed.length > 0) {\n            output += \"<span class='text-muted'>\" + capturedPiecesAfterPlyViewed.join(zeroWithSpace) + \"</span>\"\n        }\n        output += \"<small> \" + (points > 0 ? points : \"\") + \"</small></div>\"\n        return output\n    }\n\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {COLOR} from \"cm-chessboard/src/Chessboard.js\"\n\nexport class HistoryControl {\n    constructor(chessConsole, props = {}) {\n        this.context = chessConsole.componentContainers.controlButtons\n        this.chessConsole = chessConsole\n        const i18n = chessConsole.i18n\n        this.props = {\n            autoPlayDelay: 1500\n        }\n        Object.assign(this.props, props)\n        i18n.load({\n            de: {\n                \"to_game_start\": \"Zum Spielstart\",\n                \"one_move_back\": \"Ein Zug zur\u00FCck\",\n                \"one_move_forward\": \"Ein Zug weiter\",\n                \"to_last_move\": \"Zum letzen Zug\",\n                \"auto_run\": \"Automatisch abspielen\",\n                \"turn_board\": \"Brett drehen\"\n            },\n            en: {\n                \"to_game_start\": \"To game start\",\n                \"one_move_back\": \"One move back\",\n                \"one_move_forward\": \"One move forward\",\n                \"to_last_move\": \"To last move\",\n                \"auto_run\": \"Auto play\",\n                \"turn_board\": \"Turn board\"\n            }\n        }).then(() => {\n\n            this.$btnFirst = $(`<button type=\"button\" title=\"${i18n.t('to_game_start')}\" class=\"btn btn-link text-black first\"><i class=\"fa fa-fw fa-fast-backward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnBack = $(`<button type=\"button\" title=\"${i18n.t('one_move_back')}\" class=\"btn btn-link text-black back\"><i class=\"fa fa-fw fa-step-backward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnForward = $(`<button type=\"button\" title=\"${i18n.t('one_move_forward')}\" class=\"btn btn-link text-black forward\"><i class=\"fa fa-fw fa-step-forward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnLast = $(`<button type=\"button\" title=\"${i18n.t('to_last_move')}\" class=\"btn btn-link text-black last\"><i class=\"fa fa-fw fa-fast-forward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnAutoplay = $(`<button type=\"button\" title=\"${i18n.t('auto_run')}\" class=\"btn btn-link text-black autoplay\"><i class=\"fa fa-fw fa-play\" aria-hidden=\"true\"></i><i class=\"fa fa-fw fa-stop\" aria-hidden=\"true\"></i></button>`)\n            this.$btnOrientation = $(`<button type=\"button\" title=\"${i18n.t('turn_board')}\" class=\"btn btn-link text-black orientation\"><i class=\"fa fa-fw fa-exchange-alt fa-rotate-90\" aria-hidden=\"true\"></i></button>`)\n\n            this.context.appendChild(this.$btnFirst[0])\n            this.context.appendChild(this.$btnBack[0])\n            this.context.appendChild(this.$btnForward[0])\n            this.context.appendChild(this.$btnLast[0])\n            this.context.appendChild(this.$btnAutoplay[0])\n            this.context.appendChild(this.$btnOrientation[0])\n\n            this.chessConsole.state.observeChess(() => {\n                this.setButtonStates()\n            })\n            Observe.property(this.chessConsole.state, \"plyViewed\", () => {\n                this.setButtonStates()\n            })\n            Observe.property(this.chessConsole.state, \"orientation\", () => {\n                if (this.chessConsole.state.orientation !== this.chessConsole.props.playerColor) {\n                    this.$btnOrientation.addClass(\"btn-active\") // todo\n                } else {\n                    this.$btnOrientation.removeClass(\"btn-active\") // todo\n                }\n            })\n            this.$btnFirst.click(() => {\n                this.chessConsole.state.plyViewed = 0\n                this.resetAutoPlay()\n            })\n            this.$btnBack.click(() => {\n                this.chessConsole.state.plyViewed--\n                this.resetAutoPlay()\n            })\n            this.$btnForward.click(() => {\n                this.chessConsole.state.plyViewed++\n                this.resetAutoPlay()\n            })\n            this.$btnLast.click(() => {\n                this.chessConsole.state.plyViewed = this.chessConsole.state.chess.plyCount()\n                this.resetAutoPlay()\n            })\n            this.$btnOrientation.click(() => {\n                this.chessConsole.state.orientation = this.chessConsole.state.orientation === COLOR.white ? COLOR.black : COLOR.white\n            })\n            this.$btnAutoplay.click(() => {\n                if (this.autoplay) {\n                    clearInterval(this.autoplay)\n                    this.autoplay = null\n                } else {\n                    this.chessConsole.state.plyViewed++\n                    this.autoplay = setInterval(this.autoPlayMove.bind(this), this.props.autoPlayDelay)\n                }\n                this.updatePlayIcon()\n            })\n            document.addEventListener('keydown', (e) => {\n                if (e.metaKey || e.ctrlKey || e.altKey) {\n                    return\n                }\n                if (document.activeElement.tagName === \"INPUT\" || document.activeElement.tagName === \"TEXTAREA\") {\n                    return\n                }\n                if (e.key === \"ArrowLeft\" || e.key === \"j\") {\n                    if (this.chessConsole.state.plyViewed > 0) {\n                        this.chessConsole.state.plyViewed--\n                        this.resetAutoPlay()\n                        e.preventDefault()\n                    }\n                } else if (e.key === \"ArrowRight\" || e.key === \"k\") {\n                    if (this.chessConsole.state.plyViewed < this.chessConsole.state.chess.plyCount()) {\n                        this.chessConsole.state.plyViewed++\n                        this.resetAutoPlay()\n                        e.preventDefault()\n                    }\n                } else if (e.key === \"ArrowUp\") {\n                    this.chessConsole.state.plyViewed = 0\n                    this.resetAutoPlay()\n                    e.preventDefault()\n                } else if (e.key === \"ArrowDown\") {\n                    this.chessConsole.state.plyViewed = this.chessConsole.state.chess.plyCount()\n                    this.resetAutoPlay()\n                    e.preventDefault()\n                } else if (e.key === \"f\") {\n                    this.chessConsole.state.orientation = this.chessConsole.state.orientation === COLOR.white ? COLOR.black : COLOR.white\n                    e.preventDefault()\n                } else if (e.key === \" \") {\n                    if (this.autoplay) {\n                        clearInterval(this.autoplay)\n                        this.autoplay = null\n                    } else {\n                        if (this.chessConsole.state.plyViewed < this.chessConsole.state.chess.plyCount()) {\n                            this.chessConsole.state.plyViewed++\n                            this.autoplay = setInterval(this.autoPlayMove.bind(this), this.props.autoPlayDelay)\n                        }\n                    }\n                    this.updatePlayIcon()\n                    e.preventDefault()\n                }\n            })\n            this.setButtonStates()\n        })\n    }\n\n    resetAutoPlay() {\n        if (this.autoplay) {\n            clearInterval(this.autoplay)\n            this.autoplay = setInterval(this.autoPlayMove.bind(this), this.props.autoPlayDelay)\n        }\n    }\n\n    autoPlayMove() {\n        if (this.chessConsole.state.plyViewed >= this.chessConsole.state.chess.plyCount()) {\n            clearInterval(this.autoplay)\n            this.autoplay = null\n            this.updatePlayIcon()\n        } else {\n            this.chessConsole.state.plyViewed++\n            if (this.chessConsole.state.plyViewed >= this.chessConsole.state.chess.plyCount()) {\n                clearInterval(this.autoplay)\n                this.autoplay = null\n                this.updatePlayIcon()\n            }\n        }\n    }\n\n    updatePlayIcon() {\n        const $playIcon = this.$btnAutoplay.find(\".fa-play\")\n        const $stopIcon = this.$btnAutoplay.find(\".fa-stop\")\n        if (this.autoplay) {\n            $playIcon.hide()\n            $stopIcon.show()\n        } else {\n            $playIcon.show()\n            $stopIcon.hide()\n        }\n    }\n\n    setButtonStates() {\n        window.clearTimeout(this.redrawDebounce)\n        this.redrawDebounce = setTimeout(() => {\n            if (this.chessConsole.state.plyViewed > 0) {\n                this.$btnFirst.prop('disabled', false)\n                this.$btnBack.prop('disabled', false)\n            } else {\n                this.$btnFirst.prop('disabled', true)\n                this.$btnBack.prop('disabled', true)\n            }\n            if (this.chessConsole.state.plyViewed < this.chessConsole.state.chess.plyCount()) {\n                this.$btnLast.prop('disabled', false)\n                this.$btnForward.prop('disabled', false)\n                this.$btnAutoplay.prop('disabled', false)\n            } else {\n                this.$btnLast.prop('disabled', true)\n                this.$btnForward.prop('disabled', true)\n                this.$btnAutoplay.prop('disabled', true)\n            }\n        })\n        this.updatePlayIcon()\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\nimport {DomUtils} from \"../utils/DomUtils.js\"\n\nexport class Component {\n\n    constructor(props = {}, state = {}) {\n        this.props = props\n        this.state = state\n    }\n\n}\n\nexport class UiComponent extends Component {\n\n    constructor(context, props = {}, state = {}) {\n        super(props, state)\n        this.context = context\n        this.actions = {}\n    }\n\n    /**\n     * Searches for \"data-event-listener\" attributes in the HTML, and couples them with actions.\n     * Tag Attributes:\n     *  - `data-event-listener`: The event \"click\", \"change\",...\n     *  - `data-action`: The action in this.actions, called on the event\n     *  - `data-delegate`: Query selector, to delegate the event from a child element\n     */\n    addDataEventListeners(context = this.context) {\n        const eventListenerElements = context.querySelectorAll(\"[data-event-listener]\")\n        if(this.props.debug) {\n            console.log(\"eventListenerElements\", context, eventListenerElements)\n        }\n        for (const eventListenerElement of eventListenerElements) {\n            const eventName = eventListenerElement.dataset.eventListener\n            const action = eventListenerElement.dataset.action\n            const delegate = eventListenerElement.dataset.delegate\n            if (!this.actions[action]) {\n                console.error(context, \"You have to add the action \\\"\" + action + \"\\\" to your component.\")\n            }\n            if (delegate) {\n                DomUtils.delegate(eventListenerElement, eventName, delegate, (target) => {\n                    if(this.props.debug) {\n                        console.log(\"delegate\", action, target)\n                    }\n                    this.actions[action](target)\n                })\n            } else {\n                if(this.props.debug) {\n                    console.log(\"addEventListener\", eventName, action)\n                }\n                if(!this.actions[action]) {\n                    console.error(\"no action\", \"\\\"\" + action + \"\\\"\", \"is defined\")\n                } else {\n                    eventListenerElement.addEventListener(eventName, this.actions[action].bind(this))\n                }\n            }\n        }\n        return this\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\nimport {COLOR} from \"cm-chess/src/Chess.js\"\nimport {Component} from \"cm-web-modules/src/app/Component.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\n\nexport class Persistence extends Component {\n\n    constructor(chessConsole, props) {\n        super(props)\n        this.chessConsole = chessConsole\n        if(!this.props.savePrefix) {\n            this.props.savePrefix = \"ChessConsole\"\n        }\n        this.chessConsole.state.observeChess(() => {\n            this.save()\n        })\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.newGame, () => {\n            this.save()\n        })\n        this.chessConsole.persistence = this\n    }\n\n    load(prefix = this.props.savePrefix) {\n        const props = {}\n        try {\n            if (this.loadValue(\"PlayerColor\") !== null) {\n                props.playerColor = this.loadValue(\"PlayerColor\")\n            } else {\n                props.playerColor = COLOR.white\n            }\n            if (localStorage.getItem(prefix + \"Pgn\") !== null) {\n                props.pgn = localStorage.getItem(prefix + \"Pgn\")\n            }\n            this.chessConsole.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.load)\n            this.chessConsole.initGame(props)\n        } catch (e) {\n            localStorage.clear()\n            console.warn(e)\n            this.chessConsole.initGame({playerColor: COLOR.white})\n        }\n    }\n\n    loadValue(valueName, prefix = this.props.savePrefix) {\n        let item = null\n        try {\n            item = localStorage.getItem(prefix + valueName)\n            return JSON.parse(item)\n        } catch (e) {\n            console.error(\"error loading \", prefix + valueName)\n            console.error(\"item:\" + item)\n            console.error(e)\n        }\n    }\n\n    save(prefix = this.props.savePrefix) {\n        localStorage.setItem(prefix + \"PlayerColor\", JSON.stringify(this.chessConsole.props.playerColor))\n        localStorage.setItem(prefix + \"Pgn\", this.chessConsole.state.chess.renderPgn())\n    }\n\n    saveValue(valueName, value, prefix = this.props.savePrefix) {\n        localStorage.setItem(prefix + valueName, JSON.stringify(value))\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\nconst events = ['click', 'touchstart', 'touchend', 'keydown', 'mousedown', 'mouseup', 'dblclick']\nlet audioProps = undefined\nwindow.cmAudioDebug = false\n\nexport const createAudioContext = (props) => {\n    audioProps = {\n        debug: false,\n        ...props\n    }\n    window.cmAudioDebug = audioProps.debug\n    window.AudioContext = window.AudioContext || window.webkitAudioContext\n    if (window.AudioContext) {\n        if (audioProps.debug) {\n            console.log('Web Audio API (AudioContext) supported by this browser')\n        }\n        window.cmAudioContext = new AudioContext()\n    } else if (window.webkitAudioContext) {\n        if (audioProps.debug) {\n            console.log('Web Audio API (window.webkitAudioContext) supported by this browser')\n        }\n        window.cmAudioContext = new webkitAudioContext()\n    } else {\n        console.error('Web Audio API is not supported by this browser')\n    }\n    window.cmMainGainNode = window.cmAudioContext.createGain()\n    window.cmMainGainNode.gain.value = 1\n    cmMainGainNode.connect(window.cmAudioContext.destination)\n    addEventListeners()\n}\n\nexport class Audio {\n\n    static context() {\n        if (!window.cmAudioContext) {\n            console.error(\"Audio.context() called before createAudioContext()\")\n        }\n        return window.cmAudioContext\n    }\n\n    static destination() {\n        return window.cmMainGainNode\n    }\n\n    static setGain(gain) {\n        window.cmMainGainNode.gain.setValueAtTime(gain, window.cmAudioContext.currentTime)\n    }\n\n    static isEnabled() {\n        return window.cmAudioContext.state === \"running\"\n    }\n\n    /*\n        Adds an event listener to the audioContext object\n        that listens for the \"statechange\" event. This event is triggered whenever the state of the AudioContext changes\n        (e.g., from \"suspended\" to \"running\" or vice versa). The listener function will be called whenever this event occurs,\n        allowing you to execute custom code in response to changes in the AudioContext state.\n     */\n    static addStateListener(listener) {\n        window.cmAudioContext.addEventListener(\"statechange\", listener)\n    }\n\n    /*\n        can be called from the UI to resume the AudioContext after user interaction\n     */\n    static resumeAudioContext() {\n        resumeAudioContext()\n    }\n\n}\n\n\nfunction addEventListeners() {\n    events.forEach(event => {\n        document.addEventListener(event, resumeAudioContext)\n    })\n    document.addEventListener('visibilitychange', () => {\n        if (!document.hidden) {\n            setTimeout(resumeAudioContext, 200)\n        }\n    })\n}\n\nfunction removeEventListeners() {\n    events.forEach(event => {\n        document.removeEventListener(event, resumeAudioContext)\n    })\n}\n\n// start context after user interaction\nfunction resumeAudioContext() {\n    if (window.cmAudioContext) {\n        if (window.cmAudioContext.state !== \"running\") {\n            window.cmAudioContext.resume().then(() => {\n                if (audioProps.debug) {\n                    console.log('AudioContext resumed successfully, state:', window.cmAudioContext.state)\n                }\n                removeEventListeners()\n            }).catch(error => {\n                console.error('Failed to resume AudioContext:', error)\n            })\n        } else {\n            console.warn('AudioContext already running')\n            removeEventListeners()\n        }\n    } else {\n        console.error(\"AudioContext not created\")\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Audio} from \"./Audio.js\"\n\nexport class Sample {\n\n    constructor(src, props = {}) {\n        this.src = src\n        this.props = {\n            gain: 1,\n            startWithoutAudioContext: true // start to play, without enabled audio context\n        }\n        Object.assign(this.props, props)\n        this.gainNode = Audio.context().createGain()\n        this.setGain(this.props.gain)\n        this.audioBuffer = null\n        this.load()\n    }\n\n    setGain(gain) {\n        if(window.cmAudioDebug) {\n            console.log(\"Sample.setGain\", gain)\n        }\n        this.gainNode.gain.setValueAtTime(gain, Audio.context().currentTime)\n    }\n\n    play(when = undefined, offset = undefined, duration = undefined) {\n        if(window.cmAudioDebug) {\n            console.log(\"Sample.play\", this.src, when, offset, duration)\n        }\n        if (this.props.startWithoutAudioContext || Audio.isEnabled()) {\n            this.loading.then(() => {\n                let source\n                source = this.createBufferSource()\n                source.start(when, offset, duration)\n            })\n        }\n\n    }\n\n    createBufferSource() {\n        const source = Audio.context().createBufferSource()\n        source.buffer = this.audioBuffer\n        source.connect(this.gainNode)\n        this.gainNode.connect(Audio.destination())\n        return source\n    }\n\n    load() {\n        this.loading = new Promise(((resolve, reject) => {\n            const request = new XMLHttpRequest()\n            request.open('GET', this.src, true)\n            request.responseType = 'arraybuffer'\n            request.onload = () => {\n                Audio.context().decodeAudioData(request.response, (audioBuffer) => {\n                    this.audioBuffer = audioBuffer\n                    resolve()\n                }, () => {\n                    console.error(\"error loading sound\", this.src)\n                    reject()\n                })\n            }\n            request.send()\n        }))\n        return this.loading\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Sample} from \"./Sample.js\"\n\nexport class AudioSprite extends Sample {\n\n    // noinspection JSCheckFunctionSignatures\n    play(sliceName, when = 0) {\n        this.playSlice(sliceName, when)\n    }\n\n    playSlice(sliceName, when = 0) {\n        const slice = this.props.slices[sliceName]\n        if (!slice) {\n            throw new Error(`slice ${sliceName} not found in sprite`)\n        }\n        super.play(when, slice.offset, slice.duration)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {AudioSprite} from \"cm-web-modules/src/audio/AudioSprite.js\"\nimport {Component} from \"cm-web-modules/src/app/Component.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\nimport {createAudioContext} from \"cm-web-modules/src/audio/Audio.js\"\n\nexport class Sound extends Component {\n\n    constructor(chessConsole, props) {\n        super(props)\n        createAudioContext()\n        this.chessConsole = chessConsole\n        this.audioSprite = new AudioSprite(this.props.soundSpriteFile,\n            {\n                gain: 1,\n                slices: {\n                    \"game_start\": {offset: 0, duration: 0.9},\n                    \"game_won\": {offset: 0.9, duration: 1.8},\n                    \"game_lost\": {offset: 2.7, duration: 0.9},\n                    \"game_draw\": {offset: 9.45, duration: 1.35},\n                    \"check\": {offset: 3.6, duration: 0.45},\n                    \"wrong_move\": {offset: 4.05, duration: 0.45},\n                    \"move\": {offset: 4.5, duration: 0.2},\n                    \"capture\": {offset: 6.3, duration: 0.2},\n                    \"castle\": {offset: 7.65, duration: 0.2},\n                    \"take_back\": {offset: 8.1, duration: 0.12},\n                    \"promotion\": {offset: 9.0, duration: 0.45},\n                    \"dialog\": {offset: 10.8, duration: 0.45}\n                }\n            })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.initGame, () => {\n            // this.play(\"game_start\")\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.legalMove, (data) => {\n            const chess = this.chessConsole.state.chess\n            const flags = data.moveResult.flags\n            if (flags.indexOf(\"p\") !== -1) {\n                this.play(\"promotion\")\n            } else if (flags.indexOf(\"c\") !== -1) {\n                this.play(\"capture\")\n            } else if (flags.indexOf(\"k\") !== -1 || flags.indexOf(\"q\") !== -1) {\n                this.play(\"castle\")\n            } else {\n                clearInterval(this.moveDebounced)\n                this.moveDebounced = setTimeout(() => {\n                    this.play(\"move\")\n                }, 10)\n            }\n            if (chess.inCheck() || chess.inCheckmate()) {\n                this.play(\"check\")\n            }\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.illegalMove, () => {\n            this.play(\"wrong_move\")\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.moveUndone, () => {\n            this.play(\"take_back\")\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.gameOver, (data) => {\n            setTimeout(() => {\n                if(!data.wonColor) {\n                    this.play(\"game_lost\")\n                } else {\n                    if(data.wonColor === this.chessConsole.props.playerColor) {\n                        this.play(\"game_won\")\n                    } else {\n                        this.play(\"game_lost\")\n                    }\n                }\n            }, 500)\n        })\n        chessConsole.sound = this\n    }\n\n    play(soundName) {\n        this.audioSprite.play(soundName)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/bootstrap-show-modal\n * License: MIT, see file 'LICENSE'\n */\n\nexport class Modal {\n    constructor(props) {\n        this.props = {\n            title: \"\", // the dialog title html\n            body: \"\", // the dialog body html\n            footer: \"\", // the dialog footer html (mainly used for buttons)\n            modalClass: \"fade\", // Additional css for \".modal\", \"fade\" for fade effect\n            modalDialogClass: \"\", // Additional css for \".modal-dialog\", like \"modal-lg\" or \"modal-sm\" for sizing\n            headerClass: \"\", // Additional css for \".modal-header\"\n            bodyClass: \"\", // Additional css for \".modal-body\"\n            footerClass: \"\", // Additional css for \".modal-footer\"\n            theme: undefined, // data-bs-theme\n            options: { // The Bootstrap modal options as described here: https://getbootstrap.com/docs/4.0/components/modal/#options\n                backdrop: 'static' // disallow closing on click in the background\n            },\n            draggable: false, // make the dialog draggable\n            // Events:\n            onCreate: null, // Callback, called after the modal was created\n            onShown: null, // Callback, called after the modal was shown and completely faded in\n            onDispose: null, // Callback, called after the modal was disposed\n            onSubmit: null // Callback of bootstrap.showConfirm(), called after yes or no was pressed\n        }\n        Object.assign(this.props, props)\n        this.id = \"bootstrap-show-modal-\" + i\n        i++\n        this.show()\n        if (this.props.onCreate) {\n            this.props.onCreate(this)\n        }\n    }\n\n    createContainerElement() {\n        const self = this\n        this.element = document.createElement(\"div\")\n        this.element.id = this.id\n        let cssClass = \"modal \" + this.props.modalClass\n        // seems to be a bug in bootstrap, but I am not sure\n        if(this.props.theme === \"dark\") {\n            cssClass += \" text-light\"\n        }\n        this.element.setAttribute(\"class\", cssClass)\n        this.element.setAttribute(\"tabindex\", \"-1\")\n        this.element.setAttribute(\"role\", \"dialog\")\n        this.element.setAttribute(\"aria-labelledby\", this.id)\n        if (this.props.theme) {\n            this.element.setAttribute(\"data-bs-theme\", this.props.theme)\n        }\n        this.element.innerHTML = `\n<div class=\"modal-dialog ${this.props.modalDialogClass}\" role=\"document\">\n    <div class=\"modal-content\">\n    <div class=\"modal-header ${this.props.headerClass}\">\n        <h5 class=\"modal-title\"></h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n    </div>\n    <div class=\"modal-body ${this.props.bodyClass}\"></div>\n    <div class=\"modal-footer ${this.props.footerClass}\"></div>\n    </div>\n</div>`\n        document.body.appendChild(this.element)\n        this.titleElement = this.element.querySelector(\".modal-title\")\n        this.bodyElement = this.element.querySelector(\".modal-body\")\n        this.footerElement = this.element.querySelector(\".modal-footer\")\n        this.element.addEventListener('hidden.bs.modal', function () {\n            self.dispose()\n        })\n        this.element.addEventListener('shown.bs.modal', function () {\n            if (self.props.onShown) {\n                self.props.onShown(self)\n            }\n        })\n    }\n\n    show() {\n        if (!this.element) {\n            this.createContainerElement()\n            if (this.props.options) {\n                const modalInstance = new bootstrap.Modal(this.element, this.props.options)\n                if (modalInstance) {\n                    modalInstance.show()\n                }\n            } else {\n                const modalInstance = new bootstrap.Modal(this.element)\n                if (modalInstance) {\n                    modalInstance.show()\n                }\n            }\n        } else {\n            const modalInstance = bootstrap.Modal.getInstance(this.element)\n            if (modalInstance) {\n                modalInstance.show()\n            }\n        }\n        if (this.props.title) {\n            this.titleElement.style.display = \"\"\n            this.titleElement.innerHTML = this.props.title\n        } else {\n            this.titleElement.style.display = \"none\"\n        }\n        if (this.props.body) {\n            this.bodyElement.style.display = \"\"\n            this.bodyElement.innerHTML = this.props.body\n        } else {\n            this.bodyElement.style.display = \"none\"\n        }\n        if (this.props.footer) {\n            this.footerElement.style.display = \"\"\n            this.footerElement.innerHTML = this.props.footer\n        } else {\n            this.footerElement.style.display = \"none\"\n        }\n    }\n\n    hide() {\n        const modalInstance = bootstrap.Modal.getInstance(this.element)\n        if (modalInstance) {\n            modalInstance.hide()\n        }\n    }\n\n    dispose() {\n        const modalInstance = bootstrap.Modal.getInstance(this.element)\n        if (modalInstance) {\n            modalInstance.dispose()\n        }\n        document.body.removeChild(this.element)\n        if (this.props.onDispose) {\n            this.props.onDispose(this)\n        }\n    }\n}\n\nlet i = 0\nbootstrap.showModal = (props) => {\n    if (props.buttons) {\n        let footer = \"\"\n        for (let key in props.buttons) {\n            const buttonText = props.buttons[key]\n            footer += `<button type=\"button\" class=\"btn btn-primary\" data-value=\"${key}\" data-bs-dismiss=\"modal\">${buttonText}</button>`\n        }\n        props.footer = footer\n    }\n    return new Modal(props)\n}\n\nbootstrap.showAlert = (props) => {\n    props.buttons = {OK: 'OK'}\n    return bootstrap.showModal(props)\n}\n\nbootstrap.showConfirm = (props) => {\n    props.footer = `<button class=\"btn btn-secondary btn-false btn-cancel\">${props.textFalse}</button><button class=\"btn btn-primary btn-true\">${props.textTrue}</button>`\n    props.onCreate = (modal) => {\n        const modalInstance = bootstrap.Modal.getInstance(modal.element)\n        modal.element.querySelector(\".btn-false\").addEventListener(\"click\", function () {\n            if (modalInstance) {\n                modalInstance.hide()\n            }\n            modal.props.onSubmit(false, modal)\n        })\n        modal.element.querySelector(\".btn-true\").addEventListener(\"click\", function () {\n            if (modalInstance) {\n                modalInstance.hide()\n            }\n            modal.props.onSubmit(true, modal)\n        })\n    }\n    return bootstrap.showModal(props)\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {COLOR} from \"cm-chess/src/Chess.js\"\nimport \"bootstrap-show-modal/src/ShowModal.js\"\n\nexport class NewGameDialog {\n\n    constructor(module, props) {\n        const i18n = module.i18n\n        i18n.load({\n            de: {\n                color: \"Farbe\",\n                white: \"Weiss\",\n                black: \"Schwarz\",\n                auto: \"automatisch\"\n            },\n            en: {\n                color: \"Color\",\n                white: \"White\",\n                black: \"Black\",\n                auto: \"automatically\"\n            }\n        }).then(() => {\n            const newGameColor = module.persistence.loadValue(\"newGameColor\")\n            props.modalClass = \"fade\"\n            props.body =\n               `<form class=\"form\"><div class=\"form-group row\">\n                    <div class=\"col-3\"><label for=\"color\" class=\"col-form-label\">${i18n.t(\"color\")}</label></div>\n                    <div class=\"col-9\"><select id=\"color\" class=\"form-select\">\n                        <option value=\"auto\">${i18n.t(\"auto\")}</option>\n                        <option value=\"w\" ${newGameColor === \"w\" ? \"selected\" : \"\"}>${i18n.t(\"white\")}</option>\n                        <option value=\"b\" ${newGameColor === \"b\" ? \"selected\" : \"\"}>${i18n.t(\"black\")}</option>\n                    </select></div>\n                </div></form>`\n            props.footer = `<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">${i18n.t(\"cancel\")}</button>\n            <button type=\"submit\" class=\"btn btn-primary\">${i18n.t(\"ok\")}</button>`\n            props.onCreate = (modal) => {\n                modal.element.querySelector(\"button[type='submit']\").addEventListener(\"click\", function (event) {\n                    event.preventDefault()\n                    const formElement = modal.element.querySelector(\".form\")\n                    let color = formElement.querySelector(\"#color\").value\n                    module.persistence.saveValue(\"newGameColor\", color)\n                    if (color !== COLOR.white && color !== COLOR.black) {\n                        color = (module.props.playerColor === COLOR.white) ? COLOR.black : COLOR.white\n                    }\n                    modal.hide()\n                    module.newGame({playerColor: color})\n                })\n            }\n            bootstrap.showModal(props)\n        })\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {NewGameDialog} from \"./NewGameDialog.js\"\n\nexport class GameControl {\n\n    constructor(chessConsole, props) {\n        this.context = chessConsole.componentContainers.controlButtons\n        this.chessConsole = chessConsole\n\n        const i18n = chessConsole.i18n\n        i18n.load({\n            de: {\n                \"start_game\": \"Ein neues Spiel starten\",\n                \"undo_move\": \"Zug zur\u00FCck nehmen\"\n            },\n            en: {\n                \"start_game\": \"Start a new game\",\n                \"undo_move\": \"Undo move\"\n            }\n        }).then(() => {\n\n            this.$btnUndoMove = $(`<button type=\"button\" title=\"${i18n.t('undo_move')}\" class=\"btn btn-icon btn-light undoMove\"><i class=\"fa fa-fw fa-undo-alt\" aria-hidden=\"true\"></i></button>`)\n            this.$btnStartNewGame = $(`<button type=\"button\" title=\"${i18n.t('start_game')}\" class=\"btn btn-icon btn-light startNewGame\"><i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i></button>\\`)`)\n\n            this.context.appendChild(this.$btnUndoMove[0])\n            this.context.appendChild(this.$btnStartNewGame[0])\n\n            this.$btnUndoMove.click(() => {\n                this.chessConsole.undoMove()\n            })\n            this.$btnStartNewGame.click(() => {\n                this.showNewGameDialog()\n            })\n\n            this.chessConsole.state.observeChess(() => {\n                this.setButtonStates()\n            })\n            this.setButtonStates()\n        })\n    }\n\n    showNewGameDialog() {\n        new NewGameDialog(this.chessConsole, {\n            title: this.chessConsole.i18n.t('start_game')\n        })\n    }\n\n    setButtonStates() {\n        if (this.chessConsole.state.chess.plyCount() < 2) {\n            this.$btnUndoMove.prop(\"disabled\", true)\n        } else {\n            this.$btnUndoMove.prop(\"disabled\", false)\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-engine-runner\n * License: MIT, see file 'LICENSE'\n */\n\nexport const ENGINE_STATE = {\n    LOADING: 1,\n    LOADED: 2,\n    READY: 3,\n    THINKING: 4\n}\n\nexport class EngineRunner {\n\n    constructor(props) {\n        this.props = {\n            debug: false,\n            responseDelay: 1000  // https://www.reddit.com/r/ProgrammerHumor/comments/6xwely/from_the_apple_chess_engine_code/\n                                 // https://opensource.apple.com/source/Chess/Chess-347/Sources/MBCEngine.mm.auto.html\n        }\n        Object.assign(this.props, props)\n        this.engineState = ENGINE_STATE.LOADING\n        this.initialized = this.init()\n        /**\n         * @deprecated 2023-04-11 use `this.initialized` instead\n         */\n        this.initialization = this.initialized\n    }\n\n    init() {\n        return Promise.reject(\"you have to implement `init()` in the EngineRunner\")\n    }\n\n    calculateMove(fen, props = {}) {\n\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chess-engine-runner\n * License: MIT, see file 'LICENSE'\n */\n\nimport {ENGINE_STATE, EngineRunner} from \"./EngineRunner.js\"\n\n// [depth, Skill Level]\nexport const LEVELS = {\n    1: [3, 0],\n    2: [3, 1],\n    3: [4, 2],\n    4: [5, 3],\n    5: [5, 4],\n    6: [6, 5],\n    7: [7, 6],\n    8: [8, 7],\n    9: [9, 8],\n    10: [10, 10],\n    11: [11, 11],\n    12: [12, 12],\n    13: [13, 13],\n    14: [14, 14],\n    15: [15, 15],\n    16: [16, 16],\n    17: [17, 17],\n    18: [18, 18],\n    19: [19, 19],\n    20: [20, 20]\n}\n\nexport class StockfishRunner extends EngineRunner {\n\n    constructor(props) {\n        super(props)\n    }\n\n    init() {\n        return new Promise((resolve) => {\n            const listener = (event) => {\n                this.workerListener(event)\n            }\n            if (this.engineWorker) {\n                this.engineWorker.removeEventListener(\"message\", listener)\n                this.engineWorker.terminate()\n            }\n            this.engineWorker = new Worker(this.props.workerUrl)\n            this.engineWorker.addEventListener(\"message\", listener)\n\n            this.uciCmd('uci')\n            this.uciCmd('ucinewgame')\n            this.uciCmd('isready')\n            resolve()\n        })\n    }\n\n    workerListener(event) {\n        if(this.props.debug) {\n            if(event.type === \"message\") {\n                console.log(\"  msg\", event.data)\n            } else {\n                console.log(event)\n            }\n        }\n        const line = event.data\n        if (line === 'uciok') {\n            this.engineState = ENGINE_STATE.LOADED\n        } else if (line === 'readyok') {\n            this.engineState = ENGINE_STATE.READY\n        } else {\n            let match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/)\n            if (match) {\n                const score = parseInt(match[2], 10)\n                let tmpScore\n                if (match[1] === 'cp') {\n                    tmpScore = (score / 100.0).toFixed(1)\n                } else if (match[1] === 'mate') {\n                    tmpScore = '#' + Math.abs(score)\n                }\n                this.score = tmpScore\n            }\n            // match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbk])?/) // ponder is not always included\n            match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbk])?( ponder ([a-h][1-8])?([a-h][1-8])?)?/)\n            if (match) {\n                this.engineState = ENGINE_STATE.READY\n                if (match[4] !== undefined) {\n                    this.ponder = {from: match[5], to: match[6]}\n                } else {\n                    this.ponder = undefined\n                }\n                const move = {from: match[1], to: match[2], promotion: match[3], score: this.score, ponder: this.ponder}\n                this.moveResponse(move)\n            } else {\n                match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/)\n                if (match) {\n                    this.engineState = ENGINE_STATE.THINKING\n                    this.search = 'Depth: ' + match[1] + ' Nps: ' + match[2]\n                }\n            }\n        }\n    }\n\n    calculateMove(fen, props = { level: 4 }) {\n        this.engineState = ENGINE_STATE.THINKING\n        const timeoutPromise = new Promise((resolve) => {\n            setTimeout(async () => {\n                resolve()\n            }, this.props.responseDelay)\n        })\n        const calculationPromise = new Promise ((resolve) => {\n            setTimeout(() => {\n                this.uciCmd('setoption name Skill Level value ' + (LEVELS[props.level][1]))\n                this.uciCmd('position fen ' + fen)\n                this.uciCmd('go depth ' + (LEVELS[props.level][0]))\n                this.moveResponse = (move) => {\n                    resolve(move)\n                }\n            }, this.props.responseDelay)\n        })\n        return new Promise((resolve) => {\n            Promise.all([this.initialisation, timeoutPromise, calculationPromise]).then((values) => {\n                this.engineState = ENGINE_STATE.READY\n                resolve(values[2])\n            })\n        })\n    }\n\n    uciCmd(cmd) {\n        if(this.props.debug) {\n            console.log(\"  uci ->\", cmd)\n        }\n        this.engineWorker.postMessage(cmd)\n    }\n\n}\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\n\r\nimport {LEVELS} from \"cm-engine-runner/src/StockfishRunner.js\"\r\n\r\nexport class StockfishNewGameDialog {\r\n\r\n    constructor(chessConsole, props) {\r\n        this.chessConsole = chessConsole\r\n        this.props = props\r\n        const i18n = chessConsole.i18n\r\n        i18n.load({\r\n            de: {\r\n                color: \"Farbe\",\r\n                white: \"Weiss\",\r\n                black: \"Schwarz\",\r\n                auto: \"Automatisch wechselnd\",\r\n                random: \"Zufallsauswahl\"\r\n            },\r\n            en: {\r\n                color: \"Color\",\r\n                white: \"white\",\r\n                black: \"black\",\r\n                auto: \"automatically alternating\",\r\n                random: \"random\"\r\n            }\r\n        }).then(() => {\r\n            const newGameColor = chessConsole.persistence.loadValue(\"newGameColor\")\r\n            props.modalClass = \"fade\"\r\n            props.body = `<div class=\"form\"><div class=\"form-group row\">\r\n                        <div class=\"col-3\"><label for=\"color\" class=\"col-form-label\">${i18n.t(\"color\")}</label></div>\r\n                        <div class=\"col-9\"><select id=\"color\" class=\"form-control\">\r\n                        <option value=\"w\" ${newGameColor === \"w\" ? \"selected\" : \"\"}>${i18n.t(\"white\")}</option>\r\n                        <option value=\"b\" ${newGameColor === \"b\" ? \"selected\" : \"\"}>${i18n.t(\"black\")}</option>\r\n                        <option value=\"random\" ${newGameColor === \"random\" ? \"selected\" : \"\"}>${i18n.t(\"random\")}</option>\r\n                        <option value=\"auto\" ${newGameColor === \"auto\" ? \"selected\" : \"\"}>${i18n.t(\"auto\")}</option>\r\n                        </select></div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                        <div class=\"col-3\"><label for=\"level\" class=\"col-form-label\">${i18n.t(\"level\")}</label></div>\r\n                        <div class=\"col-9\"><select id=\"level\" class=\"form-control\">\r\n                        ${this.renderLevelOptions()}\r\n                        </select></div>\r\n                        </div></div>`\r\n            props.footer = `<button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\">${i18n.t(\"cancel\")}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">${i18n.t(\"ok\")}</button>`\r\n            props.onCreate = (modal) => {\r\n                $(modal.element).on(\"click\", \"button[type='submit']\", function (event) {\r\n                    event.preventDefault()\r\n                    const $form = $(modal.element).find(\".form\")\r\n                    let color = $form.find(\"#color\").val()\r\n                    chessConsole.persistence.saveValue(\"newGameColor\", color)\r\n                    const level = parseInt($form.find(\"#level\").val(), 10) || 1\r\n                    if (color === \"auto\") {\r\n                        color = (chessConsole.props.playerColor === COLOR.white) ? COLOR.black : COLOR.white\r\n                    } else if (color === \"random\") {\r\n                        color = \"wb\".charAt(Math.floor(Math.random() * 2))\r\n                    }\r\n                    modal.hide()\r\n                    chessConsole.newGame({playerColor: color, engineLevel: level})\r\n                })\r\n            }\r\n            bootstrap.showModal(props)\r\n        })\r\n    }\r\n\r\n    renderLevelOptions() {\r\n        let html = ''\r\n        const currentLevel = this.props.player.state.level\r\n        const levels = Object.keys(LEVELS)\r\n        for (let i = levels[0]; i <= levels[levels.length - 1]; i++) {\r\n            let selected = ''\r\n            if (currentLevel === i) {\r\n                selected = 'selected '\r\n            }\r\n            html += '<option ' + selected + 'value=\"' + i + '\">Level ' + i + '</option>' // (ELO ca. ' + (i * 65 + 1100) + ')\r\n        }\r\n        return html\r\n    }\r\n\r\n}\r\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\n\r\nimport {GameControl} from \"chess-console/src/components/GameControl/GameControl.js\"\r\nimport {StockfishNewGameDialog} from \"./StockfishNewGameDialog.js\"\r\n\r\nexport class StockfishGameControl extends GameControl {\r\n    showNewGameDialog() {\r\n        new StockfishNewGameDialog(this.chessConsole, {\r\n            title: this.chessConsole.i18n.t('start_game'),\r\n            player: this.props.player\r\n        })\r\n    }\r\n}\r\n", "\n// Code dealing with Polyglot opening books\n// Representation of a single entry in a Polyglot opening book\n\nclass BookEntry {\n\n    // Build one BookEntry from the binary data slurped from\n    // a polyglot opening book starting at byte-offset 'ofs'\n    constructor(bookdata, ofs) {\n        // Remember where we started from\n        // noinspection JSUnusedGlobalSymbols\n        this.ofs = ofs\n        // Convert key to BigInt (64-bit) value\n        let key = BigInt(0)\n        let i\n        let byt\n        for (i = 0; i < 8; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            key = (key << BigInt(8)) | BigInt(byt)\n        }\n        this.key = key\n        let raw_move = 0\n        for (i = 0; i < 2; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            raw_move = (raw_move << 8) | byt\n        }\n        this.raw_move = raw_move\n        let weight = 0\n        for (i = 0; i < 2; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            weight = (weight << 8) | byt\n        }\n        this.weight = weight\n        let learn = 0\n        for (i = 0; i < 4; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            learn = (learn << 8) | byt\n        }\n        // noinspection JSUnusedGlobalSymbols\n        this.learn = learn\n    }\n\n    get_key() {\n        return this.key\n    }\n\n    get_from_row() {\n        return (this.raw_move >> 9) & 0x0007\n    }\n\n    get_from_col() {\n        return (this.raw_move >> 6) & 0x0007\n    }\n\n    get_to_row() {\n        return (this.raw_move >> 3) & 0x0007\n    }\n\n    get_to_col() {\n        return this.raw_move & 0x0007\n    }\n\n    get_promo_piece() {\n        return (this.raw_move >> 12) & 0x0007\n    }\n\n    // Polyglot uses its own convention for castling: provide\n    // accessor methods for finding out which type of castling\n    // is encoded in current move.\n    isOOW() {\n        return this.raw_move === 0x0107\n    }\n\n    isOOB() {\n        return this.raw_move === 0x0f3f\n    }\n\n    isOOOW() {\n        return this.raw_move === 0x0100\n    }\n\n    isOOOB() {\n        return this.raw_move === 0x0f38\n    }\n\n}\n\n// representation of a Polyglot binary opening book\nexport class Book {\n\n    constructor(bookdata) {\n        this.bookdata = bookdata\n        this.cache = []\t// cache so that we parse each entry at most one time\n        if (this.bookdata.length >= 32) {\n            this.first = new BookEntry(this.bookdata, 0)\n            this.last = new BookEntry(this.bookdata, this.get_last_index())\n        } else {\n            this.first = null\n            this.last = null\n        }\n    }\n\n    get_length() {\n        return this.bookdata.length / 16\n    }\n\n    get_last_index() {\n        return this.get_length() - 1\n    }\n\n    get_offset(idx) {\n        return idx * 16\n    }\n\n    get_entry(idx) {\n        let e\n        if (this.cache[idx] === undefined) {\n            e = new BookEntry(this.bookdata, this.get_offset(idx))\n            this.cache[idx] = e\n        } else {\n            e = this.cache[idx]\n        }\n        return e\n    }\n\n    // Retrieve the index of the first occurrence of the specified hash,\n    // or -1 if not found.\n    //\n    // weed = BigInt (64-bit integer) with the hash to locate\n    find_first_hash(weed) {\n        if (this.first === null || this.last === null) {\n            return -1\n        }\n        if (weed < this.first || weed > this.last) {\n            return -1\n        }\n        if (weed === this.first) {\n            return 0\n        }\n        let i0 = 0\n        let i1 = (this.bookdata.length / 16) - 1\n        let i = i1\n        let ky = 0n\t// need a BigInt here\n        // If the last entry matches the searched hash value,\n        // we can skip the binary search and go straight to\n        // the part where we move up in the list of same hash\n        // values until we find the first in the list.\n        if (weed !== this.last) {\n            // Stop looping if only 2 elements are in the inspection range:\n            // both endpoints will have been compared to the wanted hash value\n            // and both endpoints of the range will have a different hash. So,\n            // if there are only two left, and both have previously been confirmed\n            // to be different from the wanted hash, that means that the hash is\n            // not in the table and we can safely bail out of the loop.\n            while (i1 - i0 > 1) {\n                i = Math.floor((i0 + i1) / 2)\t// this is javascript for you: no int arithmetic\n                const e = this.get_entry(i)\n                ky = e.get_key()\n                if (ky === weed) {\n                    // Found an entry with the wanted hash: stop looping\n                    break\n                }\n                // Not found, so continue with half the current range\n                if (ky < weed) {\n                    i0 = i\n                } else {\n                    i1 = i\n                }\n            }\n        }\n        // No need to go up in the table if not found\n        if (ky !== weed) {\n            return -1\n        }\n        // Move up in table until different key found\n        while (i > 0) {\n            if (this.get_entry(i - 1).get_key() === weed) {\n                i = i - 1\n            } else {\n                break\n            }\n        }\n        return i\n    }\n\n    // Get all entries for given hash\n    get_all_moves(weed) {\n        let i = this.find_first_hash(weed)\n        if (i < 0) {\n            return []\n        }\n        const lst = []\n        let e = this.get_entry(i)\n        while ((e !== undefined) && (e.get_key() === weed)) {\n            lst.push(e)\n            e = this.get_entry(++i)\n        }\n        return lst\n    }\n\n}\n", "//\n// Polyglot Zobrist hashing function.\n//\n// Main difference with other Javascript implementations found is that this\n// code uses 64-bit integers (pretty recent addition to the Javascript language)\n//\n// BigInt values to hold 64-bit entries\n//\n// Table slurped from https://github.com/ddugovic/polyglot/random.c\n//\n// Javascript code loosely inpsired on https://shinkarom.github.io/zobrist/\n//\nconst random64 = [\n    0x9D39247E33776D41n, 0x2AF7398005AAA5C7n, 0x44DB015024623547n, 0x9C15F73E62A76AE2n,\n    0x75834465489C0C89n, 0x3290AC3A203001BFn, 0x0FBBAD1F61042279n, 0xE83A908FF2FB60CAn,\n    0x0D7E765D58755C10n, 0x1A083822CEAFE02Dn, 0x9605D5F0E25EC3B0n, 0xD021FF5CD13A2ED5n,\n    0x40BDF15D4A672E32n, 0x011355146FD56395n, 0x5DB4832046F3D9E5n, 0x239F8B2D7FF719CCn,\n    0x05D1A1AE85B49AA1n, 0x679F848F6E8FC971n, 0x7449BBFF801FED0Bn, 0x7D11CDB1C3B7ADF0n,\n    0x82C7709E781EB7CCn, 0xF3218F1C9510786Cn, 0x331478F3AF51BBE6n, 0x4BB38DE5E7219443n,\n    0xAA649C6EBCFD50FCn, 0x8DBD98A352AFD40Bn, 0x87D2074B81D79217n, 0x19F3C751D3E92AE1n,\n    0xB4AB30F062B19ABFn, 0x7B0500AC42047AC4n, 0xC9452CA81A09D85Dn, 0x24AA6C514DA27500n,\n    0x4C9F34427501B447n, 0x14A68FD73C910841n, 0xA71B9B83461CBD93n, 0x03488B95B0F1850Fn,\n    0x637B2B34FF93C040n, 0x09D1BC9A3DD90A94n, 0x3575668334A1DD3Bn, 0x735E2B97A4C45A23n,\n    0x18727070F1BD400Bn, 0x1FCBACD259BF02E7n, 0xD310A7C2CE9B6555n, 0xBF983FE0FE5D8244n,\n    0x9F74D14F7454A824n, 0x51EBDC4AB9BA3035n, 0x5C82C505DB9AB0FAn, 0xFCF7FE8A3430B241n,\n    0x3253A729B9BA3DDEn, 0x8C74C368081B3075n, 0xB9BC6C87167C33E7n, 0x7EF48F2B83024E20n,\n    0x11D505D4C351BD7Fn, 0x6568FCA92C76A243n, 0x4DE0B0F40F32A7B8n, 0x96D693460CC37E5Dn,\n    0x42E240CB63689F2Fn, 0x6D2BDCDAE2919661n, 0x42880B0236E4D951n, 0x5F0F4A5898171BB6n,\n    0x39F890F579F92F88n, 0x93C5B5F47356388Bn, 0x63DC359D8D231B78n, 0xEC16CA8AEA98AD76n,\n    0x5355F900C2A82DC7n, 0x07FB9F855A997142n, 0x5093417AA8A7ED5En, 0x7BCBC38DA25A7F3Cn,\n    0x19FC8A768CF4B6D4n, 0x637A7780DECFC0D9n, 0x8249A47AEE0E41F7n, 0x79AD695501E7D1E8n,\n    0x14ACBAF4777D5776n, 0xF145B6BECCDEA195n, 0xDABF2AC8201752FCn, 0x24C3C94DF9C8D3F6n,\n    0xBB6E2924F03912EAn, 0x0CE26C0B95C980D9n, 0xA49CD132BFBF7CC4n, 0xE99D662AF4243939n,\n    0x27E6AD7891165C3Fn, 0x8535F040B9744FF1n, 0x54B3F4FA5F40D873n, 0x72B12C32127FED2Bn,\n    0xEE954D3C7B411F47n, 0x9A85AC909A24EAA1n, 0x70AC4CD9F04F21F5n, 0xF9B89D3E99A075C2n,\n    0x87B3E2B2B5C907B1n, 0xA366E5B8C54F48B8n, 0xAE4A9346CC3F7CF2n, 0x1920C04D47267BBDn,\n    0x87BF02C6B49E2AE9n, 0x092237AC237F3859n, 0xFF07F64EF8ED14D0n, 0x8DE8DCA9F03CC54En,\n    0x9C1633264DB49C89n, 0xB3F22C3D0B0B38EDn, 0x390E5FB44D01144Bn, 0x5BFEA5B4712768E9n,\n    0x1E1032911FA78984n, 0x9A74ACB964E78CB3n, 0x4F80F7A035DAFB04n, 0x6304D09A0B3738C4n,\n    0x2171E64683023A08n, 0x5B9B63EB9CEFF80Cn, 0x506AACF489889342n, 0x1881AFC9A3A701D6n,\n    0x6503080440750644n, 0xDFD395339CDBF4A7n, 0xEF927DBCF00C20F2n, 0x7B32F7D1E03680ECn,\n    0xB9FD7620E7316243n, 0x05A7E8A57DB91B77n, 0xB5889C6E15630A75n, 0x4A750A09CE9573F7n,\n    0xCF464CEC899A2F8An, 0xF538639CE705B824n, 0x3C79A0FF5580EF7Fn, 0xEDE6C87F8477609Dn,\n    0x799E81F05BC93F31n, 0x86536B8CF3428A8Cn, 0x97D7374C60087B73n, 0xA246637CFF328532n,\n    0x043FCAE60CC0EBA0n, 0x920E449535DD359En, 0x70EB093B15B290CCn, 0x73A1921916591CBDn,\n    0x56436C9FE1A1AA8Dn, 0xEFAC4B70633B8F81n, 0xBB215798D45DF7AFn, 0x45F20042F24F1768n,\n    0x930F80F4E8EB7462n, 0xFF6712FFCFD75EA1n, 0xAE623FD67468AA70n, 0xDD2C5BC84BC8D8FCn,\n    0x7EED120D54CF2DD9n, 0x22FE545401165F1Cn, 0xC91800E98FB99929n, 0x808BD68E6AC10365n,\n    0xDEC468145B7605F6n, 0x1BEDE3A3AEF53302n, 0x43539603D6C55602n, 0xAA969B5C691CCB7An,\n    0xA87832D392EFEE56n, 0x65942C7B3C7E11AEn, 0xDED2D633CAD004F6n, 0x21F08570F420E565n,\n    0xB415938D7DA94E3Cn, 0x91B859E59ECB6350n, 0x10CFF333E0ED804An, 0x28AED140BE0BB7DDn,\n    0xC5CC1D89724FA456n, 0x5648F680F11A2741n, 0x2D255069F0B7DAB3n, 0x9BC5A38EF729ABD4n,\n    0xEF2F054308F6A2BCn, 0xAF2042F5CC5C2858n, 0x480412BAB7F5BE2An, 0xAEF3AF4A563DFE43n,\n    0x19AFE59AE451497Fn, 0x52593803DFF1E840n, 0xF4F076E65F2CE6F0n, 0x11379625747D5AF3n,\n    0xBCE5D2248682C115n, 0x9DA4243DE836994Fn, 0x066F70B33FE09017n, 0x4DC4DE189B671A1Cn,\n    0x51039AB7712457C3n, 0xC07A3F80C31FB4B4n, 0xB46EE9C5E64A6E7Cn, 0xB3819A42ABE61C87n,\n    0x21A007933A522A20n, 0x2DF16F761598AA4Fn, 0x763C4A1371B368FDn, 0xF793C46702E086A0n,\n    0xD7288E012AEB8D31n, 0xDE336A2A4BC1C44Bn, 0x0BF692B38D079F23n, 0x2C604A7A177326B3n,\n    0x4850E73E03EB6064n, 0xCFC447F1E53C8E1Bn, 0xB05CA3F564268D99n, 0x9AE182C8BC9474E8n,\n    0xA4FC4BD4FC5558CAn, 0xE755178D58FC4E76n, 0x69B97DB1A4C03DFEn, 0xF9B5B7C4ACC67C96n,\n    0xFC6A82D64B8655FBn, 0x9C684CB6C4D24417n, 0x8EC97D2917456ED0n, 0x6703DF9D2924E97En,\n    0xC547F57E42A7444En, 0x78E37644E7CAD29En, 0xFE9A44E9362F05FAn, 0x08BD35CC38336615n,\n    0x9315E5EB3A129ACEn, 0x94061B871E04DF75n, 0xDF1D9F9D784BA010n, 0x3BBA57B68871B59Dn,\n    0xD2B7ADEEDED1F73Fn, 0xF7A255D83BC373F8n, 0xD7F4F2448C0CEB81n, 0xD95BE88CD210FFA7n,\n    0x336F52F8FF4728E7n, 0xA74049DAC312AC71n, 0xA2F61BB6E437FDB5n, 0x4F2A5CB07F6A35B3n,\n    0x87D380BDA5BF7859n, 0x16B9F7E06C453A21n, 0x7BA2484C8A0FD54En, 0xF3A678CAD9A2E38Cn,\n    0x39B0BF7DDE437BA2n, 0xFCAF55C1BF8A4424n, 0x18FCF680573FA594n, 0x4C0563B89F495AC3n,\n    0x40E087931A00930Dn, 0x8CFFA9412EB642C1n, 0x68CA39053261169Fn, 0x7A1EE967D27579E2n,\n    0x9D1D60E5076F5B6Fn, 0x3810E399B6F65BA2n, 0x32095B6D4AB5F9B1n, 0x35CAB62109DD038An,\n    0xA90B24499FCFAFB1n, 0x77A225A07CC2C6BDn, 0x513E5E634C70E331n, 0x4361C0CA3F692F12n,\n    0xD941ACA44B20A45Bn, 0x528F7C8602C5807Bn, 0x52AB92BEB9613989n, 0x9D1DFA2EFC557F73n,\n    0x722FF175F572C348n, 0x1D1260A51107FE97n, 0x7A249A57EC0C9BA2n, 0x04208FE9E8F7F2D6n,\n    0x5A110C6058B920A0n, 0x0CD9A497658A5698n, 0x56FD23C8F9715A4Cn, 0x284C847B9D887AAEn,\n    0x04FEABFBBDB619CBn, 0x742E1E651C60BA83n, 0x9A9632E65904AD3Cn, 0x881B82A13B51B9E2n,\n    0x506E6744CD974924n, 0xB0183DB56FFC6A79n, 0x0ED9B915C66ED37En, 0x5E11E86D5873D484n,\n    0xF678647E3519AC6En, 0x1B85D488D0F20CC5n, 0xDAB9FE6525D89021n, 0x0D151D86ADB73615n,\n    0xA865A54EDCC0F019n, 0x93C42566AEF98FFBn, 0x99E7AFEABE000731n, 0x48CBFF086DDF285An,\n    0x7F9B6AF1EBF78BAFn, 0x58627E1A149BBA21n, 0x2CD16E2ABD791E33n, 0xD363EFF5F0977996n,\n    0x0CE2A38C344A6EEDn, 0x1A804AADB9CFA741n, 0x907F30421D78C5DEn, 0x501F65EDB3034D07n,\n    0x37624AE5A48FA6E9n, 0x957BAF61700CFF4En, 0x3A6C27934E31188An, 0xD49503536ABCA345n,\n    0x088E049589C432E0n, 0xF943AEE7FEBF21B8n, 0x6C3B8E3E336139D3n, 0x364F6FFA464EE52En,\n    0xD60F6DCEDC314222n, 0x56963B0DCA418FC0n, 0x16F50EDF91E513AFn, 0xEF1955914B609F93n,\n    0x565601C0364E3228n, 0xECB53939887E8175n, 0xBAC7A9A18531294Bn, 0xB344C470397BBA52n,\n    0x65D34954DAF3CEBDn, 0xB4B81B3FA97511E2n, 0xB422061193D6F6A7n, 0x071582401C38434Dn,\n    0x7A13F18BBEDC4FF5n, 0xBC4097B116C524D2n, 0x59B97885E2F2EA28n, 0x99170A5DC3115544n,\n    0x6F423357E7C6A9F9n, 0x325928EE6E6F8794n, 0xD0E4366228B03343n, 0x565C31F7DE89EA27n,\n    0x30F5611484119414n, 0xD873DB391292ED4Fn, 0x7BD94E1D8E17DEBCn, 0xC7D9F16864A76E94n,\n    0x947AE053EE56E63Cn, 0xC8C93882F9475F5Fn, 0x3A9BF55BA91F81CAn, 0xD9A11FBB3D9808E4n,\n    0x0FD22063EDC29FCAn, 0xB3F256D8ACA0B0B9n, 0xB03031A8B4516E84n, 0x35DD37D5871448AFn,\n    0xE9F6082B05542E4En, 0xEBFAFA33D7254B59n, 0x9255ABB50D532280n, 0xB9AB4CE57F2D34F3n,\n    0x693501D628297551n, 0xC62C58F97DD949BFn, 0xCD454F8F19C5126An, 0xBBE83F4ECC2BDECBn,\n    0xDC842B7E2819E230n, 0xBA89142E007503B8n, 0xA3BC941D0A5061CBn, 0xE9F6760E32CD8021n,\n    0x09C7E552BC76492Fn, 0x852F54934DA55CC9n, 0x8107FCCF064FCF56n, 0x098954D51FFF6580n,\n    0x23B70EDB1955C4BFn, 0xC330DE426430F69Dn, 0x4715ED43E8A45C0An, 0xA8D7E4DAB780A08Dn,\n    0x0572B974F03CE0BBn, 0xB57D2E985E1419C7n, 0xE8D9ECBE2CF3D73Fn, 0x2FE4B17170E59750n,\n    0x11317BA87905E790n, 0x7FBF21EC8A1F45ECn, 0x1725CABFCB045B00n, 0x964E915CD5E2B207n,\n    0x3E2B8BCBF016D66Dn, 0xBE7444E39328A0ACn, 0xF85B2B4FBCDE44B7n, 0x49353FEA39BA63B1n,\n    0x1DD01AAFCD53486An, 0x1FCA8A92FD719F85n, 0xFC7C95D827357AFAn, 0x18A6A990C8B35EBDn,\n    0xCCCB7005C6B9C28Dn, 0x3BDBB92C43B17F26n, 0xAA70B5B4F89695A2n, 0xE94C39A54A98307Fn,\n    0xB7A0B174CFF6F36En, 0xD4DBA84729AF48ADn, 0x2E18BC1AD9704A68n, 0x2DE0966DAF2F8B1Cn,\n    0xB9C11D5B1E43A07En, 0x64972D68DEE33360n, 0x94628D38D0C20584n, 0xDBC0D2B6AB90A559n,\n    0xD2733C4335C6A72Fn, 0x7E75D99D94A70F4Dn, 0x6CED1983376FA72Bn, 0x97FCAACBF030BC24n,\n    0x7B77497B32503B12n, 0x8547EDDFB81CCB94n, 0x79999CDFF70902CBn, 0xCFFE1939438E9B24n,\n    0x829626E3892D95D7n, 0x92FAE24291F2B3F1n, 0x63E22C147B9C3403n, 0xC678B6D860284A1Cn,\n    0x5873888850659AE7n, 0x0981DCD296A8736Dn, 0x9F65789A6509A440n, 0x9FF38FED72E9052Fn,\n    0xE479EE5B9930578Cn, 0xE7F28ECD2D49EECDn, 0x56C074A581EA17FEn, 0x5544F7D774B14AEFn,\n    0x7B3F0195FC6F290Fn, 0x12153635B2C0CF57n, 0x7F5126DBBA5E0CA7n, 0x7A76956C3EAFB413n,\n    0x3D5774A11D31AB39n, 0x8A1B083821F40CB4n, 0x7B4A38E32537DF62n, 0x950113646D1D6E03n,\n    0x4DA8979A0041E8A9n, 0x3BC36E078F7515D7n, 0x5D0A12F27AD310D1n, 0x7F9D1A2E1EBE1327n,\n    0xDA3A361B1C5157B1n, 0xDCDD7D20903D0C25n, 0x36833336D068F707n, 0xCE68341F79893389n,\n    0xAB9090168DD05F34n, 0x43954B3252DC25E5n, 0xB438C2B67F98E5E9n, 0x10DCD78E3851A492n,\n    0xDBC27AB5447822BFn, 0x9B3CDB65F82CA382n, 0xB67B7896167B4C84n, 0xBFCED1B0048EAC50n,\n    0xA9119B60369FFEBDn, 0x1FFF7AC80904BF45n, 0xAC12FB171817EEE7n, 0xAF08DA9177DDA93Dn,\n    0x1B0CAB936E65C744n, 0xB559EB1D04E5E932n, 0xC37B45B3F8D6F2BAn, 0xC3A9DC228CAAC9E9n,\n    0xF3B8B6675A6507FFn, 0x9FC477DE4ED681DAn, 0x67378D8ECCEF96CBn, 0x6DD856D94D259236n,\n    0xA319CE15B0B4DB31n, 0x073973751F12DD5En, 0x8A8E849EB32781A5n, 0xE1925C71285279F5n,\n    0x74C04BF1790C0EFEn, 0x4DDA48153C94938An, 0x9D266D6A1CC0542Cn, 0x7440FB816508C4FEn,\n    0x13328503DF48229Fn, 0xD6BF7BAEE43CAC40n, 0x4838D65F6EF6748Fn, 0x1E152328F3318DEAn,\n    0x8F8419A348F296BFn, 0x72C8834A5957B511n, 0xD7A023A73260B45Cn, 0x94EBC8ABCFB56DAEn,\n    0x9FC10D0F989993E0n, 0xDE68A2355B93CAE6n, 0xA44CFE79AE538BBEn, 0x9D1D84FCCE371425n,\n    0x51D2B1AB2DDFB636n, 0x2FD7E4B9E72CD38Cn, 0x65CA5B96B7552210n, 0xDD69A0D8AB3B546Dn,\n    0x604D51B25FBF70E2n, 0x73AA8A564FB7AC9En, 0x1A8C1E992B941148n, 0xAAC40A2703D9BEA0n,\n    0x764DBEAE7FA4F3A6n, 0x1E99B96E70A9BE8Bn, 0x2C5E9DEB57EF4743n, 0x3A938FEE32D29981n,\n    0x26E6DB8FFDF5ADFEn, 0x469356C504EC9F9Dn, 0xC8763C5B08D1908Cn, 0x3F6C6AF859D80055n,\n    0x7F7CC39420A3A545n, 0x9BFB227EBDF4C5CEn, 0x89039D79D6FC5C5Cn, 0x8FE88B57305E2AB6n,\n    0xA09E8C8C35AB96DEn, 0xFA7E393983325753n, 0xD6B6D0ECC617C699n, 0xDFEA21EA9E7557E3n,\n    0xB67C1FA481680AF8n, 0xCA1E3785A9E724E5n, 0x1CFC8BED0D681639n, 0xD18D8549D140CAEAn,\n    0x4ED0FE7E9DC91335n, 0xE4DBF0634473F5D2n, 0x1761F93A44D5AEFEn, 0x53898E4C3910DA55n,\n    0x734DE8181F6EC39An, 0x2680B122BAA28D97n, 0x298AF231C85BAFABn, 0x7983EED3740847D5n,\n    0x66C1A2A1A60CD889n, 0x9E17E49642A3E4C1n, 0xEDB454E7BADC0805n, 0x50B704CAB602C329n,\n    0x4CC317FB9CDDD023n, 0x66B4835D9EAFEA22n, 0x219B97E26FFC81BDn, 0x261E4E4C0A333A9Dn,\n    0x1FE2CCA76517DB90n, 0xD7504DFA8816EDBBn, 0xB9571FA04DC089C8n, 0x1DDC0325259B27DEn,\n    0xCF3F4688801EB9AAn, 0xF4F5D05C10CAB243n, 0x38B6525C21A42B0En, 0x36F60E2BA4FA6800n,\n    0xEB3593803173E0CEn, 0x9C4CD6257C5A3603n, 0xAF0C317D32ADAA8An, 0x258E5A80C7204C4Bn,\n    0x8B889D624D44885Dn, 0xF4D14597E660F855n, 0xD4347F66EC8941C3n, 0xE699ED85B0DFB40Dn,\n    0x2472F6207C2D0484n, 0xC2A1E7B5B459AEB5n, 0xAB4F6451CC1D45ECn, 0x63767572AE3D6174n,\n    0xA59E0BD101731A28n, 0x116D0016CB948F09n, 0x2CF9C8CA052F6E9Fn, 0x0B090A7560A968E3n,\n    0xABEEDDB2DDE06FF1n, 0x58EFC10B06A2068Dn, 0xC6E57A78FBD986E0n, 0x2EAB8CA63CE802D7n,\n    0x14A195640116F336n, 0x7C0828DD624EC390n, 0xD74BBE77E6116AC7n, 0x804456AF10F5FB53n,\n    0xEBE9EA2ADF4321C7n, 0x03219A39EE587A30n, 0x49787FEF17AF9924n, 0xA1E9300CD8520548n,\n    0x5B45E522E4B1B4EFn, 0xB49C3B3995091A36n, 0xD4490AD526F14431n, 0x12A8F216AF9418C2n,\n    0x001F837CC7350524n, 0x1877B51E57A764D5n, 0xA2853B80F17F58EEn, 0x993E1DE72D36D310n,\n    0xB3598080CE64A656n, 0x252F59CF0D9F04BBn, 0xD23C8E176D113600n, 0x1BDA0492E7E4586En,\n    0x21E0BD5026C619BFn, 0x3B097ADAF088F94En, 0x8D14DEDB30BE846En, 0xF95CFFA23AF5F6F4n,\n    0x3871700761B3F743n, 0xCA672B91E9E4FA16n, 0x64C8E531BFF53B55n, 0x241260ED4AD1E87Dn,\n    0x106C09B972D2E822n, 0x7FBA195410E5CA30n, 0x7884D9BC6CB569D8n, 0x0647DFEDCD894A29n,\n    0x63573FF03E224774n, 0x4FC8E9560F91B123n, 0x1DB956E450275779n, 0xB8D91274B9E9D4FBn,\n    0xA2EBEE47E2FBFCE1n, 0xD9F1F30CCD97FB09n, 0xEFED53D75FD64E6Bn, 0x2E6D02C36017F67Fn,\n    0xA9AA4D20DB084E9Bn, 0xB64BE8D8B25396C1n, 0x70CB6AF7C2D5BCF0n, 0x98F076A4F7A2322En,\n    0xBF84470805E69B5Fn, 0x94C3251F06F90CF3n, 0x3E003E616A6591E9n, 0xB925A6CD0421AFF3n,\n    0x61BDD1307C66E300n, 0xBF8D5108E27E0D48n, 0x240AB57A8B888B20n, 0xFC87614BAF287E07n,\n    0xEF02CDD06FFDB432n, 0xA1082C0466DF6C0An, 0x8215E577001332C8n, 0xD39BB9C3A48DB6CFn,\n    0x2738259634305C14n, 0x61CF4F94C97DF93Dn, 0x1B6BACA2AE4E125Bn, 0x758F450C88572E0Bn,\n    0x959F587D507A8359n, 0xB063E962E045F54Dn, 0x60E8ED72C0DFF5D1n, 0x7B64978555326F9Fn,\n    0xFD080D236DA814BAn, 0x8C90FD9B083F4558n, 0x106F72FE81E2C590n, 0x7976033A39F7D952n,\n    0xA4EC0132764CA04Bn, 0x733EA705FAE4FA77n, 0xB4D8F77BC3E56167n, 0x9E21F4F903B33FD9n,\n    0x9D765E419FB69F6Dn, 0xD30C088BA61EA5EFn, 0x5D94337FBFAF7F5Bn, 0x1A4E4822EB4D7A59n,\n    0x6FFE73E81B637FB3n, 0xDDF957BC36D8B9CAn, 0x64D0E29EEA8838B3n, 0x08DD9BDFD96B9F63n,\n    0x087E79E5A57D1D13n, 0xE328E230E3E2B3FBn, 0x1C2559E30F0946BEn, 0x720BF5F26F4D2EAAn,\n    0xB0774D261CC609DBn, 0x443F64EC5A371195n, 0x4112CF68649A260En, 0xD813F2FAB7F5C5CAn,\n    0x660D3257380841EEn, 0x59AC2C7873F910A3n, 0xE846963877671A17n, 0x93B633ABFA3469F8n,\n    0xC0C0F5A60EF4CDCFn, 0xCAF21ECD4377B28Cn, 0x57277707199B8175n, 0x506C11B9D90E8B1Dn,\n    0xD83CC2687A19255Fn, 0x4A29C6465A314CD1n, 0xED2DF21216235097n, 0xB5635C95FF7296E2n,\n    0x22AF003AB672E811n, 0x52E762596BF68235n, 0x9AEBA33AC6ECC6B0n, 0x944F6DE09134DFB6n,\n    0x6C47BEC883A7DE39n, 0x6AD047C430A12104n, 0xA5B1CFDBA0AB4067n, 0x7C45D833AFF07862n,\n    0x5092EF950A16DA0Bn, 0x9338E69C052B8E7Bn, 0x455A4B4CFE30E3F5n, 0x6B02E63195AD0CF8n,\n    0x6B17B224BAD6BF27n, 0xD1E0CCD25BB9C169n, 0xDE0C89A556B9AE70n, 0x50065E535A213CF6n,\n    0x9C1169FA2777B874n, 0x78EDEFD694AF1EEDn, 0x6DC93D9526A50E68n, 0xEE97F453F06791EDn,\n    0x32AB0EDB696703D3n, 0x3A6853C7E70757A7n, 0x31865CED6120F37Dn, 0x67FEF95D92607890n,\n    0x1F2B1D1F15F6DC9Cn, 0xB69E38A8965C6B65n, 0xAA9119FF184CCCF4n, 0xF43C732873F24C13n,\n    0xFB4A3D794A9A80D2n, 0x3550C2321FD6109Cn, 0x371F77E76BB8417En, 0x6BFA9AAE5EC05779n,\n    0xCD04F3FF001A4778n, 0xE3273522064480CAn, 0x9F91508BFFCFC14An, 0x049A7F41061A9E60n,\n    0xFCB6BE43A9F2FE9Bn, 0x08DE8A1C7797DA9Bn, 0x8F9887E6078735A1n, 0xB5B4071DBFC73A66n,\n    0x230E343DFBA08D33n, 0x43ED7F5A0FAE657Dn, 0x3A88A0FBBCB05C63n, 0x21874B8B4D2DBC4Fn,\n    0x1BDEA12E35F6A8C9n, 0x53C065C6C8E63528n, 0xE34A1D250E7A8D6Bn, 0xD6B04D3B7651DD7En,\n    0x5E90277E7CB39E2Dn, 0x2C046F22062DC67Dn, 0xB10BB459132D0A26n, 0x3FA9DDFB67E2F199n,\n    0x0E09B88E1914F7AFn, 0x10E8B35AF3EEAB37n, 0x9EEDECA8E272B933n, 0xD4C718BC4AE8AE5Fn,\n    0x81536D601170FC20n, 0x91B534F885818A06n, 0xEC8177F83F900978n, 0x190E714FADA5156En,\n    0xB592BF39B0364963n, 0x89C350C893AE7DC1n, 0xAC042E70F8B383F2n, 0xB49B52E587A1EE60n,\n    0xFB152FE3FF26DA89n, 0x3E666E6F69AE2C15n, 0x3B544EBE544C19F9n, 0xE805A1E290CF2456n,\n    0x24B33C9D7ED25117n, 0xE74733427B72F0C1n, 0x0A804D18B7097475n, 0x57E3306D881EDB4Fn,\n    0x4AE7D6A36EB5DBCBn, 0x2D8D5432157064C8n, 0xD1E649DE1E7F268Bn, 0x8A328A1CEDFE552Cn,\n    0x07A3AEC79624C7DAn, 0x84547DDC3E203C94n, 0x990A98FD5071D263n, 0x1A4FF12616EEFC89n,\n    0xF6F7FD1431714200n, 0x30C05B1BA332F41Cn, 0x8D2636B81555A786n, 0x46C9FEB55D120902n,\n    0xCCEC0A73B49C9921n, 0x4E9D2827355FC492n, 0x19EBB029435DCB0Fn, 0x4659D2B743848A2Cn,\n    0x963EF2C96B33BE31n, 0x74F85198B05A2E7Dn, 0x5A0F544DD2B1FB18n, 0x03727073C2E134B1n,\n    0xC7F6AA2DE59AEA61n, 0x352787BAA0D7C22Fn, 0x9853EAB63B5E0B35n, 0xABBDCDD7ED5C0860n,\n    0xCF05DAF5AC8D77B0n, 0x49CAD48CEBF4A71En, 0x7A4C10EC2158C4A6n, 0xD9E92AA246BF719En,\n    0x13AE978D09FE5557n, 0x730499AF921549FFn, 0x4E4B705B92903BA4n, 0xFF577222C14F0A3An,\n    0x55B6344CF97AAFAEn, 0xB862225B055B6960n, 0xCAC09AFBDDD2CDB4n, 0xDAF8E9829FE96B5Fn,\n    0xB5FDFC5D3132C498n, 0x310CB380DB6F7503n, 0xE87FBB46217A360En, 0x2102AE466EBB1148n,\n    0xF8549E1A3AA5E00Dn, 0x07A69AFDCC42261An, 0xC4C118BFE78FEAAEn, 0xF9F4892ED96BD438n,\n    0x1AF3DBE25D8F45DAn, 0xF5B4B0B0D2DEEEB4n, 0x962ACEEFA82E1C84n, 0x046E3ECAAF453CE9n,\n    0xF05D129681949A4Cn, 0x964781CE734B3C84n, 0x9C2ED44081CE5FBDn, 0x522E23F3925E319En,\n    0x177E00F9FC32F791n, 0x2BC60A63A6F3B3F2n, 0x222BBFAE61725606n, 0x486289DDCC3D6780n,\n    0x7DC7785B8EFDFC80n, 0x8AF38731C02BA980n, 0x1FAB64EA29A2DDF7n, 0xE4D9429322CD065An,\n    0x9DA058C67844F20Cn, 0x24C0E332B70019B0n, 0x233003B5A6CFE6ADn, 0xD586BD01C5C217F6n,\n    0x5E5637885F29BC2Bn, 0x7EBA726D8C94094Bn, 0x0A56A5F0BFE39272n, 0xD79476A84EE20D06n,\n    0x9E4C1269BAA4BF37n, 0x17EFEE45B0DEE640n, 0x1D95B0A5FCF90BC6n, 0x93CBE0B699C2585Dn,\n    0x65FA4F227A2B6D79n, 0xD5F9E858292504D5n, 0xC2B5A03F71471A6Fn, 0x59300222B4561E00n,\n    0xCE2F8642CA0712DCn, 0x7CA9723FBB2E8988n, 0x2785338347F2BA08n, 0xC61BB3A141E50E8Cn,\n    0x150F361DAB9DEC26n, 0x9F6A419D382595F4n, 0x64A53DC924FE7AC9n, 0x142DE49FFF7A7C3Dn,\n    0x0C335248857FA9E7n, 0x0A9C32D5EAE45305n, 0xE6C42178C4BBB92En, 0x71F1CE2490D20B07n,\n    0xF1BCC3D275AFE51An, 0xE728E8C83C334074n, 0x96FBF83A12884624n, 0x81A1549FD6573DA5n,\n    0x5FA7867CAF35E149n, 0x56986E2EF3ED091Bn, 0x917F1DD5F8886C61n, 0xD20D8C88C8FFE65Fn,\n    0x31D71DCE64B2C310n, 0xF165B587DF898190n, 0xA57E6339DD2CF3A0n, 0x1EF6E6DBB1961EC9n,\n    0x70CC73D90BC26E24n, 0xE21A6B35DF0C3AD7n, 0x003A93D8B2806962n, 0x1C99DED33CB890A1n,\n    0xCF3145DE0ADD4289n, 0xD0E4427A5514FB72n, 0x77C621CC9FB3A483n, 0x67A34DAC4356550Bn,\n    0xF8D626AAAF278509n\n]\n//\n// Global vars\n//\n\nexport class KeyGenerator {\n\n    constructor() {\n        // noinspection JSUnusedGlobalSymbols\n        this.bail_out = false\n        this.en_passant_row = -1\n        this.en_passant_column = -1\n        this.can_take_ep = false\n    }\n\n//\n// Utility function to convert BigInt values to hex string of fixed size\n//\n    // noinspection JSUnusedGlobalSymbols\n    bn2hex(bn, the_size) {\n        let hex = bn.toString()\n        while (hex.length < the_size) {\n            hex = \"0\" + hex\n        }\n        return \"0x\" + hex\n    }\n\n//\n// XOR current hash value with specified random value from the table above\n//\n    xor_with_random(weed, num) {\n        return weed ^ random64[num]\n    }\n\n//\n// Parse en-passant part from FEN string and set (global) vars accordingly\n//\n    parse_en_passant(str) {\n        if (!str || str === \"-\") {\n            return\n        }\n        if (str.length !== 2) {\n            this.bail_out = true\n            return\n        }\n        const col = str.charCodeAt(0) - 97\t// asc('a') == 97\n        const row = str.charCodeAt(1) - 49\t// asc('1') == 49\n        if ((col < 0) || (col > 7) || (row < 0) || (row > 7)) {\n            this.bail_out = true\n            return\n        }\n        this.en_passant_column = col\n        this.en_passant_row = row\n    }\n\n//\n// Include side to move in hash.\n//\n// Note: NOP for black to move\n//\n    hash_color_to_move(arr, str) {\n        if (str === \"w\") {\n            return this.xor_with_random(arr, 780)\n        } else if (str !== \"b\") {\n            this.bail_out = true\n        }\n        return arr\n    }\n\n//\n// Include castling rights in hash.\n//\n    hash_castle(weed, str) {\n        if (str === \"-\") {\n            //\n            // NOP if no more castling rights\n            //\n            return weed\n        }\n        if (str.search(\"K\") !== -1) {\n            weed = this.xor_with_random(weed, 768)\n        }\n        if (str.search(\"Q\") !== -1) {\n            weed = this.xor_with_random(weed, 769)\n        }\n        if (str.search(\"k\") !== -1) {\n            weed = this.xor_with_random(weed, 770)\n        }\n        if (str.search(\"q\") !== -1) {\n            weed = this.xor_with_random(weed, 771)\n        }\n        return weed\n    }\n\n//\n// Compute hash based on location of pieces on the board\n//\n// weed = initial hash value (BigInt to hold 64-bit integers)\n// str = first part of FEN string (containing location of pieces)\n//\n    hash_pieces(weed, str) {\n        const rows = str.split(\"/\")\n        if (rows.length !== 8) {\n            this.bail_out = true\n            return weed\n        }\n        for (let i = 0; i < 8; i++) {\n            let col = 0\n            const row = 7 - i\n            for (let j = 0; j < rows[i].length; j++) {\n                switch (rows[i][j]) {\n                    //\n                    // Check for possible en-passant captures\n                    //\n                    case \"p\":\n                        weed = this.xor_with_random(weed, 8 * row + col)\n                        if ((this.en_passant_row === 2) && (row === 3) && (this.en_passant_column > 0) && (col === this.en_passant_column - 1))\n                            this.can_take_ep = true\n                        if ((this.en_passant_row === 2) && (row === 3) && (this.en_passant_column < 7) && (col === this.en_passant_column + 1))\n                            this.can_take_ep = true\n                        col++\n                        break\n                    case \"P\":\n                        weed = this.xor_with_random(weed, 64 + 8 * row + col)\n                        if ((this.en_passant_row === 5) && (row === 4) && (this.en_passant_column > 0) && (col === this.en_passant_column - 1))\n                            this.can_take_ep = true\n                        if ((this.en_passant_row === 5) && (row === 4) && (this.en_passant_column < 7) && (col === this.en_passant_column + 1))\n                            this.can_take_ep = true\n                        col++\n                        break\n                    case \"n\":\n                        weed = this.xor_with_random(weed, 64 * 2 + 8 * row + col)\n                        col++\n                        break\n                    case \"N\":\n                        weed = this.xor_with_random(weed, 64 * 3 + 8 * row + col)\n                        col++\n                        break\n                    case \"b\":\n                        weed = this.xor_with_random(weed, 64 * 4 + 8 * row + col)\n                        col++\n                        break\n                    case \"B\":\n                        weed = this.xor_with_random(weed, 64 * 5 + 8 * row + col)\n                        col++\n                        break\n                    case \"r\":\n                        weed = this.xor_with_random(weed, 64 * 6 + 8 * row + col)\n                        col++\n                        break\n                    case \"R\":\n                        weed = this.xor_with_random(weed, 64 * 7 + 8 * row + col)\n                        col++\n                        break\n                    case \"q\":\n                        weed = this.xor_with_random(weed, 64 * 8 + 8 * row + col)\n                        col++\n                        break\n                    case \"Q\":\n                        weed = this.xor_with_random(weed, 64 * 9 + 8 * row + col)\n                        col++\n                        break\n                    case \"k\":\n                        weed = this.xor_with_random(weed, 64 * 10 + 8 * row + col)\n                        col++\n                        break\n                    case \"K\":\n                        weed = this.xor_with_random(weed, 64 * 11 + 8 * row + col)\n                        col++\n                        break\n                    case \"0\":\n                    case \"1\":\n                    case \"2\":\n                    case \"3\":\n                    case \"4\":\n                    case \"5\":\n                    case \"6\":\n                    case \"7\":\n                    case \"8\":\n                        const r = rows[i].charCodeAt(j) - 48\t// asc('0') == 48\n                        col += r\n                        break\n                    default:\n                        this.bail_out = true\n                        return weed\n                }\n            }\n            if (col !== 8)\n                this.bail_out = true\n        }\n        return weed\n    }\n\n//\n// Generate hash based on FEN string\n//\n    compute_fen_hash(fenstring) {\n        this.en_passant_row = -1\n        this.en_passant_column = -1\n        this.can_take_ep = false\n\n        let hash = 0n\n        const fen = fenstring.trim().split(\" \")\n        if (fen.length !== 6) {\n            return null\n        }\n        this.parse_en_passant(fen[3]) \t// will set global en-passant variables\n        hash = this.hash_pieces(hash, fen[0])\n        if (this.can_take_ep) {\n            hash = this.xor_with_random(hash, 772 + this.en_passant_column)\n        }\n        hash = this.hash_color_to_move(hash, fen[1])\n        hash = this.hash_castle(hash, fen[2])\n        return hash\n    }\n\n}", "/**\n * Author: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-polyglot\n * License: MIT, see file \"LINCENSE\"\n *\n * An ES6 wrapper for the ployglot part of https://github.com/evilwan/stakelbase\n */\n\nimport {Book} from \"../lib/stakelbase/Book.js\"\nimport {KeyGenerator} from \"../lib/stakelbase/KeyGenerator.js\"\n\nexport class Polyglot {\n\n    constructor(url) {\n        // const bookEntry = new BookEntry()\n        this.book = null\n        this.initialisation = new Promise((resolve) => {\n            /** @var book Book */\n            this.fetchBook(url).then((book) => {\n                this.book = book\n                resolve()\n            })\n        })\n        this.keyGenerator = new KeyGenerator()\n    }\n\n    /**\n        @returns move { from: 'h7', to:'h8', promotion: 'q' }\n     */\n    entryToMove(bookEntry) {\n        const move = {\n            from: undefined,\n            to: undefined,\n            promotion: undefined\n        }\n        const files = \"abcdefgh\"\n        const promoPieces = \" nbrq\"\n\n        move.from = files[bookEntry.get_from_col()]\n        move.from = \"\" + move.from + (bookEntry.get_from_row() + 1)\n        move.to = files[bookEntry.get_to_col()]\n        move.to = \"\" + move.to + (bookEntry.get_to_row() + 1)\n\n        if (bookEntry.get_promo_piece() > 0) {\n            move.promotion = promoPieces[bookEntry.get_promo_piece()]\n        }\n        // special castling moves notation in polyglot, see http://hgm.nubati.net/book_format.html\n        if(bookEntry.isOOW()) {\n            move.to = \"g1\"\n        } else if(bookEntry.isOOOW()) {\n            move.to = \"c1\"\n        } else if(bookEntry.isOOB()) {\n            move.to = \"g8\"\n        } else if(bookEntry.isOOOB()) {\n            move.to = \"c8\"\n        }\n        move.weight = bookEntry.weight\n        return move\n    }\n\n    async getMovesFromFen(fen, weightPower = 0.2) {\n        return new Promise((resolve) => {\n            this.initialisation.then(() => {\n                const hash = this.keyGenerator.compute_fen_hash(fen)\n                const bookEntries = this.book.get_all_moves(hash)\n                const moves = []\n                let weightSum = 0\n                for (const bookEntry of bookEntries) {\n                    moves.push(this.entryToMove(bookEntry))\n                    weightSum += bookEntry.weight\n                }\n                // calculate probability  http://hgm.nubati.net/book_format.html\n                for (const move of moves) {\n                    move.probability = Math.pow(move.weight / weightSum, weightPower)\n                        .toFixed(1)\n                }\n                resolve(moves)\n            })\n        })\n    }\n\n    fetchBook(url) {\n        return new Promise((resolve, reject) => {\n            fetch(url).then((response) => {\n                response.blob().then((blob) => {\n                    let reader = new FileReader()\n                    reader.readAsBinaryString(blob)\n                    reader.onload = () => {\n                        resolve(new Book(reader.result))\n                    }\n                    reader.onerror = () => {\n                        reject(reader.error)\n                    }\n                })\n            })\n        })\n    }\n\n}\n\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-engine-runner\n * License: MIT, see file 'LICENSE'\n */\nimport {ENGINE_STATE, EngineRunner} from \"./EngineRunner.js\"\nimport {Polyglot} from \"cm-polyglot/src/Polyglot.js\"\n\nexport class PolyglotRunner extends EngineRunner {\n\n    constructor(props) {\n        super(props)\n    }\n\n    init() {\n        this.polyglot = new Polyglot(this.props.bookUrl)\n        this.polyglot.initialisation.then(() => {\n            this.engineState = ENGINE_STATE.READY\n            return Promise.resolve()\n        })\n    }\n\n    calculateMove(fen, props = {}) {\n        this.engineState = ENGINE_STATE.THINKING\n        const timeoutPromise = new Promise((resolve) => {\n            setTimeout(async () => {\n                resolve()\n            }, this.props.responseDelay)\n        })\n        const calculationPromise = new Promise(async (resolve) => {\n            const moves = await this.polyglot.getMovesFromFen(fen)\n            if(this.props.debug) {\n                console.log(fen, \"moves found in opening book\", moves)\n            }\n            // handle probability\n            const propabilityMatrix = []\n            for (const move of moves) {\n                for (let i = 0; i < (move.probability * 10); i++) {\n                    propabilityMatrix.push(move)\n                }\n            }\n            // probability weighted random\n            const luckyIndex = Math.floor(Math.random() * propabilityMatrix.length)\n            resolve(propabilityMatrix[luckyIndex])\n        })\n        return new Promise((resolve) => {\n            Promise.all([this.initialized, timeoutPromise, calculationPromise]).then((values) => {\n                this.engineState = ENGINE_STATE.READY\n                resolve(values[2])\n            })\n        })\n    }\n\n}\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\n\r\nimport {ChessConsolePlayer} from \"chess-console/src/ChessConsolePlayer.js\"\r\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\r\nimport {CONSOLE_MESSAGE_TOPICS} from \"chess-console/src/ChessConsole.js\"\r\nimport {PolyglotRunner} from \"cm-engine-runner/src/PolyglotRunner.js\"\r\nimport {ENGINE_STATE} from \"cm-engine-runner/src/EngineRunner.js\"\r\nimport {StockfishRunner} from \"cm-engine-runner/src/StockfishRunner.js\"\r\n\r\nexport class StockfishPlayer extends ChessConsolePlayer {\r\n\r\n    constructor(chessConsole, name, props) {\r\n        super(chessConsole, name)\r\n        this.props = {\r\n            debug: false\r\n        }\r\n        Object.assign(this.props, props)\r\n        this.engineRunner = new StockfishRunner({workerUrl: props.worker, debug: props.debug })\r\n        this.openingRunner = props.book ? new PolyglotRunner({bookUrl: props.book }) : this.engineRunner\r\n        this.state = {\r\n            scoreHistory: {},\r\n            score: null,\r\n            level: props.level,\r\n            engineState: ENGINE_STATE.LOADING,\r\n            currentRunner: this.openingRunner\r\n        }\r\n        this.initialisation = Promise.all([this.openingRunner.initialization, this.engineRunner.initialization])\r\n        this.initialisation.then(() => {\r\n            this.state.engineState = ENGINE_STATE.LOADED\r\n        })\r\n\r\n        this.i18n = chessConsole.i18n\r\n        this.i18n.load({\r\n            de: {\r\n                score: \"Bewertung\",\r\n                level: \"Stufe\"\r\n            },\r\n            en: {\r\n                score: \"Score\",\r\n                level: \"Level\"\r\n            }\r\n        })\r\n\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.load, () => {\r\n            if (this.chessConsole.persistence.loadValue(\"level\")) {\r\n                this.state.level = parseInt(this.chessConsole.persistence.loadValue(\"level\"), 10)\r\n            }\r\n            if (this.chessConsole.persistence.loadValue(\"scoreHistory\")) {\r\n                this.state.scoreHistory = this.chessConsole.persistence.loadValue(\"scoreHistory\")\r\n                let score = this.state.scoreHistory[this.chessConsole.state.plyViewed]\r\n                if (!score && this.chessConsole.state.plyViewed > 0) {\r\n                    score = this.state.scoreHistory[this.chessConsole.state.plyViewed - 1]\r\n                }\r\n                this.state.score = score\r\n            }\r\n        })\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.moveUndone, () => {\r\n            this.state.currentRunner = this.openingRunner\r\n        })\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.newGame, () => {\r\n            this.state.scoreHistory = {}\r\n            this.state.score = 0\r\n        })\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.initGame, (data) => {\r\n            if (data.props.engineLevel) {\r\n                this.state.level = data.props.engineLevel\r\n            }\r\n            this.state.currentRunner = this.openingRunner\r\n        })\r\n        Observe.property(this.state, \"level\", () => {\r\n            this.chessConsole.persistence.saveValue(\"level\", this.state.level)\r\n        })\r\n        Observe.property(this.state, \"score\", () => {\r\n            this.chessConsole.persistence.saveValue(\"score\", this.state.score)\r\n            this.chessConsole.persistence.saveValue(\"scoreHistory\", this.state.scoreHistory)\r\n        })\r\n    }\r\n\r\n    moveRequest(fen, moveResponse) {\r\n        if (this.props.debug) {\r\n            console.log(\"moveRequest\", fen)\r\n        }\r\n        this.initialisation.then(async () => {\r\n            this.state.engineState = ENGINE_STATE.THINKING\r\n            if(this.state.level < 3) {\r\n                this.state.currentRunner = this.engineRunner // No book for Level 1 and 2\r\n            }\r\n            let nextMove = await this.state.currentRunner.calculateMove(fen, {level: this.state.level })\r\n            if (!nextMove) {\r\n                if (this.props.debug) {\r\n                    console.log(\"no move found with\", this.state.currentRunner.constructor.name)\r\n                }\r\n                if (this.state.currentRunner === this.openingRunner) {\r\n                    this.state.currentRunner = this.engineRunner\r\n                    this.moveRequest(fen, moveResponse)\r\n                } else {\r\n                    throw new Error(\"can't find move with fen \" + fen + \" and runner \" + this.state.currentRunner)\r\n                }\r\n            } else {\r\n                if (this.props.debug) {\r\n                    console.log(\"this.state.currentRunner\", this.state.currentRunner)\r\n                    console.log(\"nextMove\", nextMove, this.state.currentRunner.constructor.name)\r\n                }\r\n                let newScore = undefined\r\n                if (nextMove.score !== undefined) {\r\n                    if(!isNaN(nextMove.score)) {\r\n                        // newScore = this.chessConsole.props.playerColor === COLOR.white ? -nextMove.score : nextMove.score\r\n                        newScore = -nextMove.score\r\n                    } else {\r\n                        newScore = nextMove.score\r\n                    }\r\n                    this.state.scoreHistory[this.chessConsole.state.chess.plyCount()] = newScore\r\n                    this.state.score = newScore\r\n                } else {\r\n                    this.state.score = undefined\r\n                }\r\n                this.state.engineState = ENGINE_STATE.READY\r\n                moveResponse(nextMove)\r\n            }\r\n        })\r\n    }\r\n}\r\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\r\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\r\nimport {ENGINE_STATE} from \"cm-engine-runner/src/EngineRunner.js\"\r\n\r\nexport class StockfishStateView extends UiComponent {\r\n\r\n    /**\r\n     * @param chessConsole\r\n     * @param player\r\n     * @param props // { spinnerIcon: spinner }\r\n     */\r\n    constructor(chessConsole, player, props = {}) {\r\n        super(undefined, props)\r\n        this.chessConsole = chessConsole\r\n        this.player = player\r\n        const i18n = chessConsole.i18n\r\n        if (!this.props.spinnerIcon) {\r\n            this.props.spinnerIcon = \"spinner\"\r\n        }\r\n        this.numberFormat = new Intl.NumberFormat(i18n.locale, {\r\n            minimumFractionDigits: 1,\r\n            maximumFractionDigits: 1\r\n        })\r\n        this.element = this.chessConsole.context.querySelector(\".engine-state\")\r\n        this.element.innerHTML = `<span class=\"score text-muted\"></span> <span class=\"thinking text-muted\"><i class=\"fas fa-${this.props.spinnerIcon} fa-spin\"></i></span>`\r\n        this.scoreElement = this.element.querySelector(\".score\")\r\n        this.thinkingElement = this.element.querySelector(\".thinking\")\r\n        this.thinkingElement.style.display = 'none'\r\n        Observe.property(player.state, \"level\", () => {\r\n            this.updatePlayerName()\r\n        })\r\n        Observe.property(player.state, \"engineState\", () => {\r\n            // console.log(\"engineState\", player.state.engineState)\r\n            if (player.state.engineState === ENGINE_STATE.THINKING) {\r\n                this.thinkingElement.style.display = ''\r\n            } else {\r\n                this.thinkingElement.style.display = 'none'\r\n            }\r\n        })\r\n        Observe.property(player.state, \"score\", (event) => {\r\n            const newScore = event.newValue\r\n            if (newScore) {\r\n                let scoreFormatted\r\n                if (isNaN(newScore)) {\r\n                    scoreFormatted = newScore\r\n                } else {\r\n                    scoreFormatted = this.numberFormat.format(newScore)\r\n                }\r\n                this.scoreElement.innerHTML = `${i18n.t(\"score\")} ${scoreFormatted}`\r\n            } else {\r\n                this.scoreElement.innerHTML = ``\r\n            }\r\n        })\r\n        Observe.property(this.chessConsole.state, \"plyViewed\", () => {\r\n            let score = player.state.scoreHistory[this.chessConsole.state.plyViewed]\r\n            if (!score && this.chessConsole.state.plyViewed > 0) {\r\n                score = player.state.scoreHistory[this.chessConsole.state.plyViewed - 1]\r\n            }\r\n            if (score) {\r\n                let scoreFormatted\r\n                if (isNaN(score)) {\r\n                    scoreFormatted = score\r\n                } else {\r\n                    scoreFormatted = this.numberFormat.format(score)\r\n                }\r\n                this.scoreElement.innerHTML = `${i18n.t(\"score\")} ${scoreFormatted}`\r\n            } else {\r\n                this.scoreElement.innerHTML = ''\r\n            }\r\n        })\r\n        this.updatePlayerName()\r\n    }\r\n\r\n    updatePlayerName() {\r\n        this.player.name = `Stockfish ${this.chessConsole.i18n.t(\"level\")} ${this.player.state.level}`\r\n    }\r\n}\r\n"],
  "mappings": ";;AAKO,MAAM,OAAO;AAAA;AAAA,IAGhB,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,MAAM;AAAA;AAAA,IACN,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA;AAAA;AAAA,IAIR,YAAY;AAAA,IAAc,YAAY;AAAA;AAAA,IACtC,UAAU;AAAA,IAAY,UAAU;AAAA;AAAA,IAChC,WAAW;AAAA,IAAa,WAAW;AAAA;AAAA,IACnC,SAAS;AAAA,IAAW,SAAS;AAAA;AAAA,IAC7B,WAAW;AAAA,IAAa,WAAW;AAAA;AAAA;AAAA,IAEnC,WAAW;AAAA;AAAA,IACX,cAAc;AAAA;AAAA,IACd,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA;AAAA,IAEP,SAAS;AAAA;AAAA,IACT,KAAK;AAAA;AAAA;AAAA,IAEL,MAAM;AAAA;AAAA,IACN,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA;AAAA,IAET,aAAa;AAAA;AAAA;AAAA,IAEb,OAAO;AAAA;AAAA,IACP,KAAK;AAAA;AAAA;AAAA,IAEL,aAAa;AAAA;AAAA;AAAA,IAEb,WAAW;AAAA;AAAA,IACX,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,EAEd;AAEO,MAAM,SAAN,MAAa;AAAA,IAEhB,YAAY,eAAe,IAAI;AAC3B,WAAK,MAAM;AACX,YAAM,OAAO,aAAa,MAAM,cAAc;AAC9C,UAAI,QAAQ,KAAK,SAAS,GAAG;AACzB,iBAASA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AAClC,cAAI,MAAM,KAAKA,EAAC,EAAE,MAAM,qBAAqB;AAC7C,cAAI,KAAK;AACL,iBAAK,KAAK,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,QAAQ;AACJ,WAAK,OAAO,CAAC;AAAA,IACjB;AAAA,IAEA,SAAS;AACL,UAAI,WAAW;AACf,iBAAW,OAAO,KAAK,MAAM;AACzB,oBAAY,IAAI,GAAG,KAAK,KAAK,KAAK,GAAG,CAAC;AAAA;AAAA,MAC1C;AACA,aAAO;AAAA,IACX;AAAA,EAEJ;;;ACrEA,WAAS,aAAa,OAAO,QAAQ;AACnC,aAAS,OAAO;AAAE,WAAK,cAAc;AAAA,IAAO;AAC5C,SAAK,YAAY,OAAO;AACxB,UAAM,YAAY,IAAI,KAAK;AAAA,EAC7B;AAEA,WAAS,gBAAgB,SAAS,UAAU,OAAO,UAAU;AAC3D,SAAK,UAAW;AAChB,SAAK,WAAW;AAChB,SAAK,QAAW;AAChB,SAAK,WAAW;AAChB,SAAK,OAAW;AAEhB,QAAI,OAAO,MAAM,sBAAsB,YAAY;AACjD,YAAM,kBAAkB,MAAM,eAAe;AAAA,IAC/C;AAAA,EACF;AAEA,eAAa,iBAAiB,KAAK;AAEnC,kBAAgB,eAAe,SAAS,UAAU,OAAO;AACvD,QAAI,2BAA2B;AAAA,MACzB,SAAS,SAAS,aAAa;AAC7B,eAAO,MAAO,cAAc,YAAY,IAAI,IAAI;AAAA,MAClD;AAAA,MAEA,SAAS,SAAS,aAAa;AAC7B,YAAI,eAAe,IACfC;AAEJ,aAAKA,KAAI,GAAGA,KAAI,YAAY,MAAM,QAAQA,MAAK;AAC7C,0BAAgB,YAAY,MAAMA,EAAC,aAAa,QAC5C,YAAY,YAAY,MAAMA,EAAC,EAAE,CAAC,CAAC,IAAI,MAAM,YAAY,YAAY,MAAMA,EAAC,EAAE,CAAC,CAAC,IAChF,YAAY,YAAY,MAAMA,EAAC,CAAC;AAAA,QACtC;AAEA,eAAO,OAAO,YAAY,WAAW,MAAM,MAAM,eAAe;AAAA,MAClE;AAAA,MAEA,KAAK,SAAS,aAAa;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,KAAK,SAAS,aAAa;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,OAAO,SAAS,aAAa;AAC3B,eAAO,YAAY;AAAA,MACrB;AAAA,IACF;AAEJ,aAAS,IAAI,IAAI;AACf,aAAO,GAAG,WAAW,CAAC,EAAE,SAAS,EAAE,EAAE,YAAY;AAAA,IACnD;AAEA,aAAS,cAAc,GAAG;AACxB,aAAO,EACJ,QAAQ,OAAO,MAAM,EACrB,QAAQ,MAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,gBAAyB,SAAS,IAAI;AAAE,eAAO,SAAS,IAAI,EAAE;AAAA,MAAG,CAAC,EAC1E,QAAQ,yBAAyB,SAAS,IAAI;AAAE,eAAO,QAAS,IAAI,EAAE;AAAA,MAAG,CAAC;AAAA,IAC/E;AAEA,aAAS,YAAY,GAAG;AACtB,aAAO,EACJ,QAAQ,OAAO,MAAM,EACrB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,MAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,OAAO,KAAK,EACpB,QAAQ,gBAAyB,SAAS,IAAI;AAAE,eAAO,SAAS,IAAI,EAAE;AAAA,MAAG,CAAC,EAC1E,QAAQ,yBAAyB,SAAS,IAAI;AAAE,eAAO,QAAS,IAAI,EAAE;AAAA,MAAG,CAAC;AAAA,IAC/E;AAEA,aAAS,oBAAoB,aAAa;AACxC,aAAO,yBAAyB,YAAY,IAAI,EAAE,WAAW;AAAA,IAC/D;AAEA,aAAS,iBAAiBC,WAAU;AAClC,UAAI,eAAe,IAAI,MAAMA,UAAS,MAAM,GACxCD,IAAG;AAEP,WAAKA,KAAI,GAAGA,KAAIC,UAAS,QAAQD,MAAK;AACpC,qBAAaA,EAAC,IAAI,oBAAoBC,UAASD,EAAC,CAAC;AAAA,MACnD;AAEA,mBAAa,KAAK;AAElB,UAAI,aAAa,SAAS,GAAG;AAC3B,aAAKA,KAAI,GAAG,IAAI,GAAGA,KAAI,aAAa,QAAQA,MAAK;AAC/C,cAAI,aAAaA,KAAI,CAAC,MAAM,aAAaA,EAAC,GAAG;AAC3C,yBAAa,CAAC,IAAI,aAAaA,EAAC;AAChC;AAAA,UACF;AAAA,QACF;AACA,qBAAa,SAAS;AAAA,MACxB;AAEA,cAAQ,aAAa,QAAQ;AAAA,QAC3B,KAAK;AACH,iBAAO,aAAa,CAAC;AAAA,QAEvB,KAAK;AACH,iBAAO,aAAa,CAAC,IAAI,SAAS,aAAa,CAAC;AAAA,QAElD;AACE,iBAAO,aAAa,MAAM,GAAG,EAAE,EAAE,KAAK,IAAI,IACtC,UACA,aAAa,aAAa,SAAS,CAAC;AAAA,MAC5C;AAAA,IACF;AAEA,aAAS,cAAcE,QAAO;AAC5B,aAAOA,SAAQ,MAAO,cAAcA,MAAK,IAAI,MAAO;AAAA,IACtD;AAEA,WAAO,cAAc,iBAAiB,QAAQ,IAAI,UAAU,cAAc,KAAK,IAAI;AAAA,EACrF;AAEA,WAAS,UAAU,OAAO,SAAS;AACjC,cAAU,YAAY,SAAS,UAAU,CAAC;AAE1C,QAAI,aAAa,CAAC,GAEd,yBAAyB,EAAE,KAAK,aAAa,GAC7C,wBAAyB,cAEzB,SAAS,SAAS,IAAI,KAAK;AAAE,UAAI,MAAO,MAAM,MAAM,CAAC;AAAI,UAAI,QAAQ,EAAE;AAAE,aAAO;AAAA,IAAK,GACrF,SAAS,SAAS,IAAI,KAAK;AAAE,UAAI,MAAO,MAAM,MAAM,CAAC;AAAI,UAAI,QAAQ,EAAE;AAAG,aAAO;AAAA,IAAK,GACtF,SAAS,WAAW;AAAE,aAAO,CAAC,CAAC,CAAC;AAAA,IAAG,GACnC,SAAS,SAAS,IAAI;AAAE,aAAO;AAAA,IAAI,GACnC,SAAS,SAAS,IAAI;AAAE,aAAO;AAAA,IAAI,GACnC,SAAS,SAAS,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,MAAM,KAAK;AAAE,UAAI,MAAO,MAAM,MAAM,CAAC;AAC1E,UAAI,OAAO,CAAC;AAAG,WAAK,OAAO;AAAK,WAAK,aAAa;AAClD,WAAK,WAAW;AAAI,WAAK,gBAAgB;AAAI,WAAK,eAAe;AAAI,WAAK,cAAc;AACxF,WAAK,aAAc,OAAO,OAAO,CAAC;AAAI,WAAK,MAAO,MAAM,MAAM;AAAO,UAAI,QAAQ,IAAI;AAAG,aAAO;AAAA,IAAK,GAC1G,SAAS,SAAS,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,MAAM,KAAK;AAAE,UAAI,MAAO,MAAM,MAAM,CAAC;AAC1E,UAAI,OAAO,CAAC;AAAG,WAAK,OAAO;AAAK,WAAK,aAAa;AAClD,WAAK,WAAW;AAAI,WAAK,gBAAgB;AAAI,WAAK,eAAe;AACjE,WAAK,aAAc,OAAO,OAAO,CAAC;AAAI,UAAI,QAAQ,IAAI;AAAG,WAAK,MAAO,MAAM,MAAM;AAAO,aAAO;AAAA,IAAK,GAC1G,SAAS,OACT,SAAS,uBAAuB,OAAO,KAAK,GAC5C,SAAS,WAAW;AAAE,aAAO,CAAC,KAAK;AAAA,IAAG,GACtC,UAAU,OACV,UAAU,uBAAuB,OAAO,KAAK,GAC7C,UAAU,WAAW;AAAE,aAAO,CAAC,KAAK;AAAA,IAAG,GACvC,UAAU,OACV,UAAU,uBAAuB,OAAO,KAAK,GAC7C,UAAU,WAAW;AAAE,aAAO,CAAC,KAAK;AAAA,IAAG,GACvC,UAAU,OACV,UAAU,uBAAuB,OAAO,KAAK,GAC7C,UAAU,WAAW;AAAE,aAAO,CAAC,KAAK;AAAA,IAAG,GACvC,UAAU,WACV,UAAU,uBAAuB,WAAW,KAAK,GACjD,UAAU,WAAW;AAAE,aAAO,CAAC,SAAS;AAAA,IAAG,GAC3C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,WAAW;AAAE,aAAO,CAAC,GAAG;AAAA,IAAG,GACrC,UAAU,SACV,UAAU,qBAAqB,CAAC,GAAG,GAAG,MAAM,KAAK,GACjD,UAAU,SAAS,IAAI;AAAE,aAAO,GAAG,KAAK,EAAE,EAAE,KAAK;AAAA,IAAG,GACpD,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,SAAS,MAAM,KAAK,IAAI;AAAE,UAAI,MAAO,MAAM,MAAM,CAAC;AAAI,UAAI,QAAQ,IAAI;AAAG,aAAO;AAAA,IAAK,GAC/F,UAAU,SAAS,MAAM,KAAK;AAAE,UAAI,MAAO,MAAM,MAAM,CAAC;AAAI,UAAI,QAAQ,IAAI;AAAG,aAAO;AAAA,IAAK,GAC3F,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,SAAS,KAAK;AAAE,aAAO;AAAA,IAAK,GACtC,UAAU,qBAAqB,SAAS,GACxC,UAAU,UACV,UAAU,qBAAqB,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,KAAK,GACzD,UAAU,SAAS,QAAQ;AAAE,aAAO,YAAY,MAAM;AAAA,IAAG,GACzD,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAG,GACjC,UAAU,SAAS,KAAK,MAAM,KAAK,KAAK,KAAK,IAAI,IAAI;AAAE,UAAI,KAAK,CAAC;AAAG,SAAG,MAAO,MAAM,MAAM;AAAO,SAAG,OAAS,OAAO,OAAO;AAAO,SAAG,SAAU,MAAM,MAAM;AAAO,SAAG,MAAM;AAAK,SAAG,MAAM;AAAK,SAAG,QAAS,KAAK,KAAK;AAAO,SAAG,YAAY;AAAI,SAAG,YAAY,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK;AAAK,aAAO;AAAA,IAAI,GAC/W,UAAU,SAAS,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,IAAI,IAAI;AAAE,UAAI,KAAK,CAAC;AAAG,SAAG,MAAO,MAAM,MAAM;AAAO,SAAG,SAAU,OAAM,MAAM,MAAM;AAAO,SAAG,MAAM;AAAK,SAAG,MAAM;AAAK,SAAG,QAAS,KAAK,KAAK;AAAO,SAAG,YAAY,OAAQ,QAAM,MAAO,MAAM,MAAM,OAAO,QAAQ,OAAK,MAAM,MAAM,OAAO,MAAO,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK;AAAK,SAAG,YAAY;AAAI,aAAO;AAAA,IAAI,GACzW,UAAU,SAAS,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI;AAAE,UAAI,KAAK,CAAC;AAAG,SAAG,MAAO,MAAM,MAAM;AAAO,SAAG,SAAU,MAAM,MAAM;AAAO,SAAG,MAAM;AAAK,SAAG,MAAM;AAAK,SAAG,QAAS,KAAK,KAAK;AAAO,SAAG,YAAY,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAO,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK;AAAK,SAAG,YAAY;AAAI,aAAO;AAAA,IAAI,GACpT,UAAU,SACV,UAAU,uBAAuB,SAAS,KAAK,GAC/C,UAAU,SAAS,IAAI;AAAE,UAAI,KAAK,CAAC;AAAG,SAAG,WAAW,WAAU,KAAK,KAAK;AAAK,SAAG,QAAS,KAAK,KAAK;AAAO,aAAQ;AAAA,IAAI,GACtH,UAAU,OACV,UAAU,uBAAuB,OAAO,KAAK,GAC7C,UAAU,SAAS,IAAI;AAAE,UAAI,KAAK,CAAC;AAAG,SAAG,WAAW,SAAQ,KAAK,KAAK;AAAK,SAAG,QAAS,KAAK,KAAK;AAAO,aAAQ;AAAA,IAAI,GACpH,UAAU,MACV,UAAU,uBAAuB,MAAM,KAAK,GAC5C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,SAAS,IAAI;AAAE,aAAO,GAAG,CAAC;AAAA,IAAG,GACvC,UAAU,OACV,UAAU,uBAAuB,OAAO,KAAK,GAC7C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,SAAS,GAAG;AAAE,aAAO,MAAM;AAAA,IAAG,GACxC,UAAU,SAAS,KAAK,MAAM;AAAE,UAAI,MAAO,OAAO,OAAO,CAAC;AAAI,UAAI,QAAQ,GAAG;AAAG,aAAO;AAAA,IAAK,GAC5F,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,SAAS,KAAK;AAAE,aAAO,MAAM;AAAA,IAAK,GAC5C,UAAU,MACV,UAAU,uBAAuB,MAAM,KAAK,GAC5C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAM,GACpC,UAAU,MACV,UAAU,uBAAuB,MAAM,KAAK,GAC5C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAM,GACpC,UAAU,MACV,UAAU,uBAAuB,MAAM,KAAK,GAC5C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAM,GACpC,UAAU,MACV,UAAU,uBAAuB,MAAM,KAAK,GAC5C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAM,GACpC,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAM,GACpC,UAAU,KACV,UAAU,uBAAuB,KAAK,KAAK,GAC3C,UAAU,WAAW;AAAE,aAAO;AAAA,IAAM,GACpC,UAAU,UACV,UAAU,uBAAuB,UAAU,KAAK,GAChD,UAAU,UACV,UAAU,uBAAuB,UAAU,KAAK,GAChD,UAAU,UACV,UAAU,uBAAuB,UAAU,KAAK,GAChD,UAAU,UACV,UAAU,uBAAuB,UAAU,KAAK,GAChD,UAAU,UACV,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM,GACrC,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM,GACrC,WAAW,QACX,WAAW,uBAAuB,QAAQ,KAAK,GAC/C,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM,GACrC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM,GACrC,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM,GACrC,WAAW,MACX,WAAW,uBAAuB,MAAM,KAAK,GAC7C,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM,GACrC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAO,GACtC,WAAW,UACX,WAAW,uBAAuB,UAAU,KAAK,GACjD,WAAW,WAAW;AAAE,aAAO;AAAA,IAAQ,GACvC,WAAW,KACX,WAAW,uBAAuB,KAAK,KAAK,GAC5C,WAAW,WAAW;AAAE,aAAO;AAAA,IAAQ,GACvC,WAAW,aACX,WAAW,qBAAqB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,OAAO,KAAK,GAC5E,WAAW,UACX,WAAW,qBAAqB,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,KAAK,GAC1D,WAAW,UACX,WAAW,qBAAqB,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,KAAK,GAC1D,WAAW,KACX,WAAW,uBAAuB,KAAK,KAAK,GAC5C,WAAW,KACX,WAAW,uBAAuB,KAAK,KAAK,GAE5C,cAAuB,GACvB,eAAuB,GACvB,sBAAuB,CAAC,EAAE,MAAM,GAAG,QAAQ,EAAE,CAAC,GAC9C,iBAAuB,GACvB,sBAAuB,CAAC,GACxB,kBAAuB,GAEvB;AAEJ,QAAI,eAAe,SAAS;AAC1B,UAAI,EAAE,QAAQ,aAAa,yBAAyB;AAClD,cAAM,IAAI,MAAM,oCAAqC,QAAQ,YAAY,IAAK;AAAA,MAChF;AAEA,8BAAwB,uBAAuB,QAAQ,SAAS;AAAA,IAClE;AAEA,aAAS,OAAO;AACd,aAAO,MAAM,UAAU,cAAc,WAAW;AAAA,IAClD;AAEA,aAAS,WAAW;AAClB,aAAO,oBAAoB,cAAc,WAAW;AAAA,IACtD;AAEA,aAAS,SAAS,aAAaC,WAAU;AACvC,MAAAA,YAAWA,cAAa,SAASA,YAAW,oBAAoB,cAAc,WAAW;AAEzF,YAAM;AAAA,QACJ,CAAC,qBAAqB,WAAW,CAAC;AAAA,QAClC,MAAM,UAAU,cAAc,WAAW;AAAA,QACzCA;AAAA,MACF;AAAA,IACF;AAEA,aAAS,MAAM,SAASA,WAAU;AAChC,MAAAA,YAAWA,cAAa,SAASA,YAAW,oBAAoB,cAAc,WAAW;AAEzF,YAAM,qBAAqB,SAASA,SAAQ;AAAA,IAC9C;AAEA,aAAS,uBAAuBC,OAAM,YAAY;AAChD,aAAO,EAAE,MAAM,WAAW,MAAMA,OAAM,WAAuB;AAAA,IAC/D;AAEA,aAAS,qBAAqB,OAAO,UAAU,YAAY;AACzD,aAAO,EAAE,MAAM,SAAS,OAAc,UAAoB,WAAuB;AAAA,IACnF;AAEA,aAAS,qBAAqB;AAC5B,aAAO,EAAE,MAAM,MAAM;AAAA,IACvB;AAEA,aAAS,qBAAqB;AAC5B,aAAO,EAAE,MAAM,MAAM;AAAA,IACvB;AAEA,aAAS,qBAAqB,aAAa;AACzC,aAAO,EAAE,MAAM,SAAS,YAAyB;AAAA,IACnD;AAEA,aAAS,sBAAsB,KAAK;AAClC,UAAI,UAAU,oBAAoB,GAAG,GAAG;AAExC,UAAI,SAAS;AACX,eAAO;AAAA,MACT,OAAO;AACL,YAAI,MAAM;AACV,eAAO,CAAC,oBAAoB,CAAC,GAAG;AAC9B;AAAA,QACF;AAEA,kBAAU,oBAAoB,CAAC;AAC/B,kBAAU;AAAA,UACR,MAAQ,QAAQ;AAAA,UAChB,QAAQ,QAAQ;AAAA,QAClB;AAEA,eAAO,IAAI,KAAK;AACd,cAAI,MAAM,WAAW,CAAC,MAAM,IAAI;AAC9B,oBAAQ;AACR,oBAAQ,SAAS;AAAA,UACnB,OAAO;AACL,oBAAQ;AAAA,UACV;AAEA;AAAA,QACF;AAEA,4BAAoB,GAAG,IAAI;AAC3B,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,oBAAoB,UAAU,QAAQ;AAC7C,UAAI,kBAAkB,sBAAsB,QAAQ,GAChD,gBAAkB,sBAAsB,MAAM;AAElD,aAAO;AAAA,QACL,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,MAAQ,gBAAgB;AAAA,UACxB,QAAQ,gBAAgB;AAAA,QAC1B;AAAA,QACA,KAAK;AAAA,UACH,QAAQ;AAAA,UACR,MAAQ,cAAc;AAAA,UACtB,QAAQ,cAAc;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AAEA,aAAS,SAASH,WAAU;AAC1B,UAAI,cAAc,gBAAgB;AAAE;AAAA,MAAQ;AAE5C,UAAI,cAAc,gBAAgB;AAChC,yBAAiB;AACjB,8BAAsB,CAAC;AAAA,MACzB;AAEA,0BAAoB,KAAKA,SAAQ;AAAA,IACnC;AAEA,aAAS,qBAAqB,SAASE,WAAU;AAC/C,aAAO,IAAI,gBAAgB,SAAS,MAAM,MAAMA,SAAQ;AAAA,IAC1D;AAEA,aAAS,yBAAyBF,WAAU,OAAOE,WAAU;AAC3D,aAAO,IAAI;AAAA,QACT,gBAAgB,aAAaF,WAAU,KAAK;AAAA,QAC5CA;AAAA,QACA;AAAA,QACAE;AAAA,MACF;AAAA,IACF;AAEA,aAAS,eAAe;AACtB,UAAI,IAAI,IAAI;AAEZ,WAAK;AACL,WAAK,uBAAuB;AAC5B,UAAI,OAAO,YAAY;AACrB,aAAK,kBAAkB;AACvB,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,OAAO,IAAI,EAAE;AAClB,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK;AACL,aAAK,uBAAuB;AAC5B,YAAI,OAAO,YAAY;AACrB,eAAK,kBAAkB;AACvB,cAAI,OAAO,YAAY;AACrB,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,2BAAe;AACf,iBAAK,OAAO,IAAI,EAAE;AAClB,iBAAK;AAAA,UACP,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK;AACL,eAAK,oBAAoB;AACzB,cAAI,OAAO,YAAY;AACrB,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,2BAAe;AACf,iBAAK,OAAO;AAAA,UACd;AACA,eAAK;AAAA,QACP;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,yBAAyB;AAChC,UAAI,IAAI;AAER,WAAK;AACL,WAAK,kBAAkB;AACvB,UAAI,OAAO,YAAY;AACrB,uBAAe;AACf,aAAK,OAAO,EAAE;AAAA,MAChB;AACA,WAAK;AAEL,aAAO;AAAA,IACT;AAEA,aAAS,yBAAyB;AAChC,UAAI,IAAI;AAER,WAAK;AACL,WAAK,kBAAkB;AACvB,UAAI,OAAO,YAAY;AACrB,uBAAe;AACf,aAAK,OAAO,EAAE;AAAA,MAChB;AACA,WAAK;AAEL,aAAO;AAAA,IACT;AAEA,aAAS,oBAAoB;AAC3B,UAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAErE,WAAK;AACL,WAAK,oBAAoB;AACzB,UAAI,OAAO,YAAY;AACrB,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK,iBAAiB;AACtB,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,oBAAoB;AACzB,cAAI,OAAO,YAAY;AACrB,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,iBAAK,oBAAoB;AACzB,gBAAI,OAAO,YAAY;AACrB,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,oBAAoB;AACzB,kBAAI,OAAO,YAAY;AACrB,qBAAK;AAAA,cACP;AACA,kBAAI,OAAO,YAAY;AACrB,qBAAK,iBAAiB;AACtB,oBAAI,OAAO,YAAY;AACrB,uBAAK;AAAA,gBACP;AACA,oBAAI,OAAO,YAAY;AACrB,uBAAK,oBAAoB;AACzB,sBAAI,OAAO,YAAY;AACrB,yBAAK;AAAA,kBACP;AACA,sBAAI,OAAO,YAAY;AACrB,yBAAK,kBAAkB;AACvB,wBAAI,OAAO,YAAY;AACrB,2BAAK,oBAAoB;AACzB,0BAAI,OAAO,YAAY;AACrB,6BAAK;AAAA,sBACP;AACA,0BAAI,OAAO,YAAY;AACrB,8BAAM,cAAc;AACpB,4BAAI,QAAQ,YAAY;AACtB,gCAAM;AAAA,wBACR;AACA,4BAAI,QAAQ,YAAY;AACtB,gCAAM,oBAAoB;AAC1B,8BAAI,QAAQ,YAAY;AACtB,kCAAM;AAAA,0BACR;AACA,8BAAI,QAAQ,YAAY;AACtB,kCAAM,iBAAiB;AACvB,gCAAI,QAAQ,YAAY;AACtB,oCAAM;AAAA,4BACR;AACA,gCAAI,QAAQ,YAAY;AACtB,oCAAM,oBAAoB;AAC1B,kCAAI,QAAQ,YAAY;AACtB,sCAAM;AAAA,8BACR;AACA,kCAAI,QAAQ,YAAY;AACtB,sCAAM,wBAAwB;AAC9B,oCAAI,QAAQ,YAAY;AACtB,wCAAM;AAAA,gCACR;AACA,oCAAI,QAAQ,YAAY;AACtB,wCAAM,kBAAkB;AACxB,sCAAI,QAAQ,YAAY;AACtB,0CAAM;AAAA,kCACR;AACA,sCAAI,QAAQ,YAAY;AACtB,mDAAe;AACf,yCAAK,OAAO,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,GAAG;AAC9C,yCAAK;AAAA,kCACP,OAAO;AACL,kDAAc;AACd,yCAAK;AAAA,kCACP;AAAA,gCACF,OAAO;AACL,gDAAc;AACd,uCAAK;AAAA,gCACP;AAAA,8BACF,OAAO;AACL,8CAAc;AACd,qCAAK;AAAA,8BACP;AAAA,4BACF,OAAO;AACL,4CAAc;AACd,mCAAK;AAAA,4BACP;AAAA,0BACF,OAAO;AACL,0CAAc;AACd,iCAAK;AAAA,0BACP;AAAA,wBACF,OAAO;AACL,wCAAc;AACd,+BAAK;AAAA,wBACP;AAAA,sBACF,OAAO;AACL,sCAAc;AACd,6BAAK;AAAA,sBACP;AAAA,oBACF,OAAO;AACL,oCAAc;AACd,2BAAK;AAAA,oBACP;AAAA,kBACF,OAAO;AACL,kCAAc;AACd,yBAAK;AAAA,kBACP;AAAA,gBACF,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK,iBAAiB;AAAA,MACxB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,oBAAoB;AAC3B,UAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAErE,WAAK;AACL,WAAK,oBAAoB;AACzB,UAAI,OAAO,YAAY;AACrB,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK,iBAAiB;AACtB,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,oBAAoB;AACzB,cAAI,OAAO,YAAY;AACrB,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,iBAAK,qBAAqB;AAC1B,gBAAI,OAAO,YAAY;AACrB,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,oBAAoB;AACzB,kBAAI,OAAO,YAAY;AACrB,qBAAK;AAAA,cACP;AACA,kBAAI,OAAO,YAAY;AACrB,qBAAK,iBAAiB;AACtB,oBAAI,OAAO,YAAY;AACrB,uBAAK;AAAA,gBACP;AACA,oBAAI,OAAO,YAAY;AACrB,uBAAK,oBAAoB;AACzB,sBAAI,OAAO,YAAY;AACrB,yBAAK;AAAA,kBACP;AACA,sBAAI,OAAO,YAAY;AACrB,yBAAK,kBAAkB;AACvB,wBAAI,OAAO,YAAY;AACrB,2BAAK,oBAAoB;AACzB,0BAAI,OAAO,YAAY;AACrB,6BAAK;AAAA,sBACP;AACA,0BAAI,OAAO,YAAY;AACrB,8BAAM,cAAc;AACpB,4BAAI,QAAQ,YAAY;AACtB,gCAAM;AAAA,wBACR;AACA,4BAAI,QAAQ,YAAY;AACtB,gCAAM,oBAAoB;AAC1B,8BAAI,QAAQ,YAAY;AACtB,kCAAM;AAAA,0BACR;AACA,8BAAI,QAAQ,YAAY;AACtB,kCAAM,iBAAiB;AACvB,gCAAI,QAAQ,YAAY;AACtB,oCAAM;AAAA,4BACR;AACA,gCAAI,QAAQ,YAAY;AACtB,oCAAM,oBAAoB;AAC1B,kCAAI,QAAQ,YAAY;AACtB,sCAAM;AAAA,8BACR;AACA,kCAAI,QAAQ,YAAY;AACtB,sCAAM,wBAAwB;AAC9B,oCAAI,QAAQ,YAAY;AACtB,wCAAM;AAAA,gCACR;AACA,oCAAI,QAAQ,YAAY;AACtB,wCAAM,kBAAkB;AACxB,sCAAI,QAAQ,YAAY;AACtB,0CAAM;AAAA,kCACR;AACA,sCAAI,QAAQ,YAAY;AACtB,mDAAe;AACf,yCAAK,OAAO,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,GAAG;AAC9C,yCAAK;AAAA,kCACP,OAAO;AACL,kDAAc;AACd,yCAAK;AAAA,kCACP;AAAA,gCACF,OAAO;AACL,gDAAc;AACd,uCAAK;AAAA,gCACP;AAAA,8BACF,OAAO;AACL,8CAAc;AACd,qCAAK;AAAA,8BACP;AAAA,4BACF,OAAO;AACL,4CAAc;AACd,mCAAK;AAAA,4BACP;AAAA,0BACF,OAAO;AACL,0CAAc;AACd,iCAAK;AAAA,0BACP;AAAA,wBACF,OAAO;AACL,wCAAc;AACd,+BAAK;AAAA,wBACP;AAAA,sBACF,OAAO;AACL,sCAAc;AACd,6BAAK;AAAA,sBACP;AAAA,oBACF,OAAO;AACL,oCAAc;AACd,2BAAK;AAAA,oBACP;AAAA,kBACF,OAAO;AACL,kCAAc;AACd,yBAAK;AAAA,kBACP;AAAA,gBACF,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK,iBAAiB;AAAA,MACxB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB;AAC1B,UAAI,IAAI;AAER,WAAK;AACL,UAAI,MAAM,OAAO,aAAa,CAAC,MAAM,QAAQ;AAC3C,aAAK;AACL,uBAAe;AAAA,MACjB,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,MAAM;AAAA,QAAG;AAAA,MACjD;AACA,UAAI,OAAO,YAAY;AACrB,uBAAe;AACf,aAAK,OAAO;AAAA,MACd;AACA,WAAK;AACL,UAAI,OAAO,YAAY;AACrB,aAAK;AACL,YAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,eAAK;AACL,yBAAe;AAAA,QACjB,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ;AAAA,QACf;AACA,aAAK;AACL,YAAI,OAAO,YAAY;AACrB,eAAK;AACL,cAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,iBAAK;AACL,2BAAe;AAAA,UACjB,OAAO;AACL,iBAAK;AACL,gBAAI,oBAAoB,GAAG;AAAE,uBAAS,OAAO;AAAA,YAAG;AAAA,UAClD;AACA,cAAI,OAAO,YAAY;AACrB,2BAAe;AACf,iBAAK,QAAQ;AAAA,UACf;AACA,eAAK;AACL,cAAI,OAAO,YAAY;AACrB,iBAAK;AACL,gBAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,mBAAK;AACL,6BAAe;AAAA,YACjB,OAAO;AACL,mBAAK;AACL,kBAAI,oBAAoB,GAAG;AAAE,yBAAS,OAAO;AAAA,cAAG;AAAA,YAClD;AACA,gBAAI,OAAO,YAAY;AACrB,6BAAe;AACf,mBAAK,QAAQ;AAAA,YACf;AACA,iBAAK;AACL,gBAAI,OAAO,YAAY;AACrB,mBAAK;AACL,kBAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,qBAAK;AACL,+BAAe;AAAA,cACjB,OAAO;AACL,qBAAK;AACL,oBAAI,oBAAoB,GAAG;AAAE,2BAAS,OAAO;AAAA,gBAAG;AAAA,cAClD;AACA,kBAAI,OAAO,YAAY;AACrB,+BAAe;AACf,qBAAK,QAAQ;AAAA,cACf;AACA,mBAAK;AACL,kBAAI,OAAO,YAAY;AACrB,qBAAK;AACL,oBAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,uBAAK;AACL;AAAA,gBACF,OAAO;AACL,uBAAK;AACL,sBAAI,oBAAoB,GAAG;AAAE,6BAAS,OAAO;AAAA,kBAAG;AAAA,gBAClD;AACA,oBAAI,OAAO,YAAY;AACrB,iCAAe;AACf,uBAAK,QAAQ;AAAA,gBACf;AACA,qBAAK;AAAA,cACP;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB;AAC1B,UAAI,IAAI,IAAI,IAAI;AAEhB,WAAK;AACL,WAAK,YAAY;AACjB,UAAI,OAAO,YAAY;AACrB,aAAK,CAAC;AACN,YAAI,QAAQ,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC3C,eAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,QACF,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA,eAAO,OAAO,YAAY;AACxB,aAAG,KAAK,EAAE;AACV,cAAI,QAAQ,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC3C,iBAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,UACF,OAAO;AACL,iBAAK;AACL,gBAAI,oBAAoB,GAAG;AAAE,uBAAS,OAAO;AAAA,YAAG;AAAA,UAClD;AAAA,QACF;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,YAAY;AACjB,cAAI,OAAO,YAAY;AACrB,2BAAe;AACf,iBAAK,QAAQ,EAAE;AACf,iBAAK;AAAA,UACP,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc;AACrB,UAAI;AAEJ,UAAI,MAAM,WAAW,WAAW,MAAM,KAAK;AACzC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc;AACrB,UAAI;AAEJ,UAAI,MAAM,WAAW,WAAW,MAAM,KAAK;AACzC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,0BAA0B;AACjC,UAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAEhC,WAAK;AACL,WAAK,YAAY;AACjB,UAAI,OAAO,YAAY;AACrB,aAAK,kBAAkB;AACvB,YAAI,OAAO,YAAY;AACrB,eAAK,YAAY;AACjB,cAAI,OAAO,YAAY;AACrB,iBAAK,oBAAoB;AACzB,gBAAI,OAAO,YAAY;AACrB,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,wBAAwB;AAC7B,kBAAI,OAAO,YAAY;AACrB,qBAAK;AAAA,cACP;AACA,kBAAI,OAAO,YAAY;AACrB,qBAAK,oBAAoB;AACzB,oBAAI,OAAO,YAAY;AACrB,uBAAK;AAAA,gBACP;AACA,oBAAI,OAAO,YAAY;AACrB,uBAAK,qBAAqB;AAC1B,sBAAI,OAAO,YAAY;AACrB,yBAAK;AAAA,kBACP;AACA,sBAAI,OAAO,YAAY;AACrB,mCAAe;AACf,yBAAK,QAAQ,IAAI,IAAI,EAAE;AACvB,yBAAK;AAAA,kBACP,OAAO;AACL,kCAAc;AACd,yBAAK;AAAA,kBACP;AAAA,gBACF,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,0BAA0B;AACjC,UAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAExB,WAAK;AACL,WAAK,YAAY;AACjB,UAAI,OAAO,YAAY;AACrB,aAAK,uBAAuB;AAC5B,YAAI,OAAO,YAAY;AACrB,eAAK,YAAY;AACjB,cAAI,OAAO,YAAY;AACrB,iBAAK,oBAAoB;AACzB,gBAAI,OAAO,YAAY;AACrB,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,wBAAwB;AAC7B,kBAAI,OAAO,YAAY;AACrB,qBAAK;AAAA,cACP;AACA,kBAAI,OAAO,YAAY;AACrB,+BAAe;AACf,qBAAK,QAAQ,IAAI,EAAE;AACnB,qBAAK;AAAA,cACP,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc;AACrB,UAAI;AAEJ,UAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc;AACrB,UAAI;AAEJ,UAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,sBAAsB;AAC7B,UAAI,IAAI,IAAI;AAEZ,WAAK;AACL,WAAK,iBAAiB;AACtB,UAAI,OAAO,YAAY;AACrB,YAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,eAAK;AACL;AAAA,QACF,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ,EAAE;AACf,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,mBAAmB;AAC1B,UAAI,IAAI,IAAI;AAEZ;AACA,WAAK;AACL,WAAK,CAAC;AACN,UAAI,QAAQ,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC3C,aAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AACA,UAAI,OAAO,YAAY;AACrB,eAAO,OAAO,YAAY;AACxB,aAAG,KAAK,EAAE;AACV,cAAI,QAAQ,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC3C,iBAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,UACF,OAAO;AACL,iBAAK;AACL,gBAAI,oBAAoB,GAAG;AAAE,uBAAS,OAAO;AAAA,YAAG;AAAA,UAClD;AAAA,QACF;AAAA,MACF,OAAO;AACL,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,uBAAe;AACf,aAAK,QAAQ,EAAE;AAAA,MACjB;AACA,WAAK;AACL;AACA,UAAI,OAAO,YAAY;AACrB,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,sBAAsB;AAC7B,UAAI,IAAI,IAAI;AAEZ,WAAK;AACL,WAAK,CAAC;AACN,UAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AACA,UAAI,OAAO,YAAY;AACrB,eAAO,OAAO,YAAY;AACxB,aAAG,KAAK,EAAE;AACV,cAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,iBAAK;AACL;AAAA,UACF,OAAO;AACL,iBAAK;AACL,gBAAI,oBAAoB,GAAG;AAAE,uBAAS,OAAO;AAAA,YAAG;AAAA,UAClD;AAAA,QACF;AAAA,MACF,OAAO;AACL,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,uBAAe;AACf,aAAK,QAAQ;AAAA,MACf;AACA,WAAK;AAEL,aAAO;AAAA,IACT;AAEA,aAAS,oBAAoB;AAC3B,UAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAEpC,WAAK;AACL,WAAK,gBAAgB;AACrB,UAAI,OAAO,YAAY;AACrB,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK;AACL;AACA,aAAK,mBAAmB;AACxB;AACA,YAAI,OAAO,YAAY;AACrB,wBAAc;AACd,eAAK;AAAA,QACP,OAAO;AACL,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,uBAAuB;AAC5B,cAAI,OAAO,YAAY;AACrB,iBAAK,gBAAgB;AACrB,gBAAI,OAAO,YAAY;AACrB,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,gBAAgB;AACrB,kBAAI,OAAO,YAAY;AACrB,qBAAK,aAAa;AAClB,oBAAI,OAAO,YAAY;AACrB,uBAAK,mBAAmB;AACxB,sBAAI,OAAO,YAAY;AACrB,yBAAK;AAAA,kBACP;AACA,sBAAI,OAAO,YAAY;AACrB,yBAAK,eAAe;AACpB,wBAAI,OAAO,YAAY;AACrB,2BAAK;AAAA,oBACP;AACA,wBAAI,OAAO,YAAY;AACrB,qCAAe;AACf,2BAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACvC,2BAAK;AAAA,oBACP,OAAO;AACL,oCAAc;AACd,2BAAK;AAAA,oBACP;AAAA,kBACF,OAAO;AACL,kCAAc;AACd,yBAAK;AAAA,kBACP;AAAA,gBACF,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK;AACL,aAAK,gBAAgB;AACrB,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,gBAAgB;AACrB,cAAI,OAAO,YAAY;AACrB,iBAAK,aAAa;AAClB,gBAAI,OAAO,YAAY;AACrB,mBAAK,sBAAsB;AAC3B,kBAAI,OAAO,YAAY;AACrB,qBAAK;AAAA,cACP;AACA,kBAAI,OAAO,YAAY;AACrB,qBAAK,gBAAgB;AACrB,oBAAI,OAAO,YAAY;AACrB,uBAAK,aAAa;AAClB,sBAAI,OAAO,YAAY;AACrB,yBAAK,mBAAmB;AACxB,wBAAI,OAAO,YAAY;AACrB,2BAAK;AAAA,oBACP;AACA,wBAAI,OAAO,YAAY;AACrB,2BAAK,eAAe;AACpB,0BAAI,OAAO,YAAY;AACrB,6BAAK;AAAA,sBACP;AACA,0BAAI,OAAO,YAAY;AACrB,uCAAe;AACf,6BAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC3C,6BAAK;AAAA,sBACP,OAAO;AACL,sCAAc;AACd,6BAAK;AAAA,sBACP;AAAA,oBACF,OAAO;AACL,oCAAc;AACd,2BAAK;AAAA,oBACP;AAAA,kBACF,OAAO;AACL,kCAAc;AACd,yBAAK;AAAA,kBACP;AAAA,gBACF,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK;AACL,eAAK,gBAAgB;AACrB,cAAI,OAAO,YAAY;AACrB,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,iBAAK,gBAAgB;AACrB,gBAAI,OAAO,YAAY;AACrB,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,gBAAgB;AACrB,kBAAI,OAAO,YAAY;AACrB,qBAAK,aAAa;AAClB,oBAAI,OAAO,YAAY;AACrB,uBAAK,mBAAmB;AACxB,sBAAI,OAAO,YAAY;AACrB,yBAAK;AAAA,kBACP;AACA,sBAAI,OAAO,YAAY;AACrB,yBAAK,eAAe;AACpB,wBAAI,OAAO,YAAY;AACrB,2BAAK;AAAA,oBACP;AACA,wBAAI,OAAO,YAAY;AACrB,qCAAe;AACf,2BAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACnC,2BAAK;AAAA,oBACP,OAAO;AACL,oCAAc;AACd,2BAAK;AAAA,oBACP;AAAA,kBACF,OAAO;AACL,kCAAc;AACd,yBAAK;AAAA,kBACP;AAAA,gBACF,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,iBAAK;AACL,gBAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,mBAAK;AACL,6BAAe;AAAA,YACjB,OAAO;AACL,mBAAK;AACL,kBAAI,oBAAoB,GAAG;AAAE,yBAAS,OAAO;AAAA,cAAG;AAAA,YAClD;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK,eAAe;AACpB,kBAAI,OAAO,YAAY;AACrB,qBAAK;AAAA,cACP;AACA,kBAAI,OAAO,YAAY;AACrB,+BAAe;AACf,qBAAK,QAAQ,EAAE;AACf,qBAAK;AAAA,cACP,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AACA,gBAAI,OAAO,YAAY;AACrB,mBAAK;AACL,kBAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,qBAAK;AACL,+BAAe;AAAA,cACjB,OAAO;AACL,qBAAK;AACL,oBAAI,oBAAoB,GAAG;AAAE,2BAAS,OAAO;AAAA,gBAAG;AAAA,cAClD;AACA,kBAAI,OAAO,YAAY;AACrB,qBAAK,eAAe;AACpB,oBAAI,OAAO,YAAY;AACrB,uBAAK;AAAA,gBACP;AACA,oBAAI,OAAO,YAAY;AACrB,iCAAe;AACf,uBAAK,QAAQ,EAAE;AACf,uBAAK;AAAA,gBACP,OAAO;AACL,gCAAc;AACd,uBAAK;AAAA,gBACP;AAAA,cACF,OAAO;AACL,8BAAc;AACd,qBAAK;AAAA,cACP;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB;AACxB,UAAI,IAAI,IAAI,IAAI;AAEhB,WAAK;AACL,WAAK;AACL,WAAK;AACL;AACA,UAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,aAAK;AACL,uBAAe;AAAA,MACjB,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AACA;AACA,UAAI,OAAO,YAAY;AACrB,aAAK;AAAA,MACP,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,YAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,eAAK;AACL;AAAA,QACF,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,CAAC,IAAI,EAAE;AACZ,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,uBAAe;AACf,aAAK,QAAQ,EAAE;AAAA,MACjB;AACA,WAAK;AACL,UAAI,OAAO,YAAY;AACrB,aAAK;AACL,aAAK;AACL,aAAK;AACL;AACA,YAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,eAAK;AACL,yBAAe;AAAA,QACjB,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA;AACA,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,cAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,iBAAK;AACL;AAAA,UACF,OAAO;AACL,iBAAK;AACL,gBAAI,oBAAoB,GAAG;AAAE,uBAAS,OAAO;AAAA,YAAG;AAAA,UAClD;AACA,cAAI,OAAO,YAAY;AACrB,iBAAK,CAAC,IAAI,EAAE;AACZ,iBAAK;AAAA,UACP,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ,EAAE;AAAA,QACjB;AACA,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,qBAAqB;AAC5B,UAAI,IAAI,IAAI;AAEZ,WAAK;AACL,UAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AACA,UAAI,OAAO,YAAY;AACrB,aAAK,gBAAgB;AACrB,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ,EAAE;AACf,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB;AACvB,UAAI,IAAI,IAAI,IAAI;AAEhB,WAAK;AACL,WAAK,aAAa;AAClB,UAAI,OAAO,YAAY;AACrB,aAAK,oBAAoB;AACzB,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,cAAc;AACnB,cAAI,OAAO,YAAY;AACrB,iBAAK;AAAA,UACP;AACA,cAAI,OAAO,YAAY;AACrB,2BAAe;AACf,iBAAK,QAAQ,IAAI,EAAE;AACnB,iBAAK;AAAA,UACP,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,eAAe;AACtB,UAAI,IAAI,IAAI;AAEZ,WAAK;AACL,UAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,OAAO;AAAA,QAAG;AAAA,MAClD;AACA,UAAI,OAAO,YAAY;AACrB,aAAK,iBAAiB;AACtB,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ,EAAE;AACf,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AACA,UAAI,OAAO,YAAY;AACrB,aAAK;AACL,YAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,eAAK;AACL,yBAAe;AAAA,QACjB,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ;AAAA,QACf;AACA,aAAK;AACL,YAAI,OAAO,YAAY;AACrB,eAAK;AACL,cAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,iBAAK;AACL,2BAAe;AAAA,UACjB,OAAO;AACL,iBAAK;AACL,gBAAI,oBAAoB,GAAG;AAAE,uBAAS,OAAO;AAAA,YAAG;AAAA,UAClD;AACA,cAAI,OAAO,YAAY;AACrB,2BAAe;AACf,iBAAK,QAAQ;AAAA,UACf;AACA,eAAK;AACL,cAAI,OAAO,YAAY;AACrB,iBAAK;AACL,gBAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,mBAAK;AACL,6BAAe;AAAA,YACjB,OAAO;AACL,mBAAK;AACL,kBAAI,oBAAoB,GAAG;AAAE,yBAAS,OAAO;AAAA,cAAG;AAAA,YAClD;AACA,gBAAI,OAAO,YAAY;AACrB,6BAAe;AACf,mBAAK,QAAQ;AAAA,YACf;AACA,iBAAK;AACL,gBAAI,OAAO,YAAY;AACrB,mBAAK;AACL,kBAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,qBAAK;AACL,+BAAe;AAAA,cACjB,OAAO;AACL,qBAAK;AACL,oBAAI,oBAAoB,GAAG;AAAE,2BAAS,OAAO;AAAA,gBAAG;AAAA,cAClD;AACA,kBAAI,OAAO,YAAY;AACrB,+BAAe;AACf,qBAAK,QAAQ;AAAA,cACf;AACA,mBAAK;AACL,kBAAI,OAAO,YAAY;AACrB,qBAAK;AACL,oBAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,uBAAK;AACL;AAAA,gBACF,OAAO;AACL,uBAAK;AACL,sBAAI,oBAAoB,GAAG;AAAE,6BAAS,OAAO;AAAA,kBAAG;AAAA,gBAClD;AACA,oBAAI,OAAO,YAAY;AACrB,iCAAe;AACf,uBAAK,QAAQ;AAAA,gBACf;AACA,qBAAK;AACL,oBAAI,OAAO,YAAY;AACrB,uBAAK;AACL,sBAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,yBAAK;AACL;AAAA,kBACF,OAAO;AACL,yBAAK;AACL,wBAAI,oBAAoB,GAAG;AAAE,+BAAS,OAAO;AAAA,oBAAG;AAAA,kBAClD;AACA,sBAAI,OAAO,YAAY;AACrB,mCAAe;AACf,yBAAK,QAAQ;AAAA,kBACf;AACA,uBAAK;AACL,sBAAI,OAAO,YAAY;AACrB,yBAAK;AACL,wBAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,2BAAK;AACL;AAAA,oBACF,OAAO;AACL,2BAAK;AACL,0BAAI,oBAAoB,GAAG;AAAE,iCAAS,OAAO;AAAA,sBAAG;AAAA,oBAClD;AACA,wBAAI,OAAO,YAAY;AACrB,qCAAe;AACf,2BAAK,QAAQ;AAAA,oBACf;AACA,yBAAK;AACL,wBAAI,OAAO,YAAY;AACrB,2BAAK;AACL,0BAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,6BAAK;AACL;AAAA,sBACF,OAAO;AACL,6BAAK;AACL,4BAAI,oBAAoB,GAAG;AAAE,mCAAS,OAAO;AAAA,wBAAG;AAAA,sBAClD;AACA,0BAAI,OAAO,YAAY;AACrB,uCAAe;AACf,6BAAK,QAAQ;AAAA,sBACf;AACA,2BAAK;AACL,0BAAI,OAAO,YAAY;AACrB,6BAAK;AACL,4BAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,+BAAK;AACL;AAAA,wBACF,OAAO;AACL,+BAAK;AACL,8BAAI,oBAAoB,GAAG;AAAE,qCAAS,OAAO;AAAA,0BAAG;AAAA,wBAClD;AACA,4BAAI,OAAO,YAAY;AACrB,yCAAe;AACf,+BAAK,QAAQ;AAAA,wBACf;AACA,6BAAK;AACL,4BAAI,OAAO,YAAY;AACrB,+BAAK;AACL,8BAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,iCAAK;AACL;AAAA,0BACF,OAAO;AACL,iCAAK;AACL,gCAAI,oBAAoB,GAAG;AAAE,uCAAS,OAAO;AAAA,4BAAG;AAAA,0BAClD;AACA,8BAAI,OAAO,YAAY;AACrB,2CAAe;AACf,iCAAK,QAAQ;AAAA,0BACf;AACA,+BAAK;AACL,8BAAI,OAAO,YAAY;AACrB,iCAAK;AACL,gCAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,mCAAK;AACL;AAAA,4BACF,OAAO;AACL,mCAAK;AACL,kCAAI,oBAAoB,GAAG;AAAE,yCAAS,QAAQ;AAAA,8BAAG;AAAA,4BACnD;AACA,gCAAI,OAAO,YAAY;AACrB,6CAAe;AACf,mCAAK,SAAS;AAAA,4BAChB;AACA,iCAAK;AACL,gCAAI,OAAO,YAAY;AACrB,mCAAK;AACL,kCAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,qCAAK;AACL;AAAA,8BACF,OAAO;AACL,qCAAK;AACL,oCAAI,oBAAoB,GAAG;AAAE,2CAAS,OAAO;AAAA,gCAAG;AAAA,8BAClD;AACA,kCAAI,OAAO,YAAY;AACrB,+CAAe;AACf,qCAAK,SAAS;AAAA,8BAChB;AACA,mCAAK;AACL,kCAAI,OAAO,YAAY;AACrB,qCAAK;AACL,oCAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,uCAAK;AACL;AAAA,gCACF,OAAO;AACL,uCAAK;AACL,sCAAI,oBAAoB,GAAG;AAAE,6CAAS,QAAQ;AAAA,kCAAG;AAAA,gCACnD;AACA,oCAAI,OAAO,YAAY;AACrB,iDAAe;AACf,uCAAK,SAAS;AAAA,gCAChB;AACA,qCAAK;AACL,oCAAI,OAAO,YAAY;AACrB,uCAAK;AACL,sCAAI,MAAM,WAAW,WAAW,MAAM,OAAO;AAC3C,yCAAK;AACL;AAAA,kCACF,OAAO;AACL,yCAAK;AACL,wCAAI,oBAAoB,GAAG;AAAE,+CAAS,QAAQ;AAAA,oCAAG;AAAA,kCACnD;AACA,sCAAI,OAAO,YAAY;AACrB,mDAAe;AACf,yCAAK,SAAS;AAAA,kCAChB;AACA,uCAAK;AACL,sCAAI,OAAO,YAAY;AACrB,yCAAK;AACL,wCAAI,MAAM,WAAW,WAAW,MAAM,OAAO;AAC3C,2CAAK;AACL;AAAA,oCACF,OAAO;AACL,2CAAK;AACL,0CAAI,oBAAoB,GAAG;AAAE,iDAAS,QAAQ;AAAA,sCAAG;AAAA,oCACnD;AACA,wCAAI,OAAO,YAAY;AACrB,qDAAe;AACf,2CAAK,SAAS;AAAA,oCAChB;AACA,yCAAK;AACL,wCAAI,OAAO,YAAY;AACrB,2CAAK;AACL,0CAAI,MAAM,WAAW,WAAW,MAAM,KAAK;AACzC,6CAAK;AACL;AAAA,sCACF,OAAO;AACL,6CAAK;AACL,4CAAI,oBAAoB,GAAG;AAAE,mDAAS,QAAQ;AAAA,wCAAG;AAAA,sCACnD;AACA,0CAAI,OAAO,YAAY;AACrB,uDAAe;AACf,6CAAK,SAAS;AAAA,sCAChB;AACA,2CAAK;AACL,0CAAI,OAAO,YAAY;AACrB,6CAAK;AACL,4CAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,+CAAK;AACL;AAAA,wCACF,OAAO;AACL,+CAAK;AACL,8CAAI,oBAAoB,GAAG;AAAE,qDAAS,QAAQ;AAAA,0CAAG;AAAA,wCACnD;AACA,4CAAI,OAAO,YAAY;AACrB,yDAAe;AACf,+CAAK,SAAS;AAAA,wCAChB;AACA,6CAAK;AACL,4CAAI,OAAO,YAAY;AACrB,+CAAK;AACL,8CAAI,MAAM,OAAO,aAAa,CAAC,MAAM,SAAS;AAC5C,iDAAK;AACL,2DAAe;AAAA,0CACjB,OAAO;AACL,iDAAK;AACL,gDAAI,oBAAoB,GAAG;AAAE,uDAAS,OAAO;AAAA,4CAAG;AAAA,0CAClD;AACA,8CAAI,OAAO,YAAY;AACrB,2DAAe;AACf,iDAAK,SAAS;AAAA,0CAChB;AACA,+CAAK;AACL,8CAAI,OAAO,YAAY;AACrB,iDAAK;AACL,gDAAI,MAAM,OAAO,aAAa,CAAC,MAAM,UAAU;AAC7C,mDAAK;AACL,6DAAe;AAAA,4CACjB,OAAO;AACL,mDAAK;AACL,kDAAI,oBAAoB,GAAG;AAAE,yDAAS,QAAQ;AAAA,8CAAG;AAAA,4CACnD;AACA,gDAAI,OAAO,YAAY;AACrB,6DAAe;AACf,mDAAK,SAAS;AAAA,4CAChB;AACA,iDAAK;AACL,gDAAI,OAAO,YAAY;AACrB,mDAAK;AACL,kDAAI,MAAM,WAAW,WAAW,MAAM,OAAO;AAC3C,qDAAK;AACL;AAAA,8CACF,OAAO;AACL,qDAAK;AACL,oDAAI,oBAAoB,GAAG;AAAE,2DAAS,QAAQ;AAAA,gDAAG;AAAA,8CACnD;AACA,kDAAI,OAAO,YAAY;AACrB,+DAAe;AACf,qDAAK,SAAS;AAAA,8CAChB;AACA,mDAAK;AACL,kDAAI,OAAO,YAAY;AACrB,qDAAK;AACL,oDAAI,MAAM,WAAW,WAAW,MAAM,OAAO;AAC3C,uDAAK;AACL;AAAA,gDACF,OAAO;AACL,uDAAK;AACL,sDAAI,oBAAoB,GAAG;AAAE,6DAAS,QAAQ;AAAA,kDAAG;AAAA,gDACnD;AACA,oDAAI,OAAO,YAAY;AACrB,iEAAe;AACf,uDAAK,SAAS;AAAA,gDAChB;AACA,qDAAK;AACL,oDAAI,OAAO,YAAY;AACrB,uDAAK;AACL,sDAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,yDAAK;AACL;AAAA,kDACF,OAAO;AACL,yDAAK;AACL,wDAAI,oBAAoB,GAAG;AAAE,+DAAS,QAAQ;AAAA,oDAAG;AAAA,kDACnD;AACA,sDAAI,OAAO,YAAY;AACrB,mEAAe;AACf,yDAAK,SAAS;AAAA,kDAChB;AACA,uDAAK;AACL,sDAAI,OAAO,YAAY;AACrB,yDAAK;AACL,wDAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,2DAAK;AACL;AAAA,oDACF,OAAO;AACL,2DAAK;AACL,0DAAI,oBAAoB,GAAG;AAAE,iEAAS,QAAQ;AAAA,sDAAG;AAAA,oDACnD;AACA,wDAAI,OAAO,YAAY;AACrB,qEAAe;AACf,2DAAK,SAAS;AAAA,oDAChB;AACA,yDAAK;AACL,wDAAI,OAAO,YAAY;AACrB,2DAAK;AACL,0DAAI,MAAM,WAAW,WAAW,MAAM,MAAM;AAC1C,6DAAK;AACL;AAAA,sDACF,OAAO;AACL,6DAAK;AACL,4DAAI,oBAAoB,GAAG;AAAE,mEAAS,QAAQ;AAAA,wDAAG;AAAA,sDACnD;AACA,0DAAI,OAAO,YAAY;AACrB,uEAAe;AACf,6DAAK,SAAS;AAAA,sDAChB;AACA,2DAAK;AACL,0DAAI,OAAO,YAAY;AACrB,6DAAK;AACL,4DAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,+DAAK;AACL;AAAA,wDACF,OAAO;AACL,+DAAK;AACL,8DAAI,oBAAoB,GAAG;AAAE,qEAAS,QAAQ;AAAA,0DAAG;AAAA,wDACnD;AACA,4DAAI,OAAO,YAAY;AACrB,yEAAe;AACf,+DAAK,SAAS;AAAA,wDAChB;AACA,6DAAK;AAAA,sDACP;AAAA,oDACF;AAAA,kDACF;AAAA,gDACF;AAAA,8CACF;AAAA,4CACF;AAAA,0CACF;AAAA,wCACF;AAAA,sCACF;AAAA,oCACF;AAAA,kCACF;AAAA,gCACF;AAAA,8BACF;AAAA,4BACF;AAAA,0BACF;AAAA,wBACF;AAAA,sBACF;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,yBAAyB;AAChC,UAAI;AAEJ,WAAK,gBAAgB;AACrB,UAAI,OAAO,YAAY;AACrB,aAAK,aAAa;AAAA,MACpB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,qBAAqB;AAC5B,UAAI,IAAI,IAAI,IAAI,IAAI;AAEpB,WAAK;AACL,WAAK,uBAAuB;AAC5B,UAAI,OAAO,YAAY;AACrB,aAAK,gBAAgB;AACrB,YAAI,OAAO,YAAY;AACrB,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,eAAK,gBAAgB;AACrB,cAAI,OAAO,YAAY;AACrB,iBAAK,aAAa;AAClB,gBAAI,OAAO,YAAY;AACrB,mBAAK,CAAC,IAAI,IAAI,IAAI,EAAE;AACpB,mBAAK;AAAA,YACP,OAAO;AACL,4BAAc;AACd,mBAAK;AAAA,YACP;AAAA,UACF,OAAO;AACL,0BAAc;AACd,iBAAK;AAAA,UACP;AAAA,QACF,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,uBAAuB;AAC9B,UAAI,IAAI,IAAI,IAAI;AAEhB,WAAK;AACL,WAAK,iBAAiB;AACtB,UAAI,OAAO,YAAY;AACrB,aAAK,CAAC;AACN,YAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,eAAK;AACL;AAAA,QACF,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,OAAO;AAAA,UAAG;AAAA,QAClD;AACA,YAAI,OAAO,YAAY;AACrB,iBAAO,OAAO,YAAY;AACxB,eAAG,KAAK,EAAE;AACV,gBAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,mBAAK;AACL;AAAA,YACF,OAAO;AACL,mBAAK;AACL,kBAAI,oBAAoB,GAAG;AAAE,yBAAS,OAAO;AAAA,cAAG;AAAA,YAClD;AAAA,UACF;AAAA,QACF,OAAO;AACL,eAAK;AAAA,QACP;AACA,YAAI,OAAO,YAAY;AACrB,yBAAe;AACf,eAAK,QAAQ,EAAE;AACf,eAAK;AAAA,QACP,OAAO;AACL,wBAAc;AACd,eAAK;AAAA,QACP;AAAA,MACF,OAAO;AACL,sBAAc;AACd,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB;AACzB,UAAI;AAEJ,UAAI,SAAS,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC5C,aAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,QAAQ;AAAA,QAAG;AAAA,MACnD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB;AACzB,UAAI;AAEJ,UAAI,SAAS,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC5C,aAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,QAAQ;AAAA,QAAG;AAAA,MACnD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,eAAe;AACtB,UAAI;AAEJ,UAAI,SAAS,KAAK,MAAM,OAAO,WAAW,CAAC,GAAG;AAC5C,aAAK,MAAM,OAAO,WAAW;AAC7B;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,QAAQ;AAAA,QAAG;AAAA,MACnD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB;AACzB,UAAI;AAEJ,UAAI,MAAM,WAAW,WAAW,MAAM,KAAK;AACzC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,QAAQ;AAAA,QAAG;AAAA,MACnD;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,wBAAwB;AAC/B,UAAI;AAEJ,UAAI,MAAM,WAAW,WAAW,MAAM,KAAK;AACzC,aAAK;AACL;AAAA,MACF,OAAO;AACL,aAAK;AACL,YAAI,oBAAoB,GAAG;AAAE,mBAAS,QAAQ;AAAA,QAAG;AAAA,MACnD;AACA,UAAI,OAAO,YAAY;AACrB,YAAI,MAAM,WAAW,WAAW,MAAM,IAAI;AACxC,eAAK;AACL;AAAA,QACF,OAAO;AACL,eAAK;AACL,cAAI,oBAAoB,GAAG;AAAE,qBAAS,QAAQ;AAAA,UAAG;AAAA,QACnD;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGI,aAAS,YAAY,GAAG;AACpB,aAAO,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE;AAAA,IAClC;AAGJ,iBAAa,sBAAsB;AAEnC,QAAI,eAAe,cAAc,gBAAgB,MAAM,QAAQ;AAC7D,aAAO;AAAA,IACT,OAAO;AACL,UAAI,eAAe,cAAc,cAAc,MAAM,QAAQ;AAC3D,iBAAS,mBAAmB,CAAC;AAAA,MAC/B;AAEA,YAAM;AAAA,QACJ;AAAA,QACA,iBAAiB,MAAM,SAAS,MAAM,OAAO,cAAc,IAAI;AAAA,QAC/D,iBAAiB,MAAM,SACnB,oBAAoB,gBAAgB,iBAAiB,CAAC,IACtD,oBAAoB,gBAAgB,cAAc;AAAA,MACxD;AAAA,IACF;AAAA,EACF;AAOO,MAAM,YAAN,MAAgB;AAAA,IACrB,OAAO,MAAM,SAAS,SAAS;AAC7B,aAAO,UAAU,SAAS,OAAO;AAAA,IACnC;AAAA,EACF;;;ACjrEA,MAAM,UAAU;AAEhB,MAAM,mBACF;AAEJ,MAAM,sBAAsB,CAAC,OAAO,OAAO,WAAW,GAAG;AAEzD,MAAM,eAAe;AAAA,IACjB,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE;AAAA,IAClB,GAAG,CAAC,KAAK,KAAK,KAAK,GAAG;AAAA,EAC1B;AAEA,MAAM,gBAAgB;AAAA,IAClB,GAAG,CAAC,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,EAAE;AAAA,IACtC,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;AAAA,IACpB,GAAG,CAAC,KAAK,GAAG,IAAI,EAAE;AAAA,IAClB,GAAG,CAAC,KAAK,KAAK,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE;AAAA,IACpC,GAAG,CAAC,KAAK,KAAK,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE;AAAA,EACxC;AAGA,MAAM,UAAU;AAAA,IACZ;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAChD;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAChD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,IAAI;AAAA,IAAG;AAAA,IAC/C;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAE;AAAA,EAChD;AAGA,MAAM,OAAO;AAAA,IACT;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAC5D;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAE;AAAA,IAAM;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAC3D;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAE;AAAA,IAAM;AAAA,IAAI;AAAA,IAAI;AAAA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C/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAAqB;AAAA,IAC/D;AAAA,EACJ;AAKO,MAAM,eAAN,MAAmB;AAAA,IAEtB,cAAc;AAEV,WAAK,WAAW;AAChB,WAAK,iBAAiB;AACtB,WAAK,oBAAoB;AACzB,WAAK,cAAc;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,OAAO,IAAI,UAAU;AACjB,UAAI,MAAM,GAAG,SAAS;AACtB,aAAO,IAAI,SAAS,UAAU;AAC1B,cAAM,MAAM;AAAA,MAChB;AACA,aAAO,OAAO;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA,IAKA,gBAAgB,MAAM,KAAK;AACvB,aAAO,OAAO,SAAS,GAAG;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB,KAAK;AAClB,UAAI,CAAC,OAAO,QAAQ,KAAK;AACrB;AAAA,MACJ;AACA,UAAI,IAAI,WAAW,GAAG;AAClB,aAAK,WAAW;AAChB;AAAA,MACJ;AACA,YAAM,MAAM,IAAI,WAAW,CAAC,IAAI;AAChC,YAAM,MAAM,IAAI,WAAW,CAAC,IAAI;AAChC,UAAK,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,GAAI;AAClD,aAAK,WAAW;AAChB;AAAA,MACJ;AACA,WAAK,oBAAoB;AACzB,WAAK,iBAAiB;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,mBAAmB,KAAK,KAAK;AACzB,UAAI,QAAQ,KAAK;AACb,eAAO,KAAK,gBAAgB,KAAK,GAAG;AAAA,MACxC,WAAW,QAAQ,KAAK;AACpB,aAAK,WAAW;AAAA,MACpB;AACA,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY,MAAM,KAAK;AACnB,UAAI,QAAQ,KAAK;AAIb,eAAO;AAAA,MACX;AACA,UAAI,IAAI,OAAO,GAAG,MAAM,IAAI;AACxB,eAAO,KAAK,gBAAgB,MAAM,GAAG;AAAA,MACzC;AACA,UAAI,IAAI,OAAO,GAAG,MAAM,IAAI;AACxB,eAAO,KAAK,gBAAgB,MAAM,GAAG;AAAA,MACzC;AACA,UAAI,IAAI,OAAO,GAAG,MAAM,IAAI;AACxB,eAAO,KAAK,gBAAgB,MAAM,GAAG;AAAA,MACzC;AACA,UAAI,IAAI,OAAO,GAAG,MAAM,IAAI;AACxB,eAAO,KAAK,gBAAgB,MAAM,GAAG;AAAA,MACzC;AACA,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,YAAY,MAAM,KAAK;AACnB,YAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,UAAI,KAAK,WAAW,GAAG;AACnB,aAAK,WAAW;AAChB,eAAO;AAAA,MACX;AACA,eAASC,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,YAAI,MAAM;AACV,cAAM,MAAM,IAAIA;AAChB,iBAAS,IAAI,GAAG,IAAI,KAAKA,EAAC,EAAE,QAAQ,KAAK;AACrC,kBAAQ,KAAKA,EAAC,EAAE,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA,YAIhB,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,IAAI,MAAM,GAAG;AAC/C,kBAAK,KAAK,mBAAmB,KAAO,QAAQ,KAAO,KAAK,oBAAoB,KAAO,QAAQ,KAAK,oBAAoB;AAChH,qBAAK,cAAc;AACvB,kBAAK,KAAK,mBAAmB,KAAO,QAAQ,KAAO,KAAK,oBAAoB,KAAO,QAAQ,KAAK,oBAAoB;AAChH,qBAAK,cAAc;AACvB;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,MAAM,GAAG;AACpD,kBAAK,KAAK,mBAAmB,KAAO,QAAQ,KAAO,KAAK,oBAAoB,KAAO,QAAQ,KAAK,oBAAoB;AAChH,qBAAK,cAAc;AACvB,kBAAK,KAAK,mBAAmB,KAAO,QAAQ,KAAO,KAAK,oBAAoB,KAAO,QAAQ,KAAK,oBAAoB;AAChH,qBAAK,cAAc;AACvB;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACxD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,KAAK,IAAI,MAAM,GAAG;AACzD;AACA;AAAA,YACJ,KAAK;AACD,qBAAO,KAAK,gBAAgB,MAAM,KAAK,KAAK,IAAI,MAAM,GAAG;AACzD;AACA;AAAA,YACJ,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACD,oBAAM,IAAI,KAAKA,EAAC,EAAE,WAAW,CAAC,IAAI;AAClC,qBAAO;AACP;AAAA,YACJ;AACI,mBAAK,WAAW;AAChB,qBAAO;AAAA,UACf;AAAA,QACJ;AACA,YAAI,QAAQ;AACR,eAAK,WAAW;AAAA,MACxB;AACA,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB,WAAW;AACxB,WAAK,iBAAiB;AACtB,WAAK,oBAAoB;AACzB,WAAK,cAAc;AAEnB,UAAI,OAAO;AACX,YAAM,MAAM,UAAU,KAAK,EAAE,MAAM,GAAG;AACtC,UAAI,IAAI,WAAW,GAAG;AAClB,eAAO;AAAA,MACX;AACA,WAAK,iBAAiB,IAAI,CAAC,CAAC;AAC5B,aAAO,KAAK,YAAY,MAAM,IAAI,CAAC,CAAC;AACpC,UAAI,KAAK,aAAa;AAClB,eAAO,KAAK,gBAAgB,MAAM,MAAM,KAAK,iBAAiB;AAAA,MAClE;AACA,aAAO,KAAK,mBAAmB,MAAM,IAAI,CAAC,CAAC;AAC3C,aAAO,KAAK,YAAY,MAAM,IAAI,CAAC,CAAC;AACpC,aAAO;AAAA,IACX;AAAA,EAEJ;;;AC9ZO,MAAM,WAAN,MAAe;AAAA,IAElB,YAAY,KAAK;AAEb,WAAK,OAAO;AACZ,WAAK,iBAAiB,IAAI,QAAQ,CAAC,YAAY;AAE3C,aAAK,UAAU,GAAG,EAAE,KAAK,CAAC,SAAS;AAC/B,eAAK,OAAO;AACZ,kBAAQ;AAAA,QACZ,CAAC;AAAA,MACL,CAAC;AACD,WAAK,eAAe,IAAI,aAAa;AAAA,IACzC;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY,WAAW;AACnB,YAAM,OAAO;AAAA,QACT,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,WAAW;AAAA,MACf;AACA,YAAM,QAAQ;AACd,YAAM,cAAc;AAEpB,WAAK,OAAO,MAAM,UAAU,aAAa,CAAC;AAC1C,WAAK,OAAO,KAAK,KAAK,QAAQ,UAAU,aAAa,IAAI;AACzD,WAAK,KAAK,MAAM,UAAU,WAAW,CAAC;AACtC,WAAK,KAAK,KAAK,KAAK,MAAM,UAAU,WAAW,IAAI;AAEnD,UAAI,UAAU,gBAAgB,IAAI,GAAG;AACjC,aAAK,YAAY,YAAY,UAAU,gBAAgB,CAAC;AAAA,MAC5D;AAEA,UAAG,UAAU,MAAM,GAAG;AAClB,aAAK,KAAK;AAAA,MACd,WAAU,UAAU,OAAO,GAAG;AAC1B,aAAK,KAAK;AAAA,MACd,WAAU,UAAU,MAAM,GAAG;AACzB,aAAK,KAAK;AAAA,MACd,WAAU,UAAU,OAAO,GAAG;AAC1B,aAAK,KAAK;AAAA,MACd;AACA,WAAK,SAAS,UAAU;AACxB,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,gBAAgB,KAAK,cAAc,KAAK;AAC1C,aAAO,IAAI,QAAQ,CAAC,YAAY;AAC5B,aAAK,eAAe,KAAK,MAAM;AAC3B,gBAAM,OAAO,KAAK,aAAa,iBAAiB,GAAG;AACnD,gBAAM,cAAc,KAAK,KAAK,cAAc,IAAI;AAChD,gBAAM,QAAQ,CAAC;AACf,cAAI,YAAY;AAChB,qBAAW,aAAa,aAAa;AACjC,kBAAM,KAAK,KAAK,YAAY,SAAS,CAAC;AACtC,yBAAa,UAAU;AAAA,UAC3B;AAEA,qBAAW,QAAQ,OAAO;AACtB,iBAAK,cAAc,KAAK,IAAI,KAAK,SAAS,WAAW,WAAW,EAC3D,QAAQ,CAAC;AAAA,UAClB;AACA,kBAAQ,KAAK;AAAA,QACjB,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAAA,IAEA,UAAU,KAAK;AACX,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAM,GAAG,EAAE,KAAK,CAAC,aAAa;AAC1B,mBAAS,KAAK,EAAE,KAAK,CAAC,SAAS;AAC3B,gBAAI,SAAS,IAAI,WAAW;AAC5B,mBAAO,mBAAmB,IAAI;AAC9B,mBAAO,SAAS,MAAM;AAClB,sBAAQ,IAAI,KAAK,OAAO,MAAM,CAAC;AAAA,YACnC;AACA,mBAAO,UAAU,MAAM;AACnB,qBAAO,OAAO,KAAK;AAAA,YACvB;AAAA,UACJ,CAAC;AAAA,QACL,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAAA,EAEJ;;;AC1FO,MAAM,iBAAN,cAA6B,aAAa;AAAA,IAE7C,YAAY,OAAO;AACf,YAAM,KAAK;AAAA,IACf;AAAA,IAEA,OAAO;AACH,WAAK,WAAW,IAAI,SAAS,KAAK,MAAM,OAAO;AAC/C,WAAK,SAAS,eAAe,KAAK,MAAM;AACpC,aAAK,cAAc,aAAa;AAChC,eAAO,QAAQ,QAAQ;AAAA,MAC3B,CAAC;AAAA,IACL;AAAA,IAEA,cAAc,KAAK,QAAQ,CAAC,GAAG;AAC3B,WAAK,cAAc,aAAa;AAChC,YAAM,iBAAiB,IAAI,QAAQ,CAAC,YAAY;AAC5C,mBAAW,YAAY;AACnB,kBAAQ;AAAA,QACZ,GAAG,KAAK,MAAM,aAAa;AAAA,MAC/B,CAAC;AACD,YAAM,qBAAqB,IAAI,QAAQ,OAAO,YAAY;AACtD,cAAM,QAAQ,MAAM,KAAK,SAAS,gBAAgB,GAAG;AACrD,YAAG,KAAK,MAAM,OAAO;AACjB,kBAAQ,IAAI,KAAK,+BAA+B,KAAK;AAAA,QACzD;AAEA,cAAM,oBAAoB,CAAC;AAC3B,mBAAW,QAAQ,OAAO;AACtB,mBAASC,KAAI,GAAGA,KAAK,KAAK,cAAc,IAAKA,MAAK;AAC9C,8BAAkB,KAAK,IAAI;AAAA,UAC/B;AAAA,QACJ;AAEA,cAAM,aAAa,KAAK,MAAM,KAAK,OAAO,IAAI,kBAAkB,MAAM;AACtE,gBAAQ,kBAAkB,UAAU,CAAC;AAAA,MACzC,CAAC;AACD,aAAO,IAAI,QAAQ,CAAC,YAAY;AAC5B,gBAAQ,IAAI,CAAC,KAAK,aAAa,gBAAgB,kBAAkB,CAAC,EAAE,KAAK,CAAC,WAAW;AACjF,eAAK,cAAc,aAAa;AAChC,kBAAQ,OAAO,CAAC,CAAC;AAAA,QACrB,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAAA,EAEJ;;;ACxCO,MAAM,kBAAN,cAA8B,mBAAmB;AAAA,IAEpD,YAAY,cAAc,MAAM,OAAO;AACnC,YAAM,cAAc,IAAI;AACxB,WAAK,QAAQ;AAAA,QACT,OAAO;AAAA,MACX;AACA,aAAO,OAAO,KAAK,OAAO,KAAK;AAC/B,WAAK,eAAe,IAAI,gBAAgB,EAAC,WAAW,MAAM,QAAQ,OAAO,MAAM,MAAM,CAAC;AACtF,WAAK,gBAAgB,MAAM,OAAO,IAAI,eAAe,EAAC,SAAS,MAAM,KAAK,CAAC,IAAI,KAAK;AACpF,WAAK,QAAQ;AAAA,QACT,cAAc,CAAC;AAAA,QACf,OAAO;AAAA,QACP,OAAO,MAAM;AAAA,QACb,aAAa,aAAa;AAAA,QAC1B,eAAe,KAAK;AAAA,MACxB;AACA,WAAK,iBAAiB,QAAQ,IAAI,CAAC,KAAK,cAAc,gBAAgB,KAAK,aAAa,cAAc,CAAC;AACvG,WAAK,eAAe,KAAK,MAAM;AAC3B,aAAK,MAAM,cAAc,aAAa;AAAA,MAC1C,CAAC;AAED,WAAK,OAAO,aAAa;AACzB,WAAK,KAAK,KAAK;AAAA,QACX,IAAI;AAAA,UACA,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AAAA,QACA,IAAI;AAAA,UACA,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AAAA,MACJ,CAAC;AAED,WAAK,aAAa,cAAc,UAAU,uBAAuB,MAAM,MAAM;AACzE,YAAI,KAAK,aAAa,YAAY,UAAU,OAAO,GAAG;AAClD,eAAK,MAAM,QAAQ,SAAS,KAAK,aAAa,YAAY,UAAU,OAAO,GAAG,EAAE;AAAA,QACpF;AACA,YAAI,KAAK,aAAa,YAAY,UAAU,cAAc,GAAG;AACzD,eAAK,MAAM,eAAe,KAAK,aAAa,YAAY,UAAU,cAAc;AAChF,cAAI,QAAQ,KAAK,MAAM,aAAa,KAAK,aAAa,MAAM,SAAS;AACrE,cAAI,CAAC,SAAS,KAAK,aAAa,MAAM,YAAY,GAAG;AACjD,oBAAQ,KAAK,MAAM,aAAa,KAAK,aAAa,MAAM,YAAY,CAAC;AAAA,UACzE;AACA,eAAK,MAAM,QAAQ;AAAA,QACvB;AAAA,MACJ,CAAC;AACD,WAAK,aAAa,cAAc,UAAU,uBAAuB,YAAY,MAAM;AAC/E,aAAK,MAAM,gBAAgB,KAAK;AAAA,MACpC,CAAC;AACD,WAAK,aAAa,cAAc,UAAU,uBAAuB,SAAS,MAAM;AAC5E,aAAK,MAAM,eAAe,CAAC;AAC3B,aAAK,MAAM,QAAQ;AAAA,MACvB,CAAC;AACD,WAAK,aAAa,cAAc,UAAU,uBAAuB,UAAU,CAAC,SAAS;AACjF,YAAI,KAAK,MAAM,aAAa;AACxB,eAAK,MAAM,QAAQ,KAAK,MAAM;AAAA,QAClC;AACA,aAAK,MAAM,gBAAgB,KAAK;AAAA,MACpC,CAAC;AACD,cAAQ,SAAS,KAAK,OAAO,SAAS,MAAM;AACxC,aAAK,aAAa,YAAY,UAAU,SAAS,KAAK,MAAM,KAAK;AAAA,MACrE,CAAC;AACD,cAAQ,SAAS,KAAK,OAAO,SAAS,MAAM;AACxC,aAAK,aAAa,YAAY,UAAU,SAAS,KAAK,MAAM,KAAK;AACjE,aAAK,aAAa,YAAY,UAAU,gBAAgB,KAAK,MAAM,YAAY;AAAA,MACnF,CAAC;AAAA,IACL;AAAA,IAEA,YAAY,KAAK,cAAc;AAC3B,UAAI,KAAK,MAAM,OAAO;AAClB,gBAAQ,IAAI,eAAe,GAAG;AAAA,MAClC;AACA,WAAK,eAAe,KAAK,YAAY;AACjC,aAAK,MAAM,cAAc,aAAa;AACtC,YAAG,KAAK,MAAM,QAAQ,GAAG;AACrB,eAAK,MAAM,gBAAgB,KAAK;AAAA,QACpC;AACA,YAAI,WAAW,MAAM,KAAK,MAAM,cAAc,cAAc,KAAK,EAAC,OAAO,KAAK,MAAM,MAAM,CAAC;AAC3F,YAAI,CAAC,UAAU;AACX,cAAI,KAAK,MAAM,OAAO;AAClB,oBAAQ,IAAI,sBAAsB,KAAK,MAAM,cAAc,YAAY,IAAI;AAAA,UAC/E;AACA,cAAI,KAAK,MAAM,kBAAkB,KAAK,eAAe;AACjD,iBAAK,MAAM,gBAAgB,KAAK;AAChC,iBAAK,YAAY,KAAK,YAAY;AAAA,UACtC,OAAO;AACH,kBAAM,IAAI,MAAM,8BAA8B,MAAM,iBAAiB,KAAK,MAAM,aAAa;AAAA,UACjG;AAAA,QACJ,OAAO;AACH,cAAI,KAAK,MAAM,OAAO;AAClB,oBAAQ,IAAI,4BAA4B,KAAK,MAAM,aAAa;AAChE,oBAAQ,IAAI,YAAY,UAAU,KAAK,MAAM,cAAc,YAAY,IAAI;AAAA,UAC/E;AACA,cAAI,WAAW;AACf,cAAI,SAAS,UAAU,QAAW;AAC9B,gBAAG,CAAC,MAAM,SAAS,KAAK,GAAG;AAEvB,yBAAW,CAAC,SAAS;AAAA,YACzB,OAAO;AACH,yBAAW,SAAS;AAAA,YACxB;AACA,iBAAK,MAAM,aAAa,KAAK,aAAa,MAAM,MAAM,SAAS,CAAC,IAAI;AACpE,iBAAK,MAAM,QAAQ;AAAA,UACvB,OAAO;AACH,iBAAK,MAAM,QAAQ;AAAA,UACvB;AACA,eAAK,MAAM,cAAc,aAAa;AACtC,uBAAa,QAAQ;AAAA,QACzB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;;;ACpHO,MAAM,qBAAN,cAAiC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOhD,YAAY,cAAc,QAAQ,QAAQ,CAAC,GAAG;AAC1C,YAAM,QAAW,KAAK;AACtB,WAAK,eAAe;AACpB,WAAK,SAAS;AACd,YAAM,OAAO,aAAa;AAC1B,UAAI,CAAC,KAAK,MAAM,aAAa;AACzB,aAAK,MAAM,cAAc;AAAA,MAC7B;AACA,WAAK,eAAe,IAAI,KAAK,aAAa,KAAK,QAAQ;AAAA,QACnD,uBAAuB;AAAA,QACvB,uBAAuB;AAAA,MAC3B,CAAC;AACD,WAAK,UAAU,KAAK,aAAa,QAAQ,cAAc,eAAe;AACtE,WAAK,QAAQ,YAAY,6FAA6F,KAAK,MAAM,WAAW;AAC5I,WAAK,eAAe,KAAK,QAAQ,cAAc,QAAQ;AACvD,WAAK,kBAAkB,KAAK,QAAQ,cAAc,WAAW;AAC7D,WAAK,gBAAgB,MAAM,UAAU;AACrC,cAAQ,SAAS,OAAO,OAAO,SAAS,MAAM;AAC1C,aAAK,iBAAiB;AAAA,MAC1B,CAAC;AACD,cAAQ,SAAS,OAAO,OAAO,eAAe,MAAM;AAEhD,YAAI,OAAO,MAAM,gBAAgB,aAAa,UAAU;AACpD,eAAK,gBAAgB,MAAM,UAAU;AAAA,QACzC,OAAO;AACH,eAAK,gBAAgB,MAAM,UAAU;AAAA,QACzC;AAAA,MACJ,CAAC;AACD,cAAQ,SAAS,OAAO,OAAO,SAAS,CAAC,UAAU;AAC/C,cAAM,WAAW,MAAM;AACvB,YAAI,UAAU;AACV,cAAI;AACJ,cAAI,MAAM,QAAQ,GAAG;AACjB,6BAAiB;AAAA,UACrB,OAAO;AACH,6BAAiB,KAAK,aAAa,OAAO,QAAQ;AAAA,UACtD;AACA,eAAK,aAAa,YAAY,GAAG,KAAK,EAAE,OAAO,CAAC,IAAI,cAAc;AAAA,QACtE,OAAO;AACH,eAAK,aAAa,YAAY;AAAA,QAClC;AAAA,MACJ,CAAC;AACD,cAAQ,SAAS,KAAK,aAAa,OAAO,aAAa,MAAM;AACzD,YAAI,QAAQ,OAAO,MAAM,aAAa,KAAK,aAAa,MAAM,SAAS;AACvE,YAAI,CAAC,SAAS,KAAK,aAAa,MAAM,YAAY,GAAG;AACjD,kBAAQ,OAAO,MAAM,aAAa,KAAK,aAAa,MAAM,YAAY,CAAC;AAAA,QAC3E;AACA,YAAI,OAAO;AACP,cAAI;AACJ,cAAI,MAAM,KAAK,GAAG;AACd,6BAAiB;AAAA,UACrB,OAAO;AACH,6BAAiB,KAAK,aAAa,OAAO,KAAK;AAAA,UACnD;AACA,eAAK,aAAa,YAAY,GAAG,KAAK,EAAE,OAAO,CAAC,IAAI,cAAc;AAAA,QACtE,OAAO;AACH,eAAK,aAAa,YAAY;AAAA,QAClC;AAAA,MACJ,CAAC;AACD,WAAK,iBAAiB;AAAA,IAC1B;AAAA,IAEA,mBAAmB;AACf,WAAK,OAAO,OAAO,aAAa,KAAK,aAAa,KAAK,EAAE,OAAO,CAAC,IAAI,KAAK,OAAO,MAAM,KAAK;AAAA,IAChG;AAAA,EACJ;",
  "names": ["i", "i", "expected", "found", "location", "text", "i", "fen", "board", "moves", "len", "move_string", "move", "header", "options", "newline_char", "headers", "key", "variation", "i", "COLOR", "Chess", "i", "FEN", "i", "file", "rank", "i", "FEN", "result", "i", "pieceName", "COLOR", "i", "file", "rank", "FEN", "COLOR", "translations", "i", "topic", "callback", "Chess", "COLOR", "i", "COLOR", "COLOR", "rank", "COLOR", "COLOR", "rank", "props", "FEN", "COLOR", "PIECES", "COLOR", "History", "i", "COLOR", "COLOR", "COLOR", "COLOR", "i", "i", "i", "i"]
}
