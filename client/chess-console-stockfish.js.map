{
  "version": 3,
  "sources": ["../node_modules/cm-chess/node_modules/cm-pgn/src/Header.js", "../node_modules/cm-chess/node_modules/cm-pgn/src/parser/pgnParser.js", "../node_modules/chess.mjs/src/Chess.js", "../node_modules/cm-chess/node_modules/cm-pgn/src/History.js", "../node_modules/cm-chess/node_modules/cm-pgn/src/Pgn.js", "../node_modules/cm-chess/src/Chess.js", "../node_modules/cm-chessboard/src/model/Position.js", "../node_modules/cm-chessboard/src/model/ChessboardState.js", "../node_modules/cm-chessboard/src/lib/Svg.js", "../node_modules/cm-chessboard/src/model/Extension.js", "../node_modules/cm-chessboard/src/lib/Utils.js", "../node_modules/cm-chessboard/src/view/PositionAnimationsQueue.js", "../node_modules/cm-chessboard/src/view/VisualMoveInput.js", "../node_modules/cm-chessboard/src/view/ChessboardView.js", "../node_modules/cm-chessboard/src/Chessboard.js", "../node_modules/cm-web-modules/src/i18n/I18n.js", "../node_modules/cm-web-modules/src/message-broker/MessageBroker.js", "../node_modules/cm-web-modules/src/utils/DomUtils.js", "../node_modules/cm-web-modules/src/app/Component.js", "../node_modules/cm-chessboard/src/extensions/accessibility/I18n.js", "../node_modules/cm-web-modules/src/observe/Observe.js", "../node_modules/chess-console/src/ChessConsoleState.js", "../node_modules/chess-console/src/ChessConsole.js", "../node_modules/chess-console/src/ChessConsolePlayer.js", "../node_modules/chess-console/src/players/LocalPlayer.js", "../node_modules/cm-chessboard/src/extensions/markers/Markers.js", "../node_modules/cm-web-modules/src/utils/CoreUtils.js", "../node_modules/cm-chessboard/src/extensions/promotion-dialog/PromotionDialog.js", "../node_modules/cm-chessboard/src/extensions/accessibility/Accessibility.js", "../node_modules/cm-chessboard/src/extensions/auto-border-none/AutoBorderNone.js", "../node_modules/chess-console/src/components/Board.js", "../node_modules/chess-console/src/components/GameStateOutput.js", "../node_modules/chess-console/src/tools/ChessRender.js", "../node_modules/chess-console/src/components/History.js", "../node_modules/chess-console/src/components/CapturedPieces.js", "../node_modules/chess-console/src/components/HistoryControl.js", "../node_modules/chess-console/src/components/Persistence.js", "../node_modules/cm-web-modules/src/audio/Audio.js", "../node_modules/cm-web-modules/src/audio/Sample.js", "../node_modules/cm-web-modules/src/audio/AudioSprite.js", "../node_modules/chess-console/src/components/Sound.js", "../node_modules/bootstrap-show-modal/src/ShowModal.js", "../node_modules/chess-console/src/components/GameControl/NewGameDialog.js", "../node_modules/chess-console/src/components/GameControl/GameControl.js", "../node_modules/cm-engine-runner/src/EngineRunner.js", "../node_modules/cm-engine-runner/src/StockfishRunner.js", "../src/StockfishNewGameDialog.js", "../src/StockfishGameControl.js", "../node_modules/cm-polyglot/lib/stakelbase/Book.js", "../node_modules/cm-polyglot/lib/stakelbase/KeyGenerator.js", "../node_modules/cm-polyglot/src/Polyglot.js", "../node_modules/cm-engine-runner/src/PolyglotRunner.js", "../src/StockfishPlayer.js", "../src/StockfishStateView.js"],
  "sourcesContent": ["/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nexport const TAGS = {\n\n    // Standard \"Seven Tag Roster\"\n    Event: \"Event\", // the name of the tournament or match event\n    Site: \"Site\", // the location of the event\n    Date: \"Date\", // the starting date of the game (format: YYYY.MM.TT)\n    Round: \"Round\", // the playing round ordinal of the game\n    White: \"White\", // the player of the white pieces (last name, pre name)\n    Black: \"Black\", // the player of the black pieces (last name, pre name)\n    Result: \"Result\", // the result of the game (1-0, 1/2-1/2, 0-1, *)\n\n    // Optional (http://www.saremba.de/chessgml/standards/pgn/pgn-complete.htm#c9)\n    //      Player related information\n    WhiteTitle: \"WhiteTitle\", BlackTitle: \"BlackTitle\", // These use string values such as \"FM\", \"IM\", and \"GM\"; these tags are used only for the standard abbreviations for FIDE titles. A value of \"-\" is used for an untitled player.\n    WhiteElo: \"WhiteElo\", BlackElo: \"BlackElo\", // These tags use integer values; these are used for FIDE Elo ratings. A value of \"-\" is used for an unrated player.\n    WhiteUSCF: \"WhiteUSCF\", BlackUSCF: \"BlackUSCF\", // These tags use integer values; these are used for USCF (United States Chess Federation) ratings. Similar tag names can be constructed for other rating agencies.\n    WhiteNA: \"WhiteNA\", BlackNA: \"BlackNA:\", // These tags use string values; these are the e-mail or network addresses of the players. A value of \"-\" is used for a player without an electronic address.\n    WhiteType: \"WhiteType\", BlackType: \"BlackType\", // These tags use string values; these describe the player types. The value \"human\" should be used for a person while the value \"program\" should be used for algorithmic (computer) players.\n    //      Event related information\n    EventDate: \"EventDate\", // This uses a date value, similar to the Date tag field, that gives the starting date of the Event.\n    EventSponsor: \"EventSponsor\", // This uses a string value giving the name of the sponsor of the event.\n    Section: \"Section\", // This uses a string; this is used for the playing section of a tournament (e.g., \"Open\" or \"Reserve\").\n    Stage: \"Stage\", // This uses a string; this is used for the stage of a multistage event (e.g., \"Preliminary\" or \"Semifinal\").\n    Board: \"Board\", // This uses an integer; this identifies the board number in a team event and also in a simultaneous exhibition.\n    //      Opening information (locale specific)\n    Opening: \"Opening\", // This uses a string; this is used for the traditional opening name. This will vary by locale. This tag pair is associated with the use of the EPD opcode \"v0\" described in a later section of this document.\n    ECO: \"ECO\", // This uses a string of either the form \"XDD\" or the form \"XDD/DD\" where the \"X\" is a letter from \"A\" to \"E\" and the \"D\" positions are digits.\n    //      Time and date related information\n    Time: \"Time\", // Time the game started, in \"HH:MM:SS\" format, in local clock time.\n    UTCTime: \"UTCTime\", // This tag is similar to the Time tag except that the time is given according to the Universal Coordinated Time standard.\n    UTCDate: \"UTCDate\", // This tag is similar to the Date tag except that the date is given according to the Universal Coordinated Time standard.\n    //      Time control\n    TimeControl: \"TimeControl\", // 40/7200:3600 (moves per seconds: sudden death seconds)\n    //      Alternative starting positions\n    SetUp: \"SetUp\", // \"0\": position is start position, \"1\": tag FEN defines the position\n    FEN: \"FEN\", //  Alternative start position, tag SetUp has to be set to \"1\"\n    //      Game conclusion\n    Termination: \"Termination\", // Gives more details about the termination of the game. It may be \"abandoned\", \"adjudication\" (result determined by third-party adjudication), \"death\", \"emergency\", \"normal\", \"rules infraction\", \"time forfeit\", or \"unterminated\".\n    //      Miscellaneous\n    Annotator: \"Annotator\", // The person providing notes to the game.\n    Mode: \"Mode\", // \"OTB\" (over-the-board) \"ICS\" (Internet Chess Server)\n    PlyCount: \"PlyCount\", // String value denoting total number of half-moves played.\n\n}\n\nexport class Header {\n\n    constructor(headerString = \"\") {\n        this.clear()\n        const rows = headerString.match(/\\[([^\\]]+)]/g)\n        if (rows && rows.length > 0) {\n            for (let i = 0; i < rows.length; i++) {\n                let tag = rows[i].match(/\\[(\\w+)\\s+\"([^\"]+)\"/)\n                if (tag) {\n                    this.tags[tag[1]] = tag[2]\n                }\n            }\n        }\n    }\n\n    clear() {\n        this.tags = {}\n    }\n\n    render() {\n        let rendered = \"\"\n        for (const tag in this.tags) {\n            rendered += `[${tag} \"${this.tags[tag]}\"]\\n`\n        }\n        return rendered\n    }\n\n}\n\n", "/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { pgn: peg$parsepgn },\n      peg$startRuleFunction  = peg$parsepgn,\n\n      peg$c0 = function(pw, all) { var arr = (all ? all : []); arr.unshift(pw);return arr; },\n      peg$c1 = function(pb, all) { var arr = (all ? all : []); arr.unshift(pb); return arr; },\n      peg$c2 = function() { return [[]]; },\n      peg$c3 = function(pw) { return pw; },\n      peg$c4 = function(pb) { return pb; },\n      peg$c5 = function(cm, mn, cb, hm, nag, ca, vari, all) { var arr = (all ? all : []);\n            var move = {}; move.turn = 'w'; move.moveNumber = mn;\n            move.notation = hm; move.commentBefore = cb; move.commentAfter = ca; move.commentMove = cm;\n            move.variations = (vari ? vari : []); move.nag = (nag ? nag : null); arr.unshift(move); return arr; },\n      peg$c6 = function(cm, me, cb, hm, nag, ca, vari, all) { var arr = (all ? all : []);\n            var move = {}; move.turn = 'b'; move.moveNumber = me;\n            move.notation = hm; move.commentBefore = cb; move.commentAfter = ca;\n            move.variations = (vari ? vari : []); arr.unshift(move); move.nag = (nag ? nag : null); return arr; },\n      peg$c7 = \"1:0\",\n      peg$c8 = peg$literalExpectation(\"1:0\", false),\n      peg$c9 = function() { return [\"1:0\"]; },\n      peg$c10 = \"0:1\",\n      peg$c11 = peg$literalExpectation(\"0:1\", false),\n      peg$c12 = function() { return [\"0:1\"]; },\n      peg$c13 = \"1-0\",\n      peg$c14 = peg$literalExpectation(\"1-0\", false),\n      peg$c15 = function() { return [\"1-0\"]; },\n      peg$c16 = \"0-1\",\n      peg$c17 = peg$literalExpectation(\"0-1\", false),\n      peg$c18 = function() { return [\"0-1\"]; },\n      peg$c19 = \"1/2-1/2\",\n      peg$c20 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c21 = function() { return [\"1/2-1/2\"]; },\n      peg$c22 = \"*\",\n      peg$c23 = peg$literalExpectation(\"*\", false),\n      peg$c24 = function() { return [\"*\"]; },\n      peg$c25 = /^[^}]/,\n      peg$c26 = peg$classExpectation([\"}\"], true, false),\n      peg$c27 = function(cm) { return cm.join(\"\").trim(); },\n      peg$c28 = \"{\",\n      peg$c29 = peg$literalExpectation(\"{\", false),\n      peg$c30 = \"}\",\n      peg$c31 = peg$literalExpectation(\"}\", false),\n      peg$c32 = function(vari, all, me) { var arr = (all ? all : []); arr.unshift(vari); return arr; },\n      peg$c33 = function(vari, all) { var arr = (all ? all : []); arr.unshift(vari); return arr; },\n      peg$c34 = \"(\",\n      peg$c35 = peg$literalExpectation(\"(\", false),\n      peg$c36 = \")\",\n      peg$c37 = peg$literalExpectation(\")\", false),\n      peg$c38 = \".\",\n      peg$c39 = peg$literalExpectation(\".\", false),\n      peg$c40 = function(num) { return num; },\n      peg$c41 = peg$otherExpectation(\"integer\"),\n      peg$c42 = /^[0-9]/,\n      peg$c43 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c44 = function(digits) { return makeInteger(digits); },\n      peg$c45 = \" \",\n      peg$c46 = peg$literalExpectation(\" \", false),\n      peg$c47 = function() { return '';},\n      peg$c48 = function(fig, disc, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.disc =  (disc ? disc : null); hm.strike = (str ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.promotion = pr; hm.notation = (fig ? fig : \"\") + (disc ? disc : \"\") + (str ? str : \"\") + col + row + (pr ? pr : \"\") + (ch ? ch : \"\"); return hm; },\n      peg$c49 = function(fig, cols, rows, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.strike = (str =='x' ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.notation = (fig && (fig!=='P') ? fig : \"\") + cols + rows + (str=='x' ? str : \"-\") + col  + row + (pr ? pr : \"\") + (ch ? ch : \"\"); hm.promotion = pr; return hm; },\n      peg$c50 = function(fig, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.strike = (str ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.notation = (fig ? fig : \"\") + (str ? str : \"\") + col  + row + (pr ? pr : \"\") + (ch ? ch : \"\"); hm.promotion = pr; return hm; },\n      peg$c51 = \"O-O-O\",\n      peg$c52 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c53 = function(ch) { var hm = {}; hm.notation = 'O-O-O'+ (ch ? ch : \"\"); hm.check = (ch ? ch : null); return  hm; },\n      peg$c54 = \"O-O\",\n      peg$c55 = peg$literalExpectation(\"O-O\", false),\n      peg$c56 = function(ch) { var hm = {}; hm.notation = 'O-O'+ (ch ? ch : \"\"); hm.check = (ch ? ch : null); return  hm; },\n      peg$c57 = \"+-\",\n      peg$c58 = peg$literalExpectation(\"+-\", false),\n      peg$c59 = \"+\",\n      peg$c60 = peg$literalExpectation(\"+\", false),\n      peg$c61 = function(ch) { return ch[1]; },\n      peg$c62 = \"$$$\",\n      peg$c63 = peg$literalExpectation(\"$$$\", false),\n      peg$c64 = \"#\",\n      peg$c65 = peg$literalExpectation(\"#\", false),\n      peg$c66 = \"=\",\n      peg$c67 = peg$literalExpectation(\"=\", false),\n      peg$c68 = function(f) { return '=' + f; },\n      peg$c69 = function(nag, nags) { var arr = (nags ? nags : []); arr.unshift(nag); return arr; },\n      peg$c70 = \"$\",\n      peg$c71 = peg$literalExpectation(\"$\", false),\n      peg$c72 = function(num) { return '$' + num; },\n      peg$c73 = \"!!\",\n      peg$c74 = peg$literalExpectation(\"!!\", false),\n      peg$c75 = function() { return '$3'; },\n      peg$c76 = \"??\",\n      peg$c77 = peg$literalExpectation(\"??\", false),\n      peg$c78 = function() { return '$4'; },\n      peg$c79 = \"!?\",\n      peg$c80 = peg$literalExpectation(\"!?\", false),\n      peg$c81 = function() { return '$5'; },\n      peg$c82 = \"?!\",\n      peg$c83 = peg$literalExpectation(\"?!\", false),\n      peg$c84 = function() { return '$6'; },\n      peg$c85 = \"!\",\n      peg$c86 = peg$literalExpectation(\"!\", false),\n      peg$c87 = function() { return '$1'; },\n      peg$c88 = \"?\",\n      peg$c89 = peg$literalExpectation(\"?\", false),\n      peg$c90 = function() { return '$2'; },\n      peg$c91 = \"\\u203C\",\n      peg$c92 = peg$literalExpectation(\"\\u203C\", false),\n      peg$c93 = \"\\u2047\",\n      peg$c94 = peg$literalExpectation(\"\\u2047\", false),\n      peg$c95 = \"\\u2049\",\n      peg$c96 = peg$literalExpectation(\"\\u2049\", false),\n      peg$c97 = \"\\u2048\",\n      peg$c98 = peg$literalExpectation(\"\\u2048\", false),\n      peg$c99 = \"\\u25A1\",\n      peg$c100 = peg$literalExpectation(\"\\u25A1\", false),\n      peg$c101 = function() { return '$7'; },\n      peg$c102 = function() { return '$10'; },\n      peg$c103 = \"\\u221E\",\n      peg$c104 = peg$literalExpectation(\"\\u221E\", false),\n      peg$c105 = function() { return '$13'; },\n      peg$c106 = \"\\u2A72\",\n      peg$c107 = peg$literalExpectation(\"\\u2A72\", false),\n      peg$c108 = function() { return '$14'; },\n      peg$c109 = \"\\u2A71\",\n      peg$c110 = peg$literalExpectation(\"\\u2A71\", false),\n      peg$c111 = function() { return '$15';},\n      peg$c112 = \"\\xB1\",\n      peg$c113 = peg$literalExpectation(\"\\xB1\", false),\n      peg$c114 = function() { return '$16';},\n      peg$c115 = \"\\u2213\",\n      peg$c116 = peg$literalExpectation(\"\\u2213\", false),\n      peg$c117 = function() { return '$17';},\n      peg$c118 = function() { return '$18';},\n      peg$c119 = \"-+\",\n      peg$c120 = peg$literalExpectation(\"-+\", false),\n      peg$c121 = function() { return '$19';},\n      peg$c122 = \"\\u2A00\",\n      peg$c123 = peg$literalExpectation(\"\\u2A00\", false),\n      peg$c124 = function() { return '$22'; },\n      peg$c125 = \"\\u27F3\",\n      peg$c126 = peg$literalExpectation(\"\\u27F3\", false),\n      peg$c127 = function() { return '$32'; },\n      peg$c128 = \"\\u2192\",\n      peg$c129 = peg$literalExpectation(\"\\u2192\", false),\n      peg$c130 = function() { return '$36'; },\n      peg$c131 = \"\\u2191\",\n      peg$c132 = peg$literalExpectation(\"\\u2191\", false),\n      peg$c133 = function() { return '$40'; },\n      peg$c134 = \"\\u21C6\",\n      peg$c135 = peg$literalExpectation(\"\\u21C6\", false),\n      peg$c136 = function() { return '$132'; },\n      peg$c137 = \"D\",\n      peg$c138 = peg$literalExpectation(\"D\", false),\n      peg$c139 = function() { return '$220'; },\n      peg$c140 = /^[RNBQKP]/,\n      peg$c141 = peg$classExpectation([\"R\", \"N\", \"B\", \"Q\", \"K\", \"P\"], false, false),\n      peg$c142 = /^[a-h]/,\n      peg$c143 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c144 = /^[1-8]/,\n      peg$c145 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c146 = \"x\",\n      peg$c147 = peg$literalExpectation(\"x\", false),\n      peg$c148 = \"-\",\n      peg$c149 = peg$literalExpectation(\"-\", false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepgn() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnStartWhite();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnBlack();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsepgnStartBlack();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepgnWhite();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsewhiteSpace();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2();\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepgnStartWhite() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnWhite();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepgnStartBlack() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnBlack();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c4(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepgnWhite() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    s1 = peg$parsewhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsewhiteSpace();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemoveNumber();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsewhiteSpace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecomment();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsewhiteSpace();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsehalfMove();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsewhiteSpace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsenags();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsewhiteSpace();\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsecomment();\n                          if (s12 === peg$FAILED) {\n                            s12 = null;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parsewhiteSpace();\n                            if (s13 === peg$FAILED) {\n                              s13 = null;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parsevariationWhite();\n                              if (s14 === peg$FAILED) {\n                                s14 = null;\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsepgnBlack();\n                                if (s15 === peg$FAILED) {\n                                  s15 = null;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c5(s2, s4, s6, s8, s10, s12, s14, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseendGame();\n    }\n\n    return s0;\n  }\n\n  function peg$parsepgnBlack() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    s1 = peg$parsewhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsewhiteSpace();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemoveEllipse();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsewhiteSpace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecomment();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsewhiteSpace();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsehalfMove();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsewhiteSpace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsenags();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsewhiteSpace();\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsecomment();\n                          if (s12 === peg$FAILED) {\n                            s12 = null;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parsewhiteSpace();\n                            if (s13 === peg$FAILED) {\n                              s13 = null;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parsevariationBlack();\n                              if (s14 === peg$FAILED) {\n                                s14 = null;\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsepgnWhite();\n                                if (s15 === peg$FAILED) {\n                                  s15 = null;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c6(s2, s4, s6, s8, s10, s12, s14, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseendGame();\n    }\n\n    return s0;\n  }\n\n  function peg$parseendGame() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c9();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c10) {\n        s1 = peg$c10;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 3) === peg$c13) {\n          s1 = peg$c13;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c15();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 3) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 7) === peg$c19) {\n              s1 = peg$c19;\n              peg$currPos += 7;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c21();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s1 = peg$c22;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecl();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c25.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c25.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecr();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c27(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecl() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s0 = peg$c28;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecr() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 125) {\n      s0 = peg$c30;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariationWhite() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepl();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnWhite();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepr();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsevariationWhite();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsewhiteSpace();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsemoveEllipse();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c32(s2, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariationBlack() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepl();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnStartBlack();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepr();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsevariationBlack();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33(s2, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepl() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s0 = peg$c34;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepr() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c36;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c38;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c42.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c44(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhiteSpace() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c45;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s2 = peg$c45;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c47();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsehalfMove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefigure();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parsecheckdisc();\n      peg$silentFails--;\n      if (s3 !== peg$FAILED) {\n        peg$currPos = s2;\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsediscriminator();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestrike();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsecolumn();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parserow();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsepromotion();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsecheck();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c48(s1, s3, s4, s5, s6, s7, s8);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsefigure();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolumn();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parserow();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsestrikeOrDash();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsecolumn();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parserow();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsepromotion();\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsecheck();\n                    if (s8 === peg$FAILED) {\n                      s8 = null;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c49(s1, s2, s3, s4, s5, s6, s7, s8);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsefigure();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsestrike();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsecolumn();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parserow();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsepromotion();\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsecheck();\n                  if (s6 === peg$FAILED) {\n                    s6 = null;\n                  }\n                  if (s6 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c50(s1, s2, s3, s4, s5, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s1 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsecheck();\n            if (s2 === peg$FAILED) {\n              s2 = null;\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c53(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c54) {\n              s1 = peg$c54;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c55); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsecheck();\n              if (s2 === peg$FAILED) {\n                s2 = null;\n              }\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c56(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c57) {\n      s3 = peg$c57;\n      peg$currPos += 2;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n    peg$silentFails--;\n    if (s3 === peg$FAILED) {\n      s2 = void 0;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c59;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c61(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 3) === peg$c62) {\n        s3 = peg$c62;\n        peg$currPos += 3;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s3 = peg$c64;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c61(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c66;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefigure();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c68(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenags() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenag();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsewhiteSpace();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenags();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c69(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c70;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinteger();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c72(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c73) {\n        s1 = peg$c73;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c76) {\n          s1 = peg$c76;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c77); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c78();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c79) {\n            s1 = peg$c79;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c80); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c81();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c82) {\n              s1 = peg$c82;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c83); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c84();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 33) {\n                s1 = peg$c85;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c86); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s1 = peg$c88;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c89); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c90();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 8252) {\n                    s1 = peg$c91;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c75();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 8263) {\n                      s1 = peg$c93;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c78();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 8265) {\n                        s1 = peg$c95;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c81();\n                      }\n                      s0 = s1;\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 8264) {\n                          s1 = peg$c97;\n                          peg$currPos++;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c98); }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c84();\n                        }\n                        s0 = s1;\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 9633) {\n                            s1 = peg$c99;\n                            peg$currPos++;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c100); }\n                          }\n                          if (s1 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c101();\n                          }\n                          s0 = s1;\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 61) {\n                              s1 = peg$c66;\n                              peg$currPos++;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                            }\n                            if (s1 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c102();\n                            }\n                            s0 = s1;\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 8734) {\n                                s1 = peg$c103;\n                                peg$currPos++;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c104); }\n                              }\n                              if (s1 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c105();\n                              }\n                              s0 = s1;\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 10866) {\n                                  s1 = peg$c106;\n                                  peg$currPos++;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c107); }\n                                }\n                                if (s1 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c108();\n                                }\n                                s0 = s1;\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$currPos;\n                                  if (input.charCodeAt(peg$currPos) === 10865) {\n                                    s1 = peg$c109;\n                                    peg$currPos++;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c110); }\n                                  }\n                                  if (s1 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c111();\n                                  }\n                                  s0 = s1;\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$currPos;\n                                    if (input.charCodeAt(peg$currPos) === 177) {\n                                      s1 = peg$c112;\n                                      peg$currPos++;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c113); }\n                                    }\n                                    if (s1 !== peg$FAILED) {\n                                      peg$savedPos = s0;\n                                      s1 = peg$c114();\n                                    }\n                                    s0 = s1;\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$currPos;\n                                      if (input.charCodeAt(peg$currPos) === 8723) {\n                                        s1 = peg$c115;\n                                        peg$currPos++;\n                                      } else {\n                                        s1 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c116); }\n                                      }\n                                      if (s1 !== peg$FAILED) {\n                                        peg$savedPos = s0;\n                                        s1 = peg$c117();\n                                      }\n                                      s0 = s1;\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$currPos;\n                                        if (input.substr(peg$currPos, 2) === peg$c57) {\n                                          s1 = peg$c57;\n                                          peg$currPos += 2;\n                                        } else {\n                                          s1 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                        }\n                                        if (s1 !== peg$FAILED) {\n                                          peg$savedPos = s0;\n                                          s1 = peg$c118();\n                                        }\n                                        s0 = s1;\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$currPos;\n                                          if (input.substr(peg$currPos, 2) === peg$c119) {\n                                            s1 = peg$c119;\n                                            peg$currPos += 2;\n                                          } else {\n                                            s1 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c120); }\n                                          }\n                                          if (s1 !== peg$FAILED) {\n                                            peg$savedPos = s0;\n                                            s1 = peg$c121();\n                                          }\n                                          s0 = s1;\n                                          if (s0 === peg$FAILED) {\n                                            s0 = peg$currPos;\n                                            if (input.charCodeAt(peg$currPos) === 10752) {\n                                              s1 = peg$c122;\n                                              peg$currPos++;\n                                            } else {\n                                              s1 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c123); }\n                                            }\n                                            if (s1 !== peg$FAILED) {\n                                              peg$savedPos = s0;\n                                              s1 = peg$c124();\n                                            }\n                                            s0 = s1;\n                                            if (s0 === peg$FAILED) {\n                                              s0 = peg$currPos;\n                                              if (input.charCodeAt(peg$currPos) === 10227) {\n                                                s1 = peg$c125;\n                                                peg$currPos++;\n                                              } else {\n                                                s1 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c126); }\n                                              }\n                                              if (s1 !== peg$FAILED) {\n                                                peg$savedPos = s0;\n                                                s1 = peg$c127();\n                                              }\n                                              s0 = s1;\n                                              if (s0 === peg$FAILED) {\n                                                s0 = peg$currPos;\n                                                if (input.charCodeAt(peg$currPos) === 8594) {\n                                                  s1 = peg$c128;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c129); }\n                                                }\n                                                if (s1 !== peg$FAILED) {\n                                                  peg$savedPos = s0;\n                                                  s1 = peg$c130();\n                                                }\n                                                s0 = s1;\n                                                if (s0 === peg$FAILED) {\n                                                  s0 = peg$currPos;\n                                                  if (input.charCodeAt(peg$currPos) === 8593) {\n                                                    s1 = peg$c131;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c132); }\n                                                  }\n                                                  if (s1 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c133();\n                                                  }\n                                                  s0 = s1;\n                                                  if (s0 === peg$FAILED) {\n                                                    s0 = peg$currPos;\n                                                    if (input.charCodeAt(peg$currPos) === 8646) {\n                                                      s1 = peg$c134;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c135); }\n                                                    }\n                                                    if (s1 !== peg$FAILED) {\n                                                      peg$savedPos = s0;\n                                                      s1 = peg$c136();\n                                                    }\n                                                    s0 = s1;\n                                                    if (s0 === peg$FAILED) {\n                                                      s0 = peg$currPos;\n                                                      if (input.charCodeAt(peg$currPos) === 68) {\n                                                        s1 = peg$c137;\n                                                        peg$currPos++;\n                                                      } else {\n                                                        s1 = peg$FAILED;\n                                                        if (peg$silentFails === 0) { peg$fail(peg$c138); }\n                                                      }\n                                                      if (s1 !== peg$FAILED) {\n                                                        peg$savedPos = s0;\n                                                        s1 = peg$c139();\n                                                      }\n                                                      s0 = s1;\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsediscriminator() {\n    var s0;\n\n    s0 = peg$parsecolumn();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parserow();\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckdisc() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsediscriminator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestrike();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecolumn();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parserow();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveEllipse() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c38;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c38;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefigure() {\n    var s0;\n\n    if (peg$c140.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c141); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolumn() {\n    var s0;\n\n    if (peg$c142.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c143); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserow() {\n    var s0;\n\n    if (peg$c144.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c145); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestrike() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s0 = peg$c146;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestrikeOrDash() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s0 = peg$c146;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c148;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c149); }\n      }\n    }\n\n    return s0;\n  }\n\n\n      function makeInteger(o) {\n          return parseInt(o.join(\"\"), 10);\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n/*\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n*/\nexport class pgnParser {\n  static parse(history, options) {\n    return peg$parse(history, options)\n  }\n}", "/*\n * Copyright (c) 2022, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\nconst SYMBOLS = 'pnbrqkPNBRQK'\n\nconst DEFAULT_POSITION =\n    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\nconst TERMINATION_MARKERS = ['1-0', '0-1', '1/2-1/2', '*']\n\nconst PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15],\n}\n\nconst PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1],\n}\n\n// prettier-ignore\nconst ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n    0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n    0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n    0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n    0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n    0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n    0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n    0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n];\n\n// prettier-ignore\nconst RAYS = [\n    17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n    0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n    0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n    0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n    0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n    1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n    0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n    0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n    0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n    0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n    0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n];\n\nconst SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\nconst BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n}\n\nconst RANK_1 = 7\nconst RANK_2 = 6\nconst RANK_3 = 5\nconst RANK_4 = 4\nconst RANK_5 = 3\nconst RANK_6 = 2\nconst RANK_7 = 1\nconst RANK_8 = 0\n\n// prettier-ignore\nconst SQUARE_MAP = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n};\n\nconst ROOKS = {\n    w: [\n        { square: SQUARE_MAP.a1, flag: BITS.QSIDE_CASTLE },\n        { square: SQUARE_MAP.h1, flag: BITS.KSIDE_CASTLE },\n    ],\n    b: [\n        { square: SQUARE_MAP.a8, flag: BITS.QSIDE_CASTLE },\n        { square: SQUARE_MAP.h8, flag: BITS.KSIDE_CASTLE },\n    ],\n}\n\nconst PARSER_STRICT = 0\nconst PARSER_SLOPPY = 1\n\n/* this function is used to uniquely identify ambiguous moves */\nfunction get_disambiguator(move, moves) {\n    var from = move.from\n    var to = move.to\n    var piece = move.piece\n\n    var ambiguities = 0\n    var same_rank = 0\n    var same_file = 0\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n        var ambig_from = moves[i].from\n        var ambig_to = moves[i].to\n        var ambig_piece = moves[i].piece\n\n        /* if a move of the same piece type ends on the same to square, we'll\n         * need to add a disambiguator to the algebraic notation\n         */\n        if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n            ambiguities++\n\n            if (rank(from) === rank(ambig_from)) {\n                same_rank++\n            }\n\n            if (file(from) === file(ambig_from)) {\n                same_file++\n            }\n        }\n    }\n\n    if (ambiguities > 0) {\n        /* if there exists a similar moving piece on the same rank and file as\n         * the move in question, use the square as the disambiguator\n         */\n        if (same_rank > 0 && same_file > 0) {\n            return algebraic(from)\n        } else if (same_file > 0) {\n            /* if the moving piece rests on the same file, use the rank symbol as the\n             * disambiguator\n             */\n            return algebraic(from).charAt(1)\n        } else {\n            /* else use the file symbol */\n            return algebraic(from).charAt(0)\n        }\n    }\n\n    return ''\n}\n\nfunction infer_piece_type(san) {\n    var piece_type = san.charAt(0)\n    if (piece_type >= 'a' && piece_type <= 'h') {\n        var matches = san.match(/[a-h]\\d.*[a-h]\\d/)\n        if (matches) {\n            return undefined\n        }\n        return PAWN\n    }\n    piece_type = piece_type.toLowerCase()\n    if (piece_type === 'o') {\n        return KING\n    }\n    return piece_type\n}\n\n// parses all of the decorators out of a SAN string\nfunction stripped_san(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n}\n\n/*****************************************************************************\n * UTILITY FUNCTIONS\n ****************************************************************************/\nfunction rank(i) {\n    return i >> 4\n}\n\nfunction file(i) {\n    return i & 15\n}\n\nfunction algebraic(i) {\n    var f = file(i),\n        r = rank(i)\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n}\n\nfunction swap_color(c) {\n    return c === WHITE ? BLACK : WHITE\n}\n\nfunction is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1\n}\n\nfunction clone(obj) {\n    var dupe = obj instanceof Array ? [] : {}\n\n    for (var property in obj) {\n        if (typeof property === 'object') {\n            dupe[property] = clone(obj[property])\n        } else {\n            dupe[property] = obj[property]\n        }\n    }\n\n    return dupe\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\n/***************************************************************************\n * PUBLIC CONSTANTS\n **************************************************************************/\n\nexport const BLACK = 'b'\nexport const WHITE = 'w'\n\nexport const EMPTY = -1\n\nexport const PAWN = 'p'\nexport const KNIGHT = 'n'\nexport const BISHOP = 'b'\nexport const ROOK = 'r'\nexport const QUEEN = 'q'\nexport const KING = 'k'\n\nexport const SQUARES = (function () {\n    /* from the ECMA-262 spec (section 12.6.4):\n     * \"The mechanics of enumerating the properties ... is\n     * implementation dependent\"\n     * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n     * ordered correctly\n     */\n    var keys = []\n    for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n        if (i & 0x88) {\n            i += 7\n            continue\n        }\n        keys.push(algebraic(i))\n    }\n    return keys\n})()\n\nexport const FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n}\n\nexport const Chess = function (fen) {\n    var board = new Array(128)\n    var kings = { w: EMPTY, b: EMPTY }\n    var turn = WHITE\n    var castling = { w: 0, b: 0 }\n    var ep_square = EMPTY\n    var half_moves = 0\n    var move_number = 1\n    var history = []\n    var header = {}\n    var comments = {}\n\n    /* if the user passes in a fen string, load it, else default to\n     * starting position\n     */\n    if (typeof fen === 'undefined') {\n        load(DEFAULT_POSITION)\n    } else {\n        load(fen)\n    }\n\n    function clear(keep_headers) {\n        if (typeof keep_headers === 'undefined') {\n            keep_headers = false\n        }\n\n        board = new Array(128)\n        kings = { w: EMPTY, b: EMPTY }\n        turn = WHITE\n        castling = { w: 0, b: 0 }\n        ep_square = EMPTY\n        half_moves = 0\n        move_number = 1\n        history = []\n        if (!keep_headers) header = {}\n        comments = {}\n        update_setup(generate_fen())\n    }\n\n    function prune_comments() {\n        var reversed_history = []\n        var current_comments = {}\n        var copy_comment = function (fen) {\n            if (fen in comments) {\n                current_comments[fen] = comments[fen]\n            }\n        }\n        while (history.length > 0) {\n            reversed_history.push(undo_move())\n        }\n        copy_comment(generate_fen())\n        while (reversed_history.length > 0) {\n            make_move(reversed_history.pop())\n            copy_comment(generate_fen())\n        }\n        comments = current_comments\n    }\n\n    function reset() {\n        load(DEFAULT_POSITION)\n    }\n\n    function load(fen, keep_headers) {\n        if (typeof keep_headers === 'undefined') {\n            keep_headers = false\n        }\n\n        var tokens = fen.split(/\\s+/)\n        var position = tokens[0]\n        var square = 0\n\n        if (!validate_fen(fen).valid) {\n            return false\n        }\n\n        clear(keep_headers)\n\n        for (var i = 0; i < position.length; i++) {\n            var piece = position.charAt(i)\n\n            if (piece === '/') {\n                square += 8\n            } else if (is_digit(piece)) {\n                square += parseInt(piece, 10)\n            } else {\n                var color = piece < 'a' ? WHITE : BLACK\n                put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n                square++\n            }\n        }\n\n        turn = tokens[1]\n\n        if (tokens[2].indexOf('K') > -1) {\n            castling.w |= BITS.KSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            castling.w |= BITS.QSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            castling.b |= BITS.KSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            castling.b |= BITS.QSIDE_CASTLE\n        }\n\n        ep_square = tokens[3] === '-' ? EMPTY : SQUARE_MAP[tokens[3]]\n        half_moves = parseInt(tokens[4], 10)\n        move_number = parseInt(tokens[5], 10)\n\n        update_setup(generate_fen())\n\n        return true\n    }\n\n    /* TODO: this function is pretty much crap - it validates structure but\n     * completely ignores content (e.g. doesn't verify that each side has a king)\n     * ... we should rewrite this, and ditch the silly error_number field while\n     * we're at it\n     */\n    function validate_fen(fen) {\n        var errors = {\n            0: 'No errors.',\n            1: 'FEN string must contain six space-delimited fields.',\n            2: '6th field (move number) must be a positive integer.',\n            3: '5th field (half move counter) must be a non-negative integer.',\n            4: '4th field (en-passant square) is invalid.',\n            5: '3rd field (castling availability) is invalid.',\n            6: '2nd field (side to move) is invalid.',\n            7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n            8: '1st field (piece positions) is invalid [consecutive numbers].',\n            9: '1st field (piece positions) is invalid [invalid piece].',\n            10: '1st field (piece positions) is invalid [row too large].',\n            11: 'Illegal en-passant square',\n        }\n\n        /* 1st criterion: 6 space-seperated fields? */\n        var tokens = fen.split(/\\s+/)\n        if (tokens.length !== 6) {\n            return { valid: false, error_number: 1, error: errors[1] }\n        }\n\n        /* 2nd criterion: move number field is a integer value > 0? */\n        if (isNaN(parseInt(tokens[5])) || parseInt(tokens[5], 10) <= 0) {\n            return { valid: false, error_number: 2, error: errors[2] }\n        }\n\n        /* 3rd criterion: half move counter is an integer >= 0? */\n        if (isNaN(parseInt(tokens[4])) || parseInt(tokens[4], 10) < 0) {\n            return { valid: false, error_number: 3, error: errors[3] }\n        }\n\n        /* 4th criterion: 4th field is a valid e.p.-string? */\n        if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n            return { valid: false, error_number: 4, error: errors[4] }\n        }\n\n        /* 5th criterion: 3th field is a valid castle-string? */\n        if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n            return { valid: false, error_number: 5, error: errors[5] }\n        }\n\n        /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n        if (!/^(w|b)$/.test(tokens[1])) {\n            return { valid: false, error_number: 6, error: errors[6] }\n        }\n\n        /* 7th criterion: 1st field contains 8 rows? */\n        var rows = tokens[0].split('/')\n        if (rows.length !== 8) {\n            return { valid: false, error_number: 7, error: errors[7] }\n        }\n\n        /* 8th criterion: every row is valid? */\n        for (var i = 0; i < rows.length; i++) {\n            /* check for right sum of fields AND not two numbers in succession */\n            var sum_fields = 0\n            var previous_was_number = false\n\n            for (var k = 0; k < rows[i].length; k++) {\n                if (!isNaN(rows[i][k])) {\n                    if (previous_was_number) {\n                        return { valid: false, error_number: 8, error: errors[8] }\n                    }\n                    sum_fields += parseInt(rows[i][k], 10)\n                    previous_was_number = true\n                } else {\n                    if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                        return { valid: false, error_number: 9, error: errors[9] }\n                    }\n                    sum_fields += 1\n                    previous_was_number = false\n                }\n            }\n            if (sum_fields !== 8) {\n                return { valid: false, error_number: 10, error: errors[10] }\n            }\n        }\n\n        if (\n            (tokens[3][1] == '3' && tokens[1] == 'w') ||\n            (tokens[3][1] == '6' && tokens[1] == 'b')\n        ) {\n            return { valid: false, error_number: 11, error: errors[11] }\n        }\n\n        /* everything's okay! */\n        return { valid: true, error_number: 0, error: errors[0] }\n    }\n\n    function generate_fen() {\n        var empty = 0\n        var fen = ''\n\n        for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n            if (board[i] == null) {\n                empty++\n            } else {\n                if (empty > 0) {\n                    fen += empty\n                    empty = 0\n                }\n                var color = board[i].color\n                var piece = board[i].type\n\n                fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n            }\n\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty\n                }\n\n                if (i !== SQUARE_MAP.h1) {\n                    fen += '/'\n                }\n\n                empty = 0\n                i += 8\n            }\n        }\n\n        var cflags = ''\n        if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n            cflags += 'K'\n        }\n        if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n            cflags += 'Q'\n        }\n        if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n            cflags += 'k'\n        }\n        if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n            cflags += 'q'\n        }\n\n        /* do we have an empty castling flag? */\n        cflags = cflags || '-'\n        var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\n        return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n    }\n\n    function set_header(args) {\n        for (var i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n                header[args[i]] = args[i + 1]\n            }\n        }\n        return header\n    }\n\n    /* called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object.  if the FEN is\n     * equal to the default position, the SetUp and FEN are deleted\n     * the setup is only updated if history.length is zero, ie moves haven't been\n     * made.\n     */\n    function update_setup(fen) {\n        if (history.length > 0) return\n\n        if (fen !== DEFAULT_POSITION) {\n            header['SetUp'] = '1'\n            header['FEN'] = fen\n        } else {\n            delete header['SetUp']\n            delete header['FEN']\n        }\n    }\n\n    function get(square) {\n        var piece = board[SQUARE_MAP[square]]\n        return piece ? { type: piece.type, color: piece.color } : null\n    }\n\n    function put(piece, square) {\n        /* check for valid piece object */\n        if (!('type' in piece && 'color' in piece)) {\n            return false\n        }\n\n        /* check for piece */\n        if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n            return false\n        }\n\n        /* check for valid square */\n        if (!(square in SQUARE_MAP)) {\n            return false\n        }\n\n        var sq = SQUARE_MAP[square]\n\n        /* don't let the user place more than one king */\n        if (\n            piece.type == KING &&\n            !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n        ) {\n            return false\n        }\n\n        board[sq] = { type: piece.type, color: piece.color }\n        if (piece.type === KING) {\n            kings[piece.color] = sq\n        }\n\n        update_setup(generate_fen())\n\n        return true\n    }\n\n    function remove(square) {\n        var piece = get(square)\n        board[SQUARE_MAP[square]] = null\n        if (piece && piece.type === KING) {\n            kings[piece.color] = EMPTY\n        }\n\n        update_setup(generate_fen())\n\n        return piece\n    }\n\n    function build_move(board, from, to, flags, promotion) {\n        var move = {\n            color: turn,\n            from: from,\n            to: to,\n            flags: flags,\n            piece: board[from].type,\n        }\n\n        if (promotion) {\n            move.flags |= BITS.PROMOTION\n            move.promotion = promotion\n        }\n\n        if (board[to]) {\n            move.captured = board[to].type\n        } else if (flags & BITS.EP_CAPTURE) {\n            move.captured = PAWN\n        }\n        return move\n    }\n\n    function generate_moves(options) {\n        function add_move(board, moves, from, to, flags) {\n            /* if pawn promotion */\n            if (\n                board[from].type === PAWN &&\n                (rank(to) === RANK_8 || rank(to) === RANK_1)\n            ) {\n                var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n                for (var i = 0, len = pieces.length; i < len; i++) {\n                    moves.push(build_move(board, from, to, flags, pieces[i]))\n                }\n            } else {\n                moves.push(build_move(board, from, to, flags))\n            }\n        }\n\n        var moves = []\n        var us = turn\n        var them = swap_color(us)\n        var second_rank = { b: RANK_7, w: RANK_2 }\n\n        var first_sq = SQUARE_MAP.a8\n        var last_sq = SQUARE_MAP.h1\n        var single_square = false\n\n        /* do we want legal moves? */\n        var legal =\n            typeof options !== 'undefined' && 'legal' in options\n                ? options.legal\n                : true\n\n        var piece_type =\n            typeof options !== 'undefined' &&\n            'piece' in options &&\n            typeof options.piece === 'string'\n                ? options.piece.toLowerCase()\n                : true\n\n        /* are we generating moves for a single square? */\n        if (typeof options !== 'undefined' && 'square' in options) {\n            if (options.square in SQUARE_MAP) {\n                first_sq = last_sq = SQUARE_MAP[options.square]\n                single_square = true\n            } else {\n                /* invalid square */\n                return []\n            }\n        }\n\n        for (var i = first_sq; i <= last_sq; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            var piece = board[i]\n            if (piece == null || piece.color !== us) {\n                continue\n            }\n\n            if (piece.type === PAWN && (piece_type === true || piece_type === PAWN)) {\n                /* single square, non-capturing */\n                var square = i + PAWN_OFFSETS[us][0]\n                if (board[square] == null) {\n                    add_move(board, moves, i, square, BITS.NORMAL)\n\n                    /* double square */\n                    var square = i + PAWN_OFFSETS[us][1]\n                    if (second_rank[us] === rank(i) && board[square] == null) {\n                        add_move(board, moves, i, square, BITS.BIG_PAWN)\n                    }\n                }\n\n                /* pawn captures */\n                for (j = 2; j < 4; j++) {\n                    var square = i + PAWN_OFFSETS[us][j]\n                    if (square & 0x88) continue\n\n                    if (board[square] != null && board[square].color === them) {\n                        add_move(board, moves, i, square, BITS.CAPTURE)\n                    } else if (square === ep_square) {\n                        add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n                    }\n                }\n            } else if (piece_type === true || piece_type === piece.type) {\n                for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n                    var offset = PIECE_OFFSETS[piece.type][j]\n                    var square = i\n\n                    while (true) {\n                        square += offset\n                        if (square & 0x88) break\n\n                        if (board[square] == null) {\n                            add_move(board, moves, i, square, BITS.NORMAL)\n                        } else {\n                            if (board[square].color === us) break\n                            add_move(board, moves, i, square, BITS.CAPTURE)\n                            break\n                        }\n\n                        /* break, if knight or king */\n                        if (piece.type === 'n' || piece.type === 'k') break\n                    }\n                }\n            }\n        }\n\n        /* check for castling if: a) we're generating all moves, or b) we're doing\n         * single square move generation on the king's square\n         */\n        if (piece_type === true || piece_type === KING) {\n            if (!single_square || last_sq === kings[us]) {\n                /* king-side castling */\n                if (castling[us] & BITS.KSIDE_CASTLE) {\n                    var castling_from = kings[us]\n                    var castling_to = castling_from + 2\n\n                    if (\n                        board[castling_from + 1] == null &&\n                        board[castling_to] == null &&\n                        !attacked(them, kings[us]) &&\n                        !attacked(them, castling_from + 1) &&\n                        !attacked(them, castling_to)\n                    ) {\n                        add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n                    }\n                }\n\n                /* queen-side castling */\n                if (castling[us] & BITS.QSIDE_CASTLE) {\n                    var castling_from = kings[us]\n                    var castling_to = castling_from - 2\n\n                    if (\n                        board[castling_from - 1] == null &&\n                        board[castling_from - 2] == null &&\n                        board[castling_from - 3] == null &&\n                        !attacked(them, kings[us]) &&\n                        !attacked(them, castling_from - 1) &&\n                        !attacked(them, castling_to)\n                    ) {\n                        add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n                    }\n                }\n            }\n        }\n\n        /* return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal) {\n            return moves\n        }\n\n        /* filter out illegal moves */\n        var legal_moves = []\n        for (var i = 0, len = moves.length; i < len; i++) {\n            make_move(moves[i])\n            if (!king_attacked(us)) {\n                legal_moves.push(moves[i])\n            }\n            undo_move()\n        }\n\n        return legal_moves\n    }\n\n    /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n     * disambiguation bugs in Fritz and Chessbase.  See below:\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    function move_to_san(move, moves) {\n        var output = ''\n\n        if (move.flags & BITS.KSIDE_CASTLE) {\n            output = 'O-O'\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\n            output = 'O-O-O'\n        } else {\n            if (move.piece !== PAWN) {\n                var disambiguator = get_disambiguator(move, moves)\n                output += move.piece.toUpperCase() + disambiguator\n            }\n\n            if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n                if (move.piece === PAWN) {\n                    output += algebraic(move.from)[0]\n                }\n                output += 'x'\n            }\n\n            output += algebraic(move.to)\n\n            if (move.flags & BITS.PROMOTION) {\n                output += '=' + move.promotion.toUpperCase()\n            }\n        }\n\n        make_move(move)\n        if (in_check()) {\n            if (in_checkmate()) {\n                output += '#'\n            } else {\n                output += '+'\n            }\n        }\n        undo_move()\n\n        return output\n    }\n\n    function attacked(color, square) {\n        for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            /* if empty square or wrong color */\n            if (board[i] == null || board[i].color !== color) continue\n\n            var piece = board[i]\n            var difference = i - square\n            var index = difference + 119\n\n            if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n                if (piece.type === PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === WHITE) return true\n                    } else {\n                        if (piece.color === BLACK) return true\n                    }\n                    continue\n                }\n\n                /* if the piece is a knight or a king */\n                if (piece.type === 'n' || piece.type === 'k') return true\n\n                var offset = RAYS[index]\n                var j = i + offset\n\n                var blocked = false\n                while (j !== square) {\n                    if (board[j] != null) {\n                        blocked = true\n                        break\n                    }\n                    j += offset\n                }\n\n                if (!blocked) return true\n            }\n        }\n\n        return false\n    }\n\n    function king_attacked(color) {\n        return attacked(swap_color(color), kings[color])\n    }\n\n    function in_check() {\n        return king_attacked(turn)\n    }\n\n    function in_checkmate() {\n        return in_check() && generate_moves().length === 0\n    }\n\n    function in_stalemate() {\n        return !in_check() && generate_moves().length === 0\n    }\n\n    function insufficient_material() {\n        var pieces = {}\n        var bishops = []\n        var num_pieces = 0\n        var sq_color = 0\n\n        for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n            sq_color = (sq_color + 1) % 2\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            var piece = board[i]\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n                if (piece.type === BISHOP) {\n                    bishops.push(sq_color)\n                }\n                num_pieces++\n            }\n        }\n\n        /* k vs. k */\n        if (num_pieces === 2) {\n            return true\n        } else if (\n            /* k vs. kn .... or .... k vs. kb */\n            num_pieces === 3 &&\n            (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n        ) {\n            return true\n        } else if (num_pieces === pieces[BISHOP] + 2) {\n            /* kb vs. kb where any number of bishops are all on the same color */\n            var sum = 0\n            var len = bishops.length\n            for (var i = 0; i < len; i++) {\n                sum += bishops[i]\n            }\n            if (sum === 0 || sum === len) {\n                return true\n            }\n        }\n\n        return false\n    }\n\n    function in_threefold_repetition() {\n        /* TODO: while this function is fine for casual use, a better\n         * implementation would use a Zobrist key (instead of FEN). the\n         * Zobrist key would be maintained in the make_move/undo_move functions,\n         * avoiding the costly that we do below.\n         */\n        var moves = []\n        var positions = {}\n        var repetition = false\n\n        while (true) {\n            var move = undo_move()\n            if (!move) break\n            moves.push(move)\n        }\n\n        while (true) {\n            /* remove the last two fields in the FEN string, they're not needed\n             * when checking for draw by rep */\n            var fen = generate_fen().split(' ').slice(0, 4).join(' ')\n\n            /* has the position occurred three or move times */\n            positions[fen] = fen in positions ? positions[fen] + 1 : 1\n            if (positions[fen] >= 3) {\n                repetition = true\n            }\n\n            if (!moves.length) {\n                break\n            }\n            make_move(moves.pop())\n        }\n\n        return repetition\n    }\n\n    function push(move) {\n        history.push({\n            move: move,\n            kings: { b: kings.b, w: kings.w },\n            turn: turn,\n            castling: { b: castling.b, w: castling.w },\n            ep_square: ep_square,\n            half_moves: half_moves,\n            move_number: move_number,\n        })\n    }\n\n    function make_move(move) {\n        var us = turn\n        var them = swap_color(us)\n        push(move)\n\n        board[move.to] = board[move.from]\n        board[move.from] = null\n\n        /* if ep capture, remove the captured pawn */\n        if (move.flags & BITS.EP_CAPTURE) {\n            if (turn === BLACK) {\n                board[move.to - 16] = null\n            } else {\n                board[move.to + 16] = null\n            }\n        }\n\n        /* if pawn promotion, replace with new piece */\n        if (move.flags & BITS.PROMOTION) {\n            board[move.to] = { type: move.promotion, color: us }\n        }\n\n        /* if we moved the king */\n        if (board[move.to].type === KING) {\n            kings[board[move.to].color] = move.to\n\n            /* if we castled, move the rook next to the king */\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                var castling_to = move.to - 1\n                var castling_from = move.to + 1\n                board[castling_to] = board[castling_from]\n                board[castling_from] = null\n            } else if (move.flags & BITS.QSIDE_CASTLE) {\n                var castling_to = move.to + 1\n                var castling_from = move.to - 2\n                board[castling_to] = board[castling_from]\n                board[castling_from] = null\n            }\n\n            /* turn off castling */\n            castling[us] = ''\n        }\n\n        /* turn off castling if we move a rook */\n        if (castling[us]) {\n            for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n                if (\n                    move.from === ROOKS[us][i].square &&\n                    castling[us] & ROOKS[us][i].flag\n                ) {\n                    castling[us] ^= ROOKS[us][i].flag\n                    break\n                }\n            }\n        }\n\n        /* turn off castling if we capture a rook */\n        if (castling[them]) {\n            for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n                if (\n                    move.to === ROOKS[them][i].square &&\n                    castling[them] & ROOKS[them][i].flag\n                ) {\n                    castling[them] ^= ROOKS[them][i].flag\n                    break\n                }\n            }\n        }\n\n        /* if big pawn move, update the en passant square */\n        if (move.flags & BITS.BIG_PAWN) {\n            if (turn === 'b') {\n                ep_square = move.to - 16\n            } else {\n                ep_square = move.to + 16\n            }\n        } else {\n            ep_square = EMPTY\n        }\n\n        /* reset the 50 move counter if a pawn is moved or a piece is captured */\n        if (move.piece === PAWN) {\n            half_moves = 0\n        } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n            half_moves = 0\n        } else {\n            half_moves++\n        }\n\n        if (turn === BLACK) {\n            move_number++\n        }\n        turn = swap_color(turn)\n    }\n\n    function undo_move() {\n        var old = history.pop()\n        if (old == null) {\n            return null\n        }\n\n        var move = old.move\n        kings = old.kings\n        turn = old.turn\n        castling = old.castling\n        ep_square = old.ep_square\n        half_moves = old.half_moves\n        move_number = old.move_number\n\n        var us = turn\n        var them = swap_color(turn)\n\n        board[move.from] = board[move.to]\n        board[move.from].type = move.piece // to undo any promotions\n        board[move.to] = null\n\n        if (move.flags & BITS.CAPTURE) {\n            board[move.to] = { type: move.captured, color: them }\n        } else if (move.flags & BITS.EP_CAPTURE) {\n            var index\n            if (us === BLACK) {\n                index = move.to - 16\n            } else {\n                index = move.to + 16\n            }\n            board[index] = { type: PAWN, color: them }\n        }\n\n        if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n            var castling_to, castling_from\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                castling_to = move.to + 1\n                castling_from = move.to - 1\n            } else if (move.flags & BITS.QSIDE_CASTLE) {\n                castling_to = move.to - 2\n                castling_from = move.to + 1\n            }\n\n            board[castling_to] = board[castling_from]\n            board[castling_from] = null\n        }\n\n        return move\n    }\n\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    function move_from_san(move, sloppy) {\n        // strip off any move decorations: e.g Nf3+?! becomes Nf3\n        var clean_move = stripped_san(move)\n\n        // the move parsers is a 2-step state\n        for (var parser = 0; parser < 2; parser++) {\n            if (parser == PARSER_SLOPPY) {\n                // only run the sloppy parse if explicitly requested\n                if (!sloppy) {\n                    return null\n                }\n\n                // The sloppy parser allows the user to parse non-standard chess\n                // notations. This parser is opt-in (by specifying the\n                // '{ sloppy: true }' setting) and is only run after the Standard\n                // Algebraic Notation (SAN) parser has failed.\n                //\n                // When running the sloppy parser, we'll run a regex to grab the piece,\n                // the to/from square, and an optional promotion piece. This regex will\n                // parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n                // f7f8q, b1c3\n\n                // NOTE: Some positions and moves may be ambiguous when using the\n                // sloppy parser. For example, in this position:\n                // 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1, the move b1c3 may be interpreted\n                // as Nc3 or B1c3 (a disambiguated bishop move). In these cases, the\n                // sloppy parser will default to the most most basic interpretation\n                // (which is b1c3 parsing to Nc3).\n\n                // FIXME: these var's are hoisted into function scope, this will need\n                // to change when switching to const/let\n\n                var overly_disambiguated = false\n\n                var matches = clean_move.match(\n                    /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n                )\n                if (matches) {\n                    var piece = matches[1]\n                    var from = matches[2]\n                    var to = matches[3]\n                    var promotion = matches[4]\n\n                    if (from.length == 1) {\n                        overly_disambiguated = true\n                    }\n                } else {\n                    // The [a-h]?[1-8]? portion of the regex below handles moves that may\n                    // be overly disambiguated (e.g. Nge7 is unnecessary and non-standard\n                    // when there is one legal knight move to e7). In this case, the value\n                    // of 'from' variable will be a rank or file, not a square.\n                    var matches = clean_move.match(\n                        /([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/\n                    )\n\n                    if (matches) {\n                        var piece = matches[1]\n                        var from = matches[2]\n                        var to = matches[3]\n                        var promotion = matches[4]\n\n                        if (from.length == 1) {\n                            var overly_disambiguated = true\n                        }\n                    }\n                }\n            }\n\n            var piece_type = infer_piece_type(clean_move)\n            var moves = generate_moves({\n                legal: true,\n                piece: piece ? piece : piece_type,\n            })\n\n            for (var i = 0, len = moves.length; i < len; i++) {\n                switch (parser) {\n                    case PARSER_STRICT: {\n                        if (clean_move === stripped_san(move_to_san(moves[i], moves))) {\n                            return moves[i]\n                        }\n                        break\n                    }\n                    case PARSER_SLOPPY: {\n                        if (matches) {\n                            // hand-compare move properties with the results from our sloppy\n                            // regex\n                            if (\n                                (!piece || piece.toLowerCase() == moves[i].piece) &&\n                                SQUARE_MAP[from] == moves[i].from &&\n                                SQUARE_MAP[to] == moves[i].to &&\n                                (!promotion || promotion.toLowerCase() == moves[i].promotion)\n                            ) {\n                                return moves[i]\n                            } else if (overly_disambiguated) {\n                                // SPECIAL CASE: we parsed a move string that may have an\n                                // unneeded rank/file disambiguator (e.g. Nge7).  The 'from'\n                                // variable will\n                                var square = algebraic(moves[i].from)\n                                if (\n                                    (!piece || piece.toLowerCase() == moves[i].piece) &&\n                                    SQUARE_MAP[to] == moves[i].to &&\n                                    (from == square[0] || from == square[1]) &&\n                                    (!promotion || promotion.toLowerCase() == moves[i].promotion)\n                                ) {\n                                    return moves[i]\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null\n    }\n\n    /* pretty = external move object */\n    function make_pretty(ugly_move) {\n        var move = clone(ugly_move)\n        move.san = move_to_san(move, generate_moves({ legal: true }))\n        move.to = algebraic(move.to)\n        move.from = algebraic(move.from)\n\n        var flags = ''\n\n        for (var flag in BITS) {\n            if (BITS[flag] & move.flags) {\n                flags += FLAGS[flag]\n            }\n        }\n        move.flags = flags\n\n        return move\n    }\n\n    /*****************************************************************************\n     * DEBUGGING UTILITIES\n     ****************************************************************************/\n    function perft(depth) {\n        var moves = generate_moves({ legal: false })\n        var nodes = 0\n        var color = turn\n\n        for (var i = 0, len = moves.length; i < len; i++) {\n            make_move(moves[i])\n            if (!king_attacked(color)) {\n                if (depth - 1 > 0) {\n                    var child_nodes = perft(depth - 1)\n                    nodes += child_nodes\n                } else {\n                    nodes++\n                }\n            }\n            undo_move()\n        }\n\n        return nodes\n    }\n\n    return {\n        /***************************************************************************\n         * PUBLIC API\n         **************************************************************************/\n        load: function (fen) {\n            return load(fen)\n        },\n\n        reset: function () {\n            return reset()\n        },\n\n        moves: function (options) {\n            /* The internal representation of a chess move is in 0x88 format, and\n             * not meant to be human-readable.  The code below converts the 0x88\n             * square coordinates to algebraic coordinates.  It also prunes an\n             * unnecessary move keys resulting from a verbose call.\n             */\n\n            var ugly_moves = generate_moves(options)\n            var moves = []\n\n            for (var i = 0, len = ugly_moves.length; i < len; i++) {\n                /* does the user want a full move object (most likely not), or just\n                 * SAN\n                 */\n                if (\n                    typeof options !== 'undefined' &&\n                    'verbose' in options &&\n                    options.verbose\n                ) {\n                    moves.push(make_pretty(ugly_moves[i]))\n                } else {\n                    moves.push(\n                        move_to_san(ugly_moves[i], generate_moves({ legal: true }))\n                    )\n                }\n            }\n\n            return moves\n        },\n\n        in_check: function () {\n            return in_check()\n        },\n\n        in_checkmate: function () {\n            return in_checkmate()\n        },\n\n        in_stalemate: function () {\n            return in_stalemate()\n        },\n\n        in_draw: function () {\n            return (\n                half_moves >= 100 ||\n                in_stalemate() ||\n                insufficient_material() ||\n                in_threefold_repetition()\n            )\n        },\n\n        insufficient_material: function () {\n            return insufficient_material()\n        },\n\n        in_threefold_repetition: function () {\n            return in_threefold_repetition()\n        },\n\n        game_over: function () {\n            return (\n                half_moves >= 100 ||\n                in_checkmate() ||\n                in_stalemate() ||\n                insufficient_material() ||\n                in_threefold_repetition()\n            )\n        },\n\n        validate_fen: function (fen) {\n            return validate_fen(fen)\n        },\n\n        fen: function () {\n            return generate_fen()\n        },\n\n        board: function () {\n            var output = [],\n                row = []\n\n            for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n                if (board[i] == null) {\n                    row.push(null)\n                } else {\n                    row.push({\n                        square: algebraic(i),\n                        type: board[i].type,\n                        color: board[i].color,\n                    })\n                }\n                if ((i + 1) & 0x88) {\n                    output.push(row)\n                    row = []\n                    i += 8\n                }\n            }\n\n            return output\n        },\n\n        pgn: function (options) {\n            /* using the specification from http://www.chessclub.com/help/PGN-spec\n             * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n             */\n            var newline =\n                typeof options === 'object' && typeof options.newline_char === 'string'\n                    ? options.newline_char\n                    : '\\n'\n            var max_width =\n                typeof options === 'object' && typeof options.max_width === 'number'\n                    ? options.max_width\n                    : 0\n            var result = []\n            var header_exists = false\n\n            /* add the PGN header information */\n            for (var i in header) {\n                /* TODO: order of enumerated properties in header object is not\n                 * guaranteed, see ECMA-262 spec (section 12.6.4)\n                 */\n                result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n                header_exists = true\n            }\n\n            if (header_exists && history.length) {\n                result.push(newline)\n            }\n\n            var append_comment = function (move_string) {\n                var comment = comments[generate_fen()]\n                if (typeof comment !== 'undefined') {\n                    var delimiter = move_string.length > 0 ? ' ' : ''\n                    move_string = `${move_string}${delimiter}{${comment}}`\n                }\n                return move_string\n            }\n\n            /* pop all of history onto reversed_history */\n            var reversed_history = []\n            while (history.length > 0) {\n                reversed_history.push(undo_move())\n            }\n\n            var moves = []\n            var move_string = ''\n\n            /* special case of a commented starting position with no moves */\n            if (reversed_history.length === 0) {\n                moves.push(append_comment(''))\n            }\n\n            /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n            while (reversed_history.length > 0) {\n                move_string = append_comment(move_string)\n                var move = reversed_history.pop()\n\n                /* if the position started with black to move, start PGN with #. ... */\n                if (!history.length && move.color === 'b') {\n                    const prefix = `${move_number}. ...`\n                    /* is there a comment preceding the first move? */\n                    move_string = move_string ? `${move_string} ${prefix}` : prefix\n                } else if (move.color === 'w') {\n                    /* store the previous generated move_string if we have one */\n                    if (move_string.length) {\n                        moves.push(move_string)\n                    }\n                    move_string = move_number + '.'\n                }\n\n                move_string =\n                    move_string + ' ' + move_to_san(move, generate_moves({ legal: true }))\n                make_move(move)\n            }\n\n            /* are there any other leftover moves? */\n            if (move_string.length) {\n                moves.push(append_comment(move_string))\n            }\n\n            /* is there a result? */\n            if (typeof header.Result !== 'undefined') {\n                moves.push(header.Result)\n            }\n\n            /* history should be back to what it was before we started generating PGN,\n             * so join together moves\n             */\n            if (max_width === 0) {\n                return result.join('') + moves.join(' ')\n            }\n\n            var strip = function () {\n                if (result.length > 0 && result[result.length - 1] === ' ') {\n                    result.pop()\n                    return true\n                }\n                return false\n            }\n\n            /* NB: this does not preserve comment whitespace. */\n            var wrap_comment = function (width, move) {\n                for (var token of move.split(' ')) {\n                    if (!token) {\n                        continue\n                    }\n                    if (width + token.length > max_width) {\n                        while (strip()) {\n                            width--\n                        }\n                        result.push(newline)\n                        width = 0\n                    }\n                    result.push(token)\n                    width += token.length\n                    result.push(' ')\n                    width++\n                }\n                if (strip()) {\n                    width--\n                }\n                return width\n            }\n\n            /* wrap the PGN output at max_width */\n            var current_width = 0\n            for (var i = 0; i < moves.length; i++) {\n                if (current_width + moves[i].length > max_width) {\n                    if (moves[i].includes('{')) {\n                        current_width = wrap_comment(current_width, moves[i])\n                        continue\n                    }\n                }\n                /* if the current move will push past max_width */\n                if (current_width + moves[i].length > max_width && i !== 0) {\n                    /* don't end the line with whitespace */\n                    if (result[result.length - 1] === ' ') {\n                        result.pop()\n                    }\n\n                    result.push(newline)\n                    current_width = 0\n                } else if (i !== 0) {\n                    result.push(' ')\n                    current_width++\n                }\n                result.push(moves[i])\n                current_width += moves[i].length\n            }\n\n            return result.join('')\n        },\n\n        load_pgn: function (pgn, options) {\n            // allow the user to specify the sloppy move parser to work around over\n            // disambiguation bugs in Fritz and Chessbase\n            var sloppy =\n                typeof options !== 'undefined' && 'sloppy' in options\n                    ? options.sloppy\n                    : false\n\n            function mask(str) {\n                return str.replace(/\\\\/g, '\\\\')\n            }\n\n            function parse_pgn_header(header, options) {\n                var newline_char =\n                    typeof options === 'object' &&\n                    typeof options.newline_char === 'string'\n                        ? options.newline_char\n                        : '\\r?\\n'\n                var header_obj = {}\n                var headers = header.split(new RegExp(mask(newline_char)))\n                var key = ''\n                var value = ''\n\n                for (var i = 0; i < headers.length; i++) {\n                    var regex = /^\\s*\\[([A-Za-z]+)\\s*\"(.*)\"\\s*\\]\\s*$/\n                    key = headers[i].replace(regex, '$1')\n                    value = headers[i].replace(regex, '$2')\n                    if (trim(key).length > 0) {\n                        header_obj[key] = value\n                    }\n                }\n\n                return header_obj\n            }\n\n            // strip whitespace from head/tail of PGN block\n            pgn = pgn.trim()\n\n            var newline_char =\n                typeof options === 'object' && typeof options.newline_char === 'string'\n                    ? options.newline_char\n                    : '\\r?\\n'\n\n            // RegExp to split header. Takes advantage of the fact that header and movetext\n            // will always have a blank line between them (ie, two newline_char's).\n            // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\s*\\r?\\n){2}/\n            var header_regex = new RegExp(\n                '^(\\\\[((?:' +\n                mask(newline_char) +\n                ')|.)*\\\\])' +\n                '(?:\\\\s*' +\n                mask(newline_char) +\n                '){2}'\n            )\n\n            // If no header given, begin with moves.\n            var header_string = header_regex.test(pgn)\n                ? header_regex.exec(pgn)[1]\n                : ''\n\n            // Put the board in the starting position\n            reset()\n\n            /* parse PGN header */\n            var headers = parse_pgn_header(header_string, options)\n            var fen = ''\n\n            for (var key in headers) {\n                // check to see user is including fen (possibly with wrong tag case)\n                if (key.toLowerCase() === 'fen') {\n                    fen = headers[key]\n                }\n                set_header([key, headers[key]])\n            }\n\n            /* sloppy parser should attempt to load a fen tag, even if it's\n             * the wrong case and doesn't include a corresponding [SetUp \"1\"] tag */\n            if (sloppy) {\n                if (fen) {\n                    if (!load(fen, true)) {\n                        return false\n                    }\n                }\n            } else {\n                /* strict parser - load the starting position indicated by [Setup '1']\n                 * and [FEN position] */\n                if (headers['SetUp'] === '1') {\n                    if (!('FEN' in headers && load(headers['FEN'], true))) {\n                        // second argument to load: don't clear the headers\n                        return false\n                    }\n                }\n            }\n\n            /* NB: the regexes below that delete move numbers, recursive\n             * annotations, and numeric annotation glyphs may also match\n             * text in comments. To prevent this, we transform comments\n             * by hex-encoding them in place and decoding them again after\n             * the other tokens have been deleted.\n             *\n             * While the spec states that PGN files should be ASCII encoded,\n             * we use {en,de}codeURIComponent here to support arbitrary UTF8\n             * as a convenience for modern users */\n\n            var to_hex = function (string) {\n                return Array.from(string)\n                    .map(function (c) {\n                        /* encodeURI doesn't transform most ASCII characters,\n                         * so we handle these ourselves */\n                        return c.charCodeAt(0) < 128\n                            ? c.charCodeAt(0).toString(16)\n                            : encodeURIComponent(c).replace(/\\%/g, '').toLowerCase()\n                    })\n                    .join('')\n            }\n\n            var from_hex = function (string) {\n                return string.length == 0\n                    ? ''\n                    : decodeURIComponent('%' + string.match(/.{1,2}/g).join('%'))\n            }\n\n            var encode_comment = function (string) {\n                string = string.replace(new RegExp(mask(newline_char), 'g'), ' ')\n                return `{${to_hex(string.slice(1, string.length - 1))}}`\n            }\n\n            var decode_comment = function (string) {\n                if (string.startsWith('{') && string.endsWith('}')) {\n                    return from_hex(string.slice(1, string.length - 1))\n                }\n            }\n\n            /* delete header to get the moves */\n            var ms = pgn\n                .replace(header_string, '')\n                .replace(\n                    /* encode comments so they don't get deleted below */\n                    new RegExp(`(\\{[^}]*\\})+?|;([^${mask(newline_char)}]*)`, 'g'),\n                    function (match, bracket, semicolon) {\n                        return bracket !== undefined\n                            ? encode_comment(bracket)\n                            : ' ' + encode_comment(`{${semicolon.slice(1)}}`)\n                    }\n                )\n                .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\n            /* delete recursive annotation variations */\n            var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n            while (rav_regex.test(ms)) {\n                ms = ms.replace(rav_regex, '')\n            }\n\n            /* delete move numbers */\n            ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n            /* delete ... indicating black to move */\n            ms = ms.replace(/\\.\\.\\./g, '')\n\n            /* delete numeric annotation glyphs */\n            ms = ms.replace(/\\$\\d+/g, '')\n\n            /* trim and get array of moves */\n            var moves = trim(ms).split(new RegExp(/\\s+/))\n\n            /* delete empty entries */\n            moves = moves.join(',').replace(/,,+/g, ',').split(',')\n            var move = ''\n\n            var result = ''\n\n            for (var half_move = 0; half_move < moves.length; half_move++) {\n                var comment = decode_comment(moves[half_move])\n                if (comment !== undefined) {\n                    comments[generate_fen()] = comment\n                    continue\n                }\n\n                move = move_from_san(moves[half_move], sloppy)\n\n                /* invalid move */\n                if (move == null) {\n                    /* was the move an end of game marker */\n                    if (TERMINATION_MARKERS.indexOf(moves[half_move]) > -1) {\n                        result = moves[half_move]\n                    } else {\n                        return false\n                    }\n                } else {\n                    /* reset the end of game marker if making a valid move */\n                    result = ''\n                    make_move(move)\n                }\n            }\n\n            /* Per section 8.2.6 of the PGN spec, the Result tag pair must match\n             * match the termination marker. Only do this when headers are present,\n             * but the result tag is missing\n             */\n            if (result && Object.keys(header).length && !header['Result']) {\n                set_header(['Result', result])\n            }\n\n            return true\n        },\n\n        header: function () {\n            return set_header(arguments)\n        },\n\n        turn: function () {\n            return turn\n        },\n\n        move: function (move, options) {\n            /* The move function can be called with in the following parameters:\n             *\n             * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n             *\n             * .move({ from: 'h7', <- where the 'move' is a move object (additional\n             *         to :'h8',      fields are ignored)\n             *         promotion: 'q',\n             *      })\n             */\n\n            // allow the user to specify the sloppy move parser to work around over\n            // disambiguation bugs in Fritz and Chessbase\n            var sloppy =\n                typeof options !== 'undefined' && 'sloppy' in options\n                    ? options.sloppy\n                    : false\n\n            var move_obj = null\n\n            if (typeof move === 'string') {\n                move_obj = move_from_san(move, sloppy)\n            } else if (typeof move === 'object') {\n                var moves = generate_moves()\n\n                /* convert the pretty move object to an ugly move object */\n                for (var i = 0, len = moves.length; i < len; i++) {\n                    if (\n                        move.from === algebraic(moves[i].from) &&\n                        move.to === algebraic(moves[i].to) &&\n                        (!('promotion' in moves[i]) ||\n                            move.promotion === moves[i].promotion)\n                    ) {\n                        move_obj = moves[i]\n                        break\n                    }\n                }\n            }\n\n            /* failed to find move */\n            if (!move_obj) {\n                return null\n            }\n\n            /* need to make a copy of move because we can't generate SAN after the\n             * move is made\n             */\n            var pretty_move = make_pretty(move_obj)\n\n            make_move(move_obj)\n\n            return pretty_move\n        },\n\n        undo: function () {\n            var move = undo_move()\n            return move ? make_pretty(move) : null\n        },\n\n        clear: function () {\n            return clear()\n        },\n\n        put: function (piece, square) {\n            return put(piece, square)\n        },\n\n        get: function (square) {\n            return get(square)\n        },\n\n        ascii() {\n            var s = '   +------------------------+\\n'\n            for (var i = SQUARE_MAP.a8; i <= SQUARE_MAP.h1; i++) {\n                /* display the rank */\n                if (file(i) === 0) {\n                    s += ' ' + '87654321'[rank(i)] + ' |'\n                }\n\n                /* empty piece */\n                if (board[i] == null) {\n                    s += ' . '\n                } else {\n                    var piece = board[i].type\n                    var color = board[i].color\n                    var symbol =\n                        color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n                    s += ' ' + symbol + ' '\n                }\n\n                if ((i + 1) & 0x88) {\n                    s += '|\\n'\n                    i += 8\n                }\n            }\n            s += '   +------------------------+\\n'\n            s += '     a  b  c  d  e  f  g  h'\n\n            return s\n        },\n\n        remove: function (square) {\n            return remove(square)\n        },\n\n        perft: function (depth) {\n            return perft(depth)\n        },\n\n        square_color: function (square) {\n            if (square in SQUARE_MAP) {\n                var sq_0x88 = SQUARE_MAP[square]\n                return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n            }\n\n            return null\n        },\n\n        history: function (options) {\n            var reversed_history = []\n            var move_history = []\n            var verbose =\n                typeof options !== 'undefined' &&\n                'verbose' in options &&\n                options.verbose\n\n            while (history.length > 0) {\n                reversed_history.push(undo_move())\n            }\n\n            while (reversed_history.length > 0) {\n                var move = reversed_history.pop()\n                if (verbose) {\n                    move_history.push(make_pretty(move))\n                } else {\n                    move_history.push(move_to_san(move, generate_moves({ legal: true })))\n                }\n                make_move(move)\n            }\n\n            return move_history\n        },\n\n        get_comment: function () {\n            return comments[generate_fen()]\n        },\n\n        set_comment: function (comment) {\n            comments[generate_fen()] = comment.replace('{', '[').replace('}', ']')\n        },\n\n        delete_comment: function () {\n            var comment = comments[generate_fen()]\n            delete comments[generate_fen()]\n            return comment\n        },\n\n        get_comments: function () {\n            prune_comments()\n            return Object.keys(comments).map(function (fen) {\n                return { fen: fen, comment: comments[fen] }\n            })\n        },\n\n        delete_comments: function () {\n            prune_comments()\n            return Object.keys(comments).map(function (fen) {\n                var comment = comments[fen]\n                delete comments[fen]\n                return { fen: fen, comment: comment }\n            })\n        },\n    }\n}", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nimport {pgnParser} from \"./parser/pgnParser.js\"\nimport {Chess} from \"chess.mjs/src/Chess.js\"\n\nfunction IllegalMoveException(fen, notation) {\n    this.fen = fen\n    this.notation = notation\n    this.toString = function () {\n        return \"IllegalMoveException: \" + fen + \" => \" + notation\n    }\n}\n\nexport class History {\n\n    constructor(historyString = null, setUpFen = null, sloppy = false) {\n        if (!historyString) {\n            this.clear()\n        } else {\n            const parsedMoves = pgnParser.parse(historyString\n                .replace(/\\s\\s+/g, \" \")\n                .replace(/\\n/g, \" \")\n            )\n            this.moves = this.traverse(parsedMoves[0], setUpFen, null, 1, sloppy)\n        }\n        this.setUpFen = setUpFen\n    }\n\n    clear() {\n        this.moves = []\n    }\n\n    traverse(parsedMoves, fen, parent = null, ply = 1, sloppy = false) {\n        const chess = fen ? new Chess(fen) : new Chess() // chess.js must be included in HTML\n        const moves = []\n        let previousMove = parent\n        for (let parsedMove of parsedMoves) {\n            if (parsedMove.notation) {\n                const notation = parsedMove.notation.notation\n                const move = chess.move(notation, {sloppy: sloppy})\n                if (move) {\n                    if (previousMove) {\n                        move.previous = previousMove\n                        previousMove.next = move\n                    } else {\n                        move.previous = null\n                    }\n                    move.ply = ply\n                    this.fillMoveFromChessState(move, chess)\n                    if (parsedMove.nag) {\n                        move.nag = parsedMove.nag[0]\n                    }\n                    if (parsedMove.commentBefore) {\n                        move.commentBefore = parsedMove.commentBefore\n                    }\n                    if (parsedMove.commentMove) {\n                        move.commentMove = parsedMove.commentMove\n                    }\n                    if (parsedMove.commentAfter) {\n                        move.commentAfter = parsedMove.commentAfter\n                    }\n                    move.variations = []\n                    const parsedVariations = parsedMove.variations\n                    if (parsedVariations.length > 0) {\n                        const lastFen = moves.length > 0 ? moves[moves.length - 1].fen : fen\n                        for (let parsedVariation of parsedVariations) {\n                            move.variations.push(this.traverse(parsedVariation, lastFen, previousMove, ply, sloppy))\n                        }\n                    }\n                    move.variation = moves\n                    moves.push(move)\n                    previousMove = move\n                } else {\n                    throw new IllegalMoveException(chess.fen(), notation)\n                }\n            }\n            ply++\n        }\n        return moves\n    }\n\n    fillMoveFromChessState(move, chess) {\n        move.fen = chess.fen()\n        move.uci = move.from + move.to + (move.promotion ? move.promotion : \"\")\n        move.variations = []\n        if (chess.game_over()) {\n            move.gameOver = true\n            if (chess.in_draw()) {\n                move.inDraw = true\n            }\n            if (chess.in_stalemate()) {\n                move.inStalemate = true\n            }\n            if (chess.insufficient_material()) {\n                move.insufficientMaterial = true\n            }\n            if (chess.in_threefold_repetition()) {\n                move.inThreefoldRepetition = true\n            }\n            if (chess.in_checkmate()) {\n                move.inCheckmate = true\n            }\n        }\n        if (chess.in_check()) {\n            move.inCheck = true\n        }\n    }\n\n    /**\n     * @param move\n     * @return the history to the move which may be in a variation\n     */\n    historyToMove(move) {\n        const moves = []\n        let pointer = move\n        moves.push(pointer)\n        while (pointer.previous) {\n            moves.push(pointer.previous)\n            pointer = pointer.previous\n        }\n        return moves.reverse()\n    }\n\n    /**\n     * Don't add the move, just validate, if it would be correct\n     * @param notation\n     * @param previous\n     * @param sloppy\n     * @returns {[]|{}}\n     */\n    validateMove(notation, previous = null, sloppy = true) {\n        if (!previous) {\n            if (this.moves.length > 0) {\n                previous = this.moves[this.moves.length - 1]\n            }\n        }\n        const chess = new Chess(this.setUpFen ? this.setUpFen : undefined)\n        if (previous) {\n            const historyToMove = this.historyToMove(previous)\n            for (const moveInHistory of historyToMove) {\n                chess.move(moveInHistory)\n            }\n        }\n        const move = chess.move(notation, {sloppy: sloppy})\n        if (move) {\n            this.fillMoveFromChessState(move, chess)\n        }\n        return move\n    }\n\n    addMove(notation, previous = null, sloppy = true) {\n        if (!previous) {\n            if (this.moves.length > 0) {\n                previous = this.moves[this.moves.length - 1]\n            }\n        }\n        const move = this.validateMove(notation, previous, sloppy)\n        if (!move) {\n            throw new Error(\"invalid move\")\n        }\n        move.previous = previous\n        if (previous) {\n            move.ply = previous.ply + 1\n            move.uci = move.from + move.to + (move.promotion ? move.promotion : \"\")\n            if (previous.next) {\n                previous.next.variations.push([])\n                move.variation = previous.next.variations[previous.next.variations.length - 1]\n                move.variation.push(move)\n            } else {\n                previous.next = move\n                move.variation = previous.variation\n                previous.variation.push(move)\n            }\n        } else {\n            move.variation = this.moves\n            move.ply = 1\n            this.moves.push(move)\n        }\n        return move\n    }\n\n    render(renderComments = true, renderNags = true) {\n        const renderVariation = (variation, needReminder = false) => {\n            let result = \"\"\n            for (let move of variation) {\n                if (move.ply % 2 === 1) {\n                    result += Math.floor(move.ply / 2) + 1 + \". \"\n                } else if (result.length === 0 || needReminder) {\n                    result += move.ply / 2 + \"... \"\n                }\n                needReminder = false\n                if (renderNags && move.nag) {\n                    result += \"$\" + move.nag + \" \"\n                }\n                if (renderComments && move.commentBefore) {\n                    result += \"{\" + move.commentBefore + \"} \"\n                    needReminder = true\n                }\n                result += move.san + \" \"\n                if (renderComments && move.commentMove) {\n                    result += \"{\" + move.commentMove + \"} \"\n                    needReminder = true\n                }\n                if (renderComments && move.commentAfter) {\n                    result += \"{\" + move.commentAfter + \"} \"\n                    needReminder = true\n                }\n                if (move.variations.length > 0) {\n                    for (let variation of move.variations) {\n                        result += \"(\" + renderVariation(variation) + \") \"\n                        needReminder = true\n                    }\n                }\n                result += \" \"\n            }\n            return result\n        }\n        let ret = renderVariation(this.moves)\n        // remove spaces before brackets\n        ret = ret.replace(/\\s+\\)/g, ')')\n        // remove double spaces\n        ret = ret.replace(/\\s\\s+/g, ' ').trim()\n        return ret\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nimport {Header, TAGS} from \"./Header.js\"\nimport {History} from \"./History.js\"\n\nexport class Pgn {\n\n    constructor(pgnString = \"\", props = {}) {\n        // only the header?\n        const lastHeaderElement =  pgnString.trim().slice(-1) === \"]\" ? pgnString.length : pgnString.lastIndexOf(\"]\\n\\n\") + 1\n        const headerString = pgnString.substring(0, lastHeaderElement)\n        const historyString = pgnString.substring(lastHeaderElement)\n        const sloppy = !!props.sloppy\n        this.header = new Header(headerString)\n        if (this.header.tags[TAGS.SetUp] === \"1\" && this.header.tags[TAGS.FEN]) {\n            this.history = new History(historyString, this.header.tags[TAGS.FEN], sloppy)\n        } else {\n            this.history = new History(historyString, null, sloppy)\n        }\n    }\n\n    wrap(str, maxLength) {\n        const words = str.split(\" \")\n        let lines = []\n        let line = \"\"\n        for (let i = 0; i < words.length; i++) {\n            const word = words[i]\n            if (line.length + word.length < maxLength) {\n                line += word + \" \"\n            } else {\n                lines.push(line.trim())\n                line = word + \" \"\n            }\n        }\n        lines.push(line.trim())\n        return lines.join(\"\\n\")\n    }\n\n    render(renderHeader = true, renderComments = true, renderNags = true) {\n        const header = renderHeader ? (this.header.render() + \"\\n\") : \"\";\n        let history = this.history.render(renderComments, renderNags);\n        if(this.header.tags[TAGS.Result]) {\n            history += \" \" + this.header.tags[TAGS.Result];\n        }\n        return header + this.wrap(history, 80)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chess\n * License: MIT, see file 'LICENSE'\n */\nimport {Pgn} from \"cm-pgn/src/Pgn.js\"\nimport {TAGS} from \"cm-pgn/src/Header.js\"\nimport {Chess as ChessJs, SQUARES} from \"chess.mjs/src/Chess.js\"\n\nexport const PIECES = {\n    p: {name: \"pawn\", value: 1},\n    n: {name: \"knight\", value: 3},\n    b: {name: \"bishop\", value: 3},\n    r: {name: \"rook\", value: 5},\n    q: {name: \"queen\", value: 9},\n    k: {name: \"king\", value: Infinity}\n}\n\nexport const COLOR = {\n    white: \"w\",\n    black: \"b\"\n}\n\nexport const FEN = {\n    empty: \"8/8/8/8/8/8/8/8 w - - 0 1\",\n    start: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n}\n\nexport const EVENT_TYPE = {\n    illegalMove: \"illegalMove\",\n    legalMove: \"legalMove\",\n    undoMove: \"undoMove\",\n    initialized: \"initialized\"\n}\n\nfunction publishEvent(observers, event) {\n    for (const observer of observers) {\n        setTimeout(() => {\n            observer(event)\n        })\n    }\n}\n\n/**\n * Like chess.js, but handles variations and is written in ES5\n * Uses chess.js for validation and cm-pgn for the history and PGN header\n */\nexport class Chess {\n\n    constructor(fenOrProps = FEN.start) {\n        this.observers = []\n        if (typeof fenOrProps === \"string\") {\n            this.load(fenOrProps)\n        } else {\n            if (fenOrProps.fen) {\n                this.load(fenOrProps.fen)\n            } else if (fenOrProps.pgn) {\n                this.loadPgn(fenOrProps.pgn)\n            } else {\n                this.load(FEN.start)\n            }\n        }\n    }\n\n    /**\n     * @returns {string} the FEN of the last move, or the setUpFen(), if no move was made.\n     */\n    fen(move = this.lastMove()) {\n        if (move) {\n            return move.fen\n        } else {\n            return this.setUpFen()\n        }\n    }\n\n    /**\n     * @returns {string} the setUp FEN in the header or the default start-FEN\n     */\n    setUpFen() {\n        if (this.pgn.header.tags[TAGS.SetUp]) {\n            return this.pgn.header.tags[TAGS.FEN]\n        } else {\n            return FEN.start\n        }\n    }\n\n    /**\n     * @returns {Map<string, string>} the header tags of the PGN.\n     */\n    header() {\n        return this.pgn.header.tags\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is over at that move\n     */\n    gameOver(move = this.lastMove()) {\n        if(move) {\n            return move.gameOver\n        } else {\n            return new ChessJs(this.fen()).game_over()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in draw at that move\n     */\n    inDraw(move = this.lastMove()) {\n        if(move) {\n            return move.inDraw === true\n        } else {\n            return new ChessJs(this.fen()).in_draw()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in statemate at that move\n     */\n    inStalemate(move = this.lastMove()) {\n        if(move) {\n            return move.inStalemate === true\n        } else {\n            return new ChessJs(this.fen()).in_stalemate()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in draw, because of unsufficiant material at that move\n     */\n    insufficientMaterial(move = this.lastMove()) {\n        if(move) {\n            return move.insufficientMaterial === true\n        } else {\n            return new ChessJs(this.fen()).insufficient_material()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in draw, because of threefold repetition at that move\n     */\n    inThreefoldRepetition(move = this.lastMove()) {\n        return move && move.inThreefoldRepetition === true\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in checkmate at that move\n     */\n    inCheckmate(move = this.lastMove()) {\n        if(move) {\n            return move.inCheckmate === true\n        } else {\n            return new ChessJs(this.fen()).in_checkmate()\n        }\n    }\n\n    /**\n     * @param move optional\n     * @returns {boolean} true, if the game is in check at that move\n     */\n    inCheck(move = this.lastMove()) {\n        if(move) {\n            return move.inCheck === true\n        } else {\n            return new ChessJs(this.fen()).in_check()\n        }\n    }\n\n    /**\n     * cm-chess uses cm-pgn for the history and header. See https://github.com/shaack/cm-pgn\n     * @returns {[]} the moves of the game history\n     */\n    history() {\n        return this.pgn.history.moves\n    }\n\n    /**\n     * @returns {null|move} the last move of the main variation or `null`, if no move was made\n     */\n    lastMove() {\n        if (this.pgn.history.moves.length > 0) {\n            return this.pgn.history.moves[this.pgn.history.moves.length - 1]\n        } else {\n            return null\n        }\n    }\n\n    /**\n     * Load a FEN\n     * @param fen\n     */\n    load(fen) {\n        const chess = new ChessJs(fen)\n        if (chess && chess.fen() === fen) {\n            this.pgn = new Pgn()\n            if (fen !== FEN.start) {\n                this.pgn.header.tags[TAGS.SetUp] = \"1\"\n                this.pgn.header.tags[TAGS.FEN] = chess.fen()\n                this.pgn.history.setUpFen = fen\n            }\n        } else {\n            throw Error(\"Invalid fen \" + fen)\n        }\n        publishEvent(this.observers, {type: EVENT_TYPE.initialized, fen: fen})\n    }\n\n    /**\n     * Load a PGN with variations, NAGs, header and annotations. cm-chess uses cm-pgn\n     * fot the header and history. See https://github.com/shaack/cm-pgn\n     * @param pgn\n     */\n    loadPgn(pgn) {\n        this.pgn = new Pgn(pgn)\n        publishEvent(this.observers, {type: EVENT_TYPE.initialized, pgn: pgn})\n    }\n\n    /**\n     * Make a move in the game.\n     * @param move\n     * @param previousMove optional, the previous move (for variations)\n     * @param sloppy to allow sloppy SAN\n     * @returns {{}|null}\n     */\n    move(move, previousMove = undefined, sloppy = true) {\n        try {\n            const moveResult = this.pgn.history.addMove(move, previousMove, sloppy)\n            publishEvent(this.observers,\n                {type: EVENT_TYPE.legalMove, move: moveResult, previousMove: previousMove})\n            return moveResult\n        } catch (e) {\n            publishEvent(this.observers,\n                {type: EVENT_TYPE.illegalMove, move: move, previousMove: previousMove})\n            return null\n        }\n    }\n\n    /**\n     * Return all valid moves\n     * @param options {{ square: \"e2\", piece: \"n\", verbose: true }}\n     * Fields with { verbose: true }\n     * - `color` indicates the color of the moving piece (w or b).\n     * - `from` and `to` fields are from and to squares in algebraic notation.\n     * - `piece`, `captured`, and `promotion` fields contain the lowercase representation of the applicable piece (pnbrqk). The captured and promotion fields are only present when the move is a valid capture or promotion.\n     * - `san` is the move in Standard Algebraic Notation (SAN).\n     * - `flags` field contains one or more of the string values:\n     *      n - a non-capture\n     *      b - a pawn push of two squares\n     *      e - an en passant capture\n     *      c - a standard capture\n     *      p - a promotion\n     *      k - kingside castling\n     *      q - queenside castling\n     *   A flags value of pc would mean that a pawn captured a piece on the 8th rank and promoted.\n     * @param move\n     * @returns {{}}\n     */\n    moves(options = undefined, move = this.lastMove()) {\n        const chessJs = new ChessJs(this.fen(move))\n        return chessJs.moves(options)\n    }\n\n    /**\n     * Don't make a move, just validate, if it would be a correct move\n     * @param move\n     * @param previousMove optional, the previous move (for variations)\n     * @param sloppy to allow sloppy SAN\n     * @returns the move object or null if not valid\n     */\n    validateMove(move, previousMove = undefined, sloppy = true) {\n        return this.pgn.history.validateMove(move, previousMove, sloppy)\n    }\n\n    /**\n     * Render the game as PGN with header, comments and NAGs\n     * @param renderHeader optional, default true\n     * @param renderComments optional, default true\n     * @param renderNags optional, default true\n     * @returns {string} the PGN of the game.\n     */\n    renderPgn(renderHeader = true, renderComments = true, renderNags = true) {\n        return this.pgn.render(renderHeader, renderComments, renderNags)\n    }\n\n    /**\n     * Get the position of the specified figures at a specific move\n     * @param type \"p\", \"n\", \"b\",...\n     * @param color \"b\" or \"w\"\n     * @param move\n     * @returns {[]} the pieces (positions) at a specific move\n     */\n    pieces(type = undefined, color = undefined, move = this.lastMove()) {\n        const chessJs = move ? new ChessJs(move.fen) : new ChessJs(this.fen())\n        let result = []\n        for (let i = 0; i < 64; i++) {\n            const square = SQUARES[i]\n            const piece = chessJs.get(square)\n            if (piece) {\n                piece.square = square\n            }\n            if (!type) {\n                if (!color && piece) {\n                    result.push(piece)\n                }\n            } else if (!color && piece && piece.type === type) {\n                result.push(piece)\n            } else if (piece && piece.color === color && piece.type === type) {\n                result.push(piece)\n            }\n        }\n        return result\n    }\n\n    /**\n     * get the piece on a square\n     * @param square\n     * @param move\n     * @returns {{color: any, type: any}|null}\n     */\n    piece(square, move = this.lastMove()) {\n        const chessJs = move ? new ChessJs(move.fen) : new ChessJs(this.fen())\n        return chessJs.get(square)\n    }\n\n    /**\n     * @returns {string} \"b\" or \"w\" the color to move in the main variation\n     */\n    turn() {\n        let factor = 0\n        if (this.setUpFen()) {\n            const fenParts = this.setUpFen().split(\" \")\n            if (fenParts[1] === COLOR.black) {\n                factor = 1\n            }\n        }\n        return (this.pgn.history.moves.length) % 2 === factor ? COLOR.white : COLOR.black\n    }\n\n    /**\n     * Undo a move and all moves after it\n     * @param move\n     */\n    undo(move = this.lastMove()) {\n        // decouple from previous\n        if (move.previous) {\n            move.previous.next = undefined\n        }\n        // splice all next moves\n        const index = move.variation.findIndex(element => {\n            return element.ply === move.ply\n        })\n        move.variation = move.variation.splice(index)\n        publishEvent(this.observers, {type: EVENT_TYPE.undoMove, move: move})\n    }\n\n    plyCount() {\n        return this.history().length\n    }\n\n    fenOfPly(plyNumber) {\n        if (plyNumber > 0) {\n            return this.history()[plyNumber - 1].fen\n        } else {\n            return this.setUpFen()\n        }\n    }\n\n    addObserver(callback) {\n        this.observers.push(callback)\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nexport const FEN = {\n    start: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n    empty: \"8/8/8/8/8/8/8/8\"\n}\n\nexport class Position {\n\n    constructor(fen = FEN.empty) {\n        this.squares = new Array(64).fill(null)\n        this.setFen(fen)\n    }\n\n    setFen(fen = FEN.empty) {\n        const parts = fen.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").split(/\\/|\\s/)\n        for (let part = 0; part < 8; part++) {\n            const row = parts[7 - part].replace(/\\d/g, (str) => {\n                const numSpaces = parseInt(str)\n                let ret = ''\n                for (let i = 0; i < numSpaces; i++) {\n                    ret += '-'\n                }\n                return ret\n            })\n            for (let c = 0; c < 8; c++) {\n                const char = row.substring(c, c + 1)\n                let piece = null\n                if (char !== '-') {\n                    if (char.toUpperCase() === char) {\n                        piece = `w${char.toLowerCase()}`\n                    } else {\n                        piece = `b${char}`\n                    }\n                }\n                this.squares[part * 8 + c] = piece\n            }\n        }\n    }\n\n    getFen() {\n        let parts = new Array(8).fill(\"\")\n        for (let part = 0; part < 8; part++) {\n            let spaceCounter = 0\n            for (let i = 0; i < 8; i++) {\n                const piece = this.squares[part * 8 + i]\n                if (!piece) {\n                    spaceCounter++\n                } else {\n                    if (spaceCounter > 0) {\n                        parts[7 - part] += spaceCounter\n                        spaceCounter = 0\n                    }\n                    const color = piece.substring(0, 1)\n                    const name = piece.substring(1, 2)\n                    if (color === \"w\") {\n                        parts[7 - part] += name.toUpperCase()\n                    } else {\n                        parts[7 - part] += name\n                    }\n                }\n            }\n            if (spaceCounter > 0) {\n                parts[7 - part] += spaceCounter\n                spaceCounter = 0\n            }\n        }\n        return parts.join(\"/\")\n    }\n\n    getPieces(sortBy = ['k', 'q', 'r', 'b', 'n', 'p']) {\n        const pieces = []\n        const sort = (a, b) => {\n            return sortBy.indexOf(a.name) - sortBy.indexOf(b.name)\n        }\n        for (let i = 0; i < 64; i++) {\n            const piece = this.squares[i]\n            if (piece) {\n                pieces.push({\n                    name: piece.charAt(1),\n                    color: piece.charAt(0),\n                    position: Position.indexToSquare(i)\n                })\n            }\n        }\n        if (sortBy) {\n            pieces.sort(sort)\n        }\n        return pieces\n    }\n\n    movePiece(squareFrom, squareTo) {\n        if (!this.squares[Position.squareToIndex(squareFrom)]) {\n            console.warn(\"no piece on\", squareFrom)\n            return\n        }\n        this.squares[Position.squareToIndex(squareTo)] = this.squares[Position.squareToIndex(squareFrom)]\n        this.squares[Position.squareToIndex(squareFrom)] = null\n    }\n\n    setPiece(square, piece) {\n        this.squares[Position.squareToIndex(square)] = piece\n    }\n\n    getPiece(square) {\n        return this.squares[Position.squareToIndex(square)]\n    }\n\n    static squareToIndex(square) {\n        const coordinates = Position.squareToCoordinates(square)\n        return coordinates[0] + coordinates[1] * 8\n    }\n\n    static indexToSquare(index) {\n        return this.coordinatesToSquare([Math.floor(index % 8), index / 8])\n    }\n\n    static squareToCoordinates(square) {\n        const file = square.charCodeAt(0) - 97\n        const rank = square.charCodeAt(1) - 49\n        return [file, rank]\n    }\n\n    static coordinatesToSquare(coordinates) {\n        const file = String.fromCharCode(coordinates[0] + 97)\n        const rank = String.fromCharCode(coordinates[1] + 49)\n        return file + rank\n    }\n\n    clone() {\n        const cloned = new Position()\n        cloned.squares = this.squares.slice(0)\n        return cloned\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Position} from \"./Position.js\"\n\nexport class ChessboardState {\n\n    constructor() {\n        this.position = new Position()\n        this.orientation = undefined\n        this.inputWhiteEnabled = false\n        this.inputBlackEnabled = false\n        this.moveInputCallback = null\n        this.extensionPoints = {}\n        this.moveInputProcess = Promise.resolve()\n    }\n\n    inputEnabled() {\n        return this.inputWhiteEnabled || this.inputBlackEnabled\n    }\n\n    invokeExtensionPoints(name, data = {}) {\n        const extensionPoints = this.extensionPoints[name]\n        const dataCloned = Object.assign({}, data)\n        dataCloned.extensionPoint = name\n        let returnValue = true\n        if (extensionPoints) {\n            for (const extensionPoint of extensionPoints) {\n                if(extensionPoint(dataCloned) === false) {\n                    returnValue = false\n                }\n            }\n        }\n        return returnValue\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\"\n\nexport class Svg {\n\n    /**\n     * create the Svg in the HTML DOM\n     * @param containerElement\n     * @returns {Element}\n     */\n    static createSvg(containerElement = undefined) {\n        let svg = document.createElementNS(SVG_NAMESPACE, \"svg\")\n        if (containerElement) {\n            svg.setAttribute(\"width\", \"100%\")\n            svg.setAttribute(\"height\", \"100%\")\n            containerElement.appendChild(svg)\n        }\n        return svg\n    }\n\n    /**\n     * Add an Element to an SVG DOM\n     * @param parent\n     * @param name\n     * @param attributes\n     * @returns {Element}\n     */\n    static addElement(parent, name, attributes = {}) {\n        let element = document.createElementNS(SVG_NAMESPACE, name)\n        if (name === \"use\") {\n            attributes[\"xlink:href\"] = attributes[\"href\"] // fix for safari\n        }\n        for (let attribute in attributes) {\n            if (attributes.hasOwnProperty(attribute)) {\n                if (attribute.indexOf(\":\") !== -1) {\n                    const value = attribute.split(\":\")\n                    element.setAttributeNS(\"http://www.w3.org/1999/\" + value[0], value[1], attributes[attribute])\n                } else {\n                    element.setAttribute(attribute, attributes[attribute])\n                }\n            }\n        }\n        parent.appendChild(element)\n        return element\n    }\n\n    /**\n     * Remove an element from an SVG DOM\n     * @param element\n     */\n    static removeElement(element) {\n        if(!element) {\n            console.warn(\"removeElement, element is\", element)\n            return\n        }\n        if (element.parentNode) {\n            element.parentNode.removeChild(element)\n        } else {\n            console.warn(element, \"without parentNode\")\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport const EXTENSION_POINT = {\n    positionChanged: \"positionChanged\", // the positions of the pieces was changed\n    boardChanged: \"boardChanged\", // the board (orientation) was changed\n    moveInputToggled: \"moveInputToggled\", // move input was enabled or disabled\n    moveInput: \"moveInput\", // move started, moving over a square, validating or canceled\n    beforeRedrawBoard: \"beforeRedrawBoard\", // called before redrawing the board\n    afterRedrawBoard: \"afterRedrawBoard\", // called after redrawing the board\n    redrawBoard: \"redrawBoard\", // called after redrawing the board, DEPRECATED, use afterRedrawBoard 2023-09-18\n    animation: \"animation\", // called on animation start, end, and on every animation frame\n    destroy: \"destroy\" // called, before the board is destroyed\n}\n\nexport class Extension {\n\n    constructor(chessboard) {\n        this.chessboard = chessboard\n    }\n\n    registerExtensionPoint(name, callback) {\n        if(name === EXTENSION_POINT.redrawBoard) { // deprecated 2023-09-18\n            console.warn(\"EXTENSION_POINT.redrawBoard is deprecated, use EXTENSION_POINT.afterRedrawBoard\")\n            name = EXTENSION_POINT.afterRedrawBoard\n        }\n        if (!this.chessboard.state.extensionPoints[name]) {\n            this.chessboard.state.extensionPoints[name] = []\n        }\n        this.chessboard.state.extensionPoints[name].push(callback)\n    }\n\n    /** @deprecated 2023-05-18 */\n    registerMethod(name, callback) {\n        console.warn(\"registerMethod is deprecated, just add methods directly to the chessboard instance\")\n        if (!this.chessboard[name]) {\n            this.chessboard[name] = (...args) => {\n                return callback.apply(this, args)\n            }\n        } else {\n            log.error(\"method\", name, \"already exists\")\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport class Utils {\n\n    static delegate(element, eventName, selector, handler) {\n        const eventListener = function (event) {\n            let target = event.target\n            while (target && target !== this) {\n                if (target.matches(selector)) {\n                    handler.call(target, event)\n                }\n                target = target.parentNode\n            }\n        }\n        element.addEventListener(eventName, eventListener)\n        return {\n            remove: function () {\n                element.removeEventListener(eventName, eventListener)\n            }\n        }\n    }\n\n    static mergeObjects(target, source) {\n        const isObject = (obj) => obj && typeof obj === 'object'\n        if (!isObject(target) || !isObject(source)) {\n            return source\n        }\n        for (const key of Object.keys(source)) {\n            if (source[key] instanceof Object) {\n                Object.assign(source[key], Utils.mergeObjects(target[key], source[key]))\n            }\n        }\n        Object.assign(target || {}, source)\n        return target\n    }\n\n    static createDomElement(html) {\n        const template = document.createElement('template')\n        template.innerHTML = html.trim()\n        return template.content.firstChild\n    }\n\n    static createTask() {\n        let resolve, reject\n        const promise = new Promise(function (_resolve, _reject) {\n            resolve = _resolve\n            reject = _reject\n        })\n        promise.resolve = resolve\n        promise.reject = reject\n        return promise\n    }\n\n    static isAbsoluteUrl(url) {\n        return url.indexOf(\"://\") !== -1 || url.startsWith(\"/\")\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {FEN, Position} from \"../model/Position.js\"\nimport {Svg} from \"../lib/Svg.js\"\nimport {EXTENSION_POINT} from \"../model/Extension.js\"\nimport {Utils} from \"../lib/Utils.js\"\n\n/*\n* Thanks to markosyan for the idea of the PromiseQueue\n* https://medium.com/@karenmarkosyan/how-to-manage-promises-into-dynamic-queue-with-vanilla-javascript-9d0d1f8d4df5\n*/\n\nexport const ANIMATION_EVENT_TYPE = {\n    start: \"start\",\n    frame: \"frame\",\n    end: \"end\"\n}\n\nexport class PromiseQueue {\n\n    constructor() {\n        this.queue = []\n        this.workingOnPromise = false\n        this.stop = false\n    }\n\n    async enqueue(promise) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({\n                promise, resolve, reject,\n            })\n            this.dequeue()\n        })\n    }\n\n    dequeue() {\n        if (this.workingOnPromise) {\n            return\n        }\n        if (this.stop) {\n            this.queue = []\n            this.stop = false\n            return\n        }\n        const entry = this.queue.shift()\n        if (!entry) {\n            return\n        }\n        try {\n            this.workingOnPromise = true\n            entry.promise().then((value) => {\n                this.workingOnPromise = false\n                entry.resolve(value)\n                this.dequeue()\n            }).catch(err => {\n                this.workingOnPromise = false\n                entry.reject(err)\n                this.dequeue()\n            })\n        } catch (err) {\n            this.workingOnPromise = false\n            entry.reject(err)\n            this.dequeue()\n        }\n        return true\n    }\n\n    destroy() {\n        this.stop = true\n    }\n\n}\n\n\nconst CHANGE_TYPE = {\n    move: 0,\n    appear: 1,\n    disappear: 2\n}\n\nexport class PositionsAnimation {\n\n    constructor(view, fromPosition, toPosition, duration, callback) {\n        this.view = view\n        if (fromPosition && toPosition) {\n            this.animatedElements = this.createAnimation(fromPosition.squares, toPosition.squares)\n            this.duration = duration\n            this.callback = callback\n            this.frameHandle = requestAnimationFrame(this.animationStep.bind(this))\n        } else {\n            console.error(\"fromPosition\", fromPosition, \"toPosition\", toPosition)\n        }\n        this.view.positionsAnimationTask = Utils.createTask()\n        this.view.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.animation, {\n            type: ANIMATION_EVENT_TYPE.start\n        })\n    }\n\n    static seekChanges(fromSquares, toSquares) {\n        const appearedList = [], disappearedList = [], changes = []\n        for (let i = 0; i < 64; i++) {\n            const previousSquare = fromSquares[i]\n            const newSquare = toSquares[i]\n            if (newSquare !== previousSquare) {\n                if (newSquare) {\n                    appearedList.push({piece: newSquare, index: i})\n                }\n                if (previousSquare) {\n                    disappearedList.push({piece: previousSquare, index: i})\n                }\n            }\n        }\n        appearedList.forEach((appeared) => {\n            let shortestDistance = 8\n            let foundMoved = null\n            disappearedList.forEach((disappeared) => {\n                if (appeared.piece === disappeared.piece) {\n                    const moveDistance = PositionsAnimation.squareDistance(appeared.index, disappeared.index)\n                    if (moveDistance < shortestDistance) {\n                        foundMoved = disappeared\n                        shortestDistance = moveDistance\n                    }\n                }\n            })\n            if (foundMoved) {\n                disappearedList.splice(disappearedList.indexOf(foundMoved), 1) // remove from disappearedList, because it is moved now\n                changes.push({\n                    type: CHANGE_TYPE.move,\n                    piece: appeared.piece,\n                    atIndex: foundMoved.index,\n                    toIndex: appeared.index\n                })\n            } else {\n                changes.push({type: CHANGE_TYPE.appear, piece: appeared.piece, atIndex: appeared.index})\n            }\n        })\n        disappearedList.forEach((disappeared) => {\n            changes.push({type: CHANGE_TYPE.disappear, piece: disappeared.piece, atIndex: disappeared.index})\n        })\n        return changes\n    }\n\n    createAnimation(fromSquares, toSquares) {\n        const changes = PositionsAnimation.seekChanges(fromSquares, toSquares)\n        const animatedElements = []\n        changes.forEach((change) => {\n            const animatedItem = {\n                type: change.type\n            }\n            switch (change.type) {\n                case CHANGE_TYPE.move:\n                    animatedItem.element = this.view.getPieceElement(Position.indexToSquare(change.atIndex))\n                    animatedItem.element.parentNode.appendChild(animatedItem.element) // move element to top layer\n                    animatedItem.atPoint = this.view.indexToPoint(change.atIndex)\n                    animatedItem.toPoint = this.view.indexToPoint(change.toIndex)\n                    break\n                case CHANGE_TYPE.appear:\n                    animatedItem.element = this.view.drawPieceOnSquare(Position.indexToSquare(change.atIndex), change.piece)\n                    animatedItem.element.style.opacity = 0\n                    break\n                case CHANGE_TYPE.disappear:\n                    animatedItem.element = this.view.getPieceElement(Position.indexToSquare(change.atIndex))\n                    break\n            }\n            animatedElements.push(animatedItem)\n        })\n        return animatedElements\n    }\n\n    animationStep(time) {\n        if(!this.view || !this.view.chessboard.state) { // board was destroyed\n            return\n        }\n        if (!this.startTime) {\n            this.startTime = time\n        }\n        const timeDiff = time - this.startTime\n        if (timeDiff <= this.duration) {\n            this.frameHandle = requestAnimationFrame(this.animationStep.bind(this))\n        } else {\n            cancelAnimationFrame(this.frameHandle)\n            this.animatedElements.forEach((animatedItem) => {\n                if (animatedItem.type === CHANGE_TYPE.disappear) {\n                    Svg.removeElement(animatedItem.element)\n                }\n            })\n            this.view.positionsAnimationTask.resolve()\n            this.view.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.animation, {\n                type: ANIMATION_EVENT_TYPE.end\n            })\n            this.callback()\n            return\n        }\n        const t = Math.min(1, timeDiff / this.duration)\n        let progress = t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t // easeInOut\n        if (isNaN(progress) || progress > 0.99) {\n            progress = 1\n        }\n        this.animatedElements.forEach((animatedItem) => {\n            if (animatedItem.element) {\n                switch (animatedItem.type) {\n                    case CHANGE_TYPE.move:\n                        animatedItem.element.transform.baseVal.removeItem(0)\n                        const transform = (this.view.svg.createSVGTransform())\n                        transform.setTranslate(\n                            animatedItem.atPoint.x + (animatedItem.toPoint.x - animatedItem.atPoint.x) * progress,\n                            animatedItem.atPoint.y + (animatedItem.toPoint.y - animatedItem.atPoint.y) * progress)\n                        animatedItem.element.transform.baseVal.appendItem(transform)\n                        break\n                    case CHANGE_TYPE.appear:\n                        animatedItem.element.style.opacity = Math.round(progress * 100) / 100\n                        break\n                    case CHANGE_TYPE.disappear:\n                        animatedItem.element.style.opacity = Math.round((1 - progress) * 100) / 100\n                        break\n                }\n            } else {\n                console.warn(\"animatedItem has no element\", animatedItem)\n            }\n        })\n        this.view.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.animation, {\n            type: ANIMATION_EVENT_TYPE.frame,\n            progress: progress\n        })\n    }\n\n    static squareDistance(index1, index2) {\n        const file1 = index1 % 8\n        const rank1 = Math.floor(index1 / 8)\n        const file2 = index2 % 8\n        const rank2 = Math.floor(index2 / 8)\n        return Math.max(Math.abs(rank2 - rank1), Math.abs(file2 - file1))\n    }\n\n}\n\nexport class PositionAnimationsQueue extends PromiseQueue {\n\n    constructor(chessboard) {\n        super()\n        this.chessboard = chessboard\n    }\n\n    async enqueuePositionChange(positionFrom, positionTo, animated) {\n        if(positionFrom.getFen() === positionTo.getFen()) {\n            return Promise.resolve()\n        } else {\n            return super.enqueue(() => new Promise((resolve) => {\n                let duration = animated ? this.chessboard.props.style.animationDuration : 0\n                if (this.queue.length > 0) {\n                    duration = duration / (1 + Math.pow(this.queue.length / 5, 2))\n                }\n                new PositionsAnimation(this.chessboard.view,\n                    positionFrom, positionTo, animated ? duration : 0,\n                    () => {\n                        if (this.chessboard.view) { // if destroyed, no view anymore\n                            this.chessboard.view.redrawPieces(positionTo.squares)\n                        }\n                        resolve()\n                    }\n                )\n            }))\n        }\n    }\n\n    async enqueueTurnBoard(position, color, animated) {\n        return super.enqueue(() => new Promise((resolve) => {\n            const emptyPosition = new Position(FEN.empty)\n            let duration = animated ? this.chessboard.props.style.animationDuration : 0\n            if(this.queue.length > 0) {\n                duration = duration / (1 + Math.pow(this.queue.length / 5, 2))\n            }\n            new PositionsAnimation(this.chessboard.view,\n                position, emptyPosition, animated ? duration : 0,\n                () => {\n                    this.chessboard.state.orientation = color\n                    this.chessboard.view.redrawBoard()\n                    this.chessboard.view.redrawPieces(emptyPosition.squares)\n                    new PositionsAnimation(this.chessboard.view,\n                        emptyPosition, position, animated ? duration : 0,\n                        () => {\n                            this.chessboard.view.redrawPieces(position.squares)\n                            resolve()\n                        }\n                    )\n                }\n            )\n        }))\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Svg} from \"../lib/Svg.js\"\nimport {Utils} from \"../lib/Utils.js\"\n\nconst MOVE_INPUT_STATE = {\n    waitForInputStart: \"waitForInputStart\",\n    pieceClickedThreshold: \"pieceClickedThreshold\",\n    clickTo: \"clickTo\",\n    secondClickThreshold: \"secondClickThreshold\",\n    dragTo: \"dragTo\",\n    clickDragTo: \"clickDragTo\",\n    moveDone: \"moveDone\",\n    reset: \"reset\"\n}\n\nexport const MOVE_CANCELED_REASON = {\n    secondClick: \"secondClick\", // clicked the same piece\n    secondaryClick: \"secondaryClick\", // right click while moving\n    movedOutOfBoard: \"movedOutOfBoard\",\n    draggedBack: \"draggedBack\", // dragged to the start square\n    clickedAnotherPiece: \"clickedAnotherPiece\" // of the same color\n}\n\nconst DRAG_THRESHOLD = 4\n\nexport class VisualMoveInput {\n\n    constructor(view) {\n        this.view = view\n        this.chessboard = view.chessboard\n        this.moveInputState = null\n        this.fromSquare = null\n        this.toSquare = null\n\n        this.setMoveInputState(MOVE_INPUT_STATE.waitForInputStart)\n    }\n\n    moveInputStartedCallback(square) {\n        const result = this.view.moveInputStartedCallback(square)\n        if (result) {\n            this.chessboard.state.moveInputProcess = Utils.createTask()\n            this.chessboard.state.moveInputProcess.then((result) => {\n                if (this.moveInputState === MOVE_INPUT_STATE.waitForInputStart ||\n                    this.moveInputState === MOVE_INPUT_STATE.moveDone) {\n                    this.view.moveInputFinishedCallback(this.fromSquare, this.toSquare, result)\n                }\n            })\n        }\n        return result\n    }\n\n    movingOverSquareCallback(fromSquare, toSquare) {\n        this.view.movingOverSquareCallback(fromSquare, toSquare)\n    }\n\n    validateMoveInputCallback(fromSquare, toSquare) {\n        const result = this.view.validateMoveInputCallback(fromSquare, toSquare)\n        this.chessboard.state.moveInputProcess.resolve(result)\n        return result\n    }\n\n    moveInputCanceledCallback(fromSquare, toSquare, reason) {\n        this.view.moveInputCanceledCallback(fromSquare, toSquare, reason)\n        this.chessboard.state.moveInputProcess.resolve()\n    }\n\n    setMoveInputState(newState, params = undefined) {\n        const prevState = this.moveInputState\n        this.moveInputState = newState\n\n        switch (newState) {\n\n            case MOVE_INPUT_STATE.waitForInputStart:\n                break\n\n            case MOVE_INPUT_STATE.pieceClickedThreshold:\n                if (MOVE_INPUT_STATE.waitForInputStart !== prevState && MOVE_INPUT_STATE.clickTo !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.pointerMoveListener) {\n                    removeEventListener(this.pointerMoveListener.type, this.pointerMoveListener)\n                    this.pointerMoveListener = null\n                }\n                if (this.pointerUpListener) {\n                    removeEventListener(this.pointerUpListener.type, this.pointerUpListener)\n                    this.pointerUpListener = null\n                }\n                this.fromSquare = params.square\n                this.toSquare = null\n                this.movedPiece = params.piece\n                this.startPoint = params.point\n                if (!this.pointerMoveListener && !this.pointerUpListener) {\n                    if (params.type === \"mousedown\") {\n                        this.pointerMoveListener = this.onPointerMove.bind(this)\n                        this.pointerMoveListener.type = \"mousemove\"\n                        addEventListener(\"mousemove\", this.pointerMoveListener)\n                        this.pointerUpListener = this.onPointerUp.bind(this)\n                        this.pointerUpListener.type = \"mouseup\"\n                        addEventListener(\"mouseup\", this.pointerUpListener)\n                    } else if (params.type === \"touchstart\") {\n                        this.pointerMoveListener = this.onPointerMove.bind(this)\n                        this.pointerMoveListener.type = \"touchmove\"\n                        addEventListener(\"touchmove\", this.pointerMoveListener)\n                        this.pointerUpListener = this.onPointerUp.bind(this)\n                        this.pointerUpListener.type = \"touchend\"\n                        addEventListener(\"touchend\", this.pointerUpListener)\n                    } else {\n                        throw Error(\"4b74af\")\n                    }\n                    if (!this.contextMenuListener) {\n                        this.contextMenuListener = this.onContextMenu.bind(this)\n                        this.chessboard.view.svg.addEventListener(\"contextmenu\", this.contextMenuListener)\n                    }\n                } else {\n                    throw Error(\"94ad0c\")\n                }\n                break\n\n            case MOVE_INPUT_STATE.clickTo:\n                if (this.draggablePiece) {\n                    Svg.removeElement(this.draggablePiece)\n                    this.draggablePiece = null\n                }\n                if (prevState === MOVE_INPUT_STATE.dragTo) {\n                    this.view.setPieceVisibility(params.square, true)\n                }\n                break\n\n            case MOVE_INPUT_STATE.secondClickThreshold:\n                if (MOVE_INPUT_STATE.clickTo !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.startPoint = params.point\n                break\n\n            case MOVE_INPUT_STATE.dragTo:\n                if (MOVE_INPUT_STATE.pieceClickedThreshold !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.view.chessboard.state.inputEnabled()) {\n                    this.view.setPieceVisibility(params.square, false)\n                    this.createDraggablePiece(params.piece)\n                }\n                break\n\n            case MOVE_INPUT_STATE.clickDragTo:\n                if (MOVE_INPUT_STATE.secondClickThreshold !== prevState) {\n                    throw new Error(\"moveInputState\")\n                }\n                if (this.view.chessboard.state.inputEnabled()) {\n                    this.view.setPieceVisibility(params.square, false)\n                    this.createDraggablePiece(params.piece)\n                }\n                break\n\n            case MOVE_INPUT_STATE.moveDone:\n                if ([MOVE_INPUT_STATE.dragTo, MOVE_INPUT_STATE.clickTo, MOVE_INPUT_STATE.clickDragTo].indexOf(prevState) === -1) {\n                    throw new Error(\"moveInputState\")\n                }\n                this.toSquare = params.square\n                if (this.toSquare && this.validateMoveInputCallback(this.fromSquare, this.toSquare)) {\n                    this.chessboard.movePiece(this.fromSquare, this.toSquare, prevState === MOVE_INPUT_STATE.clickTo).then(() => {\n                        if (prevState === MOVE_INPUT_STATE.clickTo) {\n                            this.view.setPieceVisibility(this.toSquare, true)\n                        }\n                        this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                    })\n                } else {\n                    this.view.setPieceVisibility(this.fromSquare, true)\n                    this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                }\n                break\n\n            case MOVE_INPUT_STATE.reset:\n                if (this.fromSquare && !this.toSquare && this.movedPiece) {\n                    this.chessboard.state.position.setPiece(this.fromSquare, this.movedPiece)\n                }\n                this.fromSquare = null\n                this.toSquare = null\n                this.movedPiece = null\n                if (this.draggablePiece) {\n                    Svg.removeElement(this.draggablePiece)\n                    this.draggablePiece = null\n                }\n                if (this.pointerMoveListener) {\n                    removeEventListener(this.pointerMoveListener.type, this.pointerMoveListener)\n                    this.pointerMoveListener = null\n                }\n                if (this.pointerUpListener) {\n                    removeEventListener(this.pointerUpListener.type, this.pointerUpListener)\n                    this.pointerUpListener = null\n                }\n                if (this.contextMenuListener) {\n                    removeEventListener(\"contextmenu\", this.contextMenuListener)\n                    this.contextMenuListener = null\n                }\n                this.setMoveInputState(MOVE_INPUT_STATE.waitForInputStart)\n                // set temporarily hidden pieces visible again\n                const hiddenPieces = this.view.piecesGroup.querySelectorAll(\"[visibility=hidden]\")\n                for (let i = 0; i < hiddenPieces.length; i++) {\n                    hiddenPieces[i].removeAttribute(\"visibility\")\n                }\n                break\n\n            default:\n                throw Error(`260b09: moveInputState ${newState}`)\n        }\n    }\n\n    createDraggablePiece(pieceName) {\n        // maybe I should use the existing piece from the board and don't create a new one\n        if (this.draggablePiece) {\n            throw Error(\"draggablePiece already exists\")\n        }\n        this.draggablePiece = Svg.createSvg(document.body)\n        this.draggablePiece.classList.add(\"cm-chessboard-draggable-piece\")\n        this.draggablePiece.setAttribute(\"width\", this.view.squareWidth)\n        this.draggablePiece.setAttribute(\"height\", this.view.squareHeight)\n        this.draggablePiece.setAttribute(\"style\", \"pointer-events: none\")\n        this.draggablePiece.name = pieceName\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.view.getSpriteUrl()\n        const piece = Svg.addElement(this.draggablePiece, \"use\", {\n            href: `${spriteUrl}#${pieceName}`\n        })\n        const scaling = this.view.squareHeight / this.chessboard.props.style.pieces.tileSize\n        const transformScale = (this.draggablePiece.createSVGTransform())\n        transformScale.setScale(scaling, scaling)\n        piece.transform.baseVal.appendItem(transformScale)\n    }\n\n    moveDraggablePiece(x, y) {\n        this.draggablePiece.setAttribute(\"style\",\n            `pointer-events: none; position: absolute; left: ${x - (this.view.squareHeight / 2)}px; top: ${y - (this.view.squareHeight / 2)}px`)\n    }\n\n    onPointerDown(e) {\n        if (!(e.type === \"mousedown\" && e.button === 0 || e.type === \"touchstart\")) {\n            return\n        }\n        const square = e.target.getAttribute(\"data-square\")\n        if (!square) { // pointer on square\n            return\n        }\n        const pieceName = this.chessboard.getPiece(square)\n        let color\n        if (pieceName) {\n            color = pieceName ? pieceName.substring(0, 1) : null\n            // allow scrolling, if not pointed on draggable piece\n            if (color === \"w\" && this.chessboard.state.inputWhiteEnabled ||\n                color === \"b\" && this.chessboard.state.inputBlackEnabled) {\n                e.preventDefault()\n            }\n        }\n        if (this.moveInputState !== MOVE_INPUT_STATE.waitForInputStart ||\n            this.chessboard.state.inputWhiteEnabled && color === \"w\" ||\n            this.chessboard.state.inputBlackEnabled && color === \"b\") {\n            let point\n            if (e.type === \"mousedown\") {\n                point = {x: e.clientX, y: e.clientY}\n            } else if (e.type === \"touchstart\") {\n                point = {x: e.touches[0].clientX, y: e.touches[0].clientY}\n            }\n            if (this.moveInputState === MOVE_INPUT_STATE.waitForInputStart && pieceName && this.moveInputStartedCallback(square)) {\n                this.setMoveInputState(MOVE_INPUT_STATE.pieceClickedThreshold, {\n                    square: square,\n                    piece: pieceName,\n                    point: point,\n                    type: e.type\n                })\n            } else if (this.moveInputState === MOVE_INPUT_STATE.clickTo) {\n                if (square === this.fromSquare) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.secondClickThreshold, {\n                        square: square,\n                        piece: pieceName,\n                        point: point,\n                        type: e.type\n                    })\n                } else {\n                    const pieceName = this.chessboard.getPiece(square)\n                    const pieceColor = pieceName ? pieceName.substring(0, 1) : null\n                    const startPieceName = this.chessboard.getPiece(this.fromSquare)\n                    const startPieceColor = startPieceName ? startPieceName.substring(0, 1) : null\n                    if (color && startPieceColor === pieceColor) {\n                        this.moveInputCanceledCallback(this.fromSquare, square, MOVE_CANCELED_REASON.clickedAnotherPiece)\n                        if (this.moveInputStartedCallback(square)) {\n                            this.setMoveInputState(MOVE_INPUT_STATE.pieceClickedThreshold, {\n                                square: square,\n                                piece: pieceName,\n                                point: point,\n                                type: e.type\n                            })\n                        } else {\n                            this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                        }\n                    } else {\n                        this.setMoveInputState(MOVE_INPUT_STATE.moveDone, {square: square})\n                    }\n                }\n            }\n        }\n    }\n\n    onPointerMove(e) {\n        let pageX, pageY, clientX, clientY, target\n        if (e.type === \"mousemove\") {\n            clientX = e.clientX\n            clientY = e.clientY\n            pageX = e.pageX\n            pageY = e.pageY\n            target = e.target\n        } else if (e.type === \"touchmove\") {\n            clientX = e.touches[0].clientX\n            clientY = e.touches[0].clientY\n            pageX = e.touches[0].pageX\n            pageY = e.touches[0].pageY\n            target = document.elementFromPoint(clientX, clientY)\n        }\n        if (this.moveInputState === MOVE_INPUT_STATE.pieceClickedThreshold || this.moveInputState === MOVE_INPUT_STATE.secondClickThreshold) {\n            if (Math.abs(this.startPoint.x - clientX) > DRAG_THRESHOLD || Math.abs(this.startPoint.y - clientY) > DRAG_THRESHOLD) {\n                if (this.moveInputState === MOVE_INPUT_STATE.secondClickThreshold) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.clickDragTo, {\n                        square: this.fromSquare,\n                        piece: this.movedPiece\n                    })\n                } else {\n                    this.setMoveInputState(MOVE_INPUT_STATE.dragTo, {square: this.fromSquare, piece: this.movedPiece})\n                }\n                if (this.view.chessboard.state.inputEnabled()) {\n                    this.moveDraggablePiece(pageX, pageY)\n                }\n            }\n        } else if (this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo || this.moveInputState === MOVE_INPUT_STATE.clickTo) {\n            if (target && target.getAttribute && target.parentElement === this.view.boardGroup) {\n                const square = target.getAttribute(\"data-square\")\n                if (square !== this.fromSquare && square !== this.toSquare) {\n                    this.toSquare = square\n                    this.movingOverSquareCallback(this.fromSquare, this.toSquare)\n                } else if (square === this.fromSquare && this.toSquare !== null) {\n                    this.toSquare = null\n                    this.movingOverSquareCallback(this.fromSquare, null)\n                }\n            } else if (this.toSquare !== null) {\n                this.toSquare = null\n                this.movingOverSquareCallback(this.fromSquare, null)\n            }\n\n            if (this.view.chessboard.state.inputEnabled() && (this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo)) {\n                this.moveDraggablePiece(pageX, pageY)\n            }\n        }\n    }\n\n    onPointerUp(e) {\n        let target\n        if (e.type === \"mouseup\") {\n            target = e.target\n        } else if (e.type === \"touchend\") {\n            target = document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY)\n        }\n        if (target && target.getAttribute) {\n            const square = target.getAttribute(\"data-square\")\n\n            if (square) {\n                if (this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo) {\n                    if (this.fromSquare === square) {\n                        if (this.moveInputState === MOVE_INPUT_STATE.clickDragTo) {\n                            this.chessboard.state.position.setPiece(this.fromSquare, this.movedPiece)\n                            this.view.setPieceVisibility(this.fromSquare)\n                            this.moveInputCanceledCallback(square, null, MOVE_CANCELED_REASON.draggedBack)\n                            this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                        } else {\n                            this.setMoveInputState(MOVE_INPUT_STATE.clickTo, {square: square})\n                        }\n                    } else {\n                        this.setMoveInputState(MOVE_INPUT_STATE.moveDone, {square: square})\n                    }\n                } else if (this.moveInputState === MOVE_INPUT_STATE.pieceClickedThreshold) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.clickTo, {square: square})\n                } else if (this.moveInputState === MOVE_INPUT_STATE.secondClickThreshold) {\n                    this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                    this.moveInputCanceledCallback(square, null, MOVE_CANCELED_REASON.secondClick)\n                }\n            } else {\n                this.view.redrawPieces()\n                const moveStartSquare = this.fromSquare\n                this.setMoveInputState(MOVE_INPUT_STATE.reset)\n                this.moveInputCanceledCallback(moveStartSquare, null, MOVE_CANCELED_REASON.movedOutOfBoard)\n            }\n        } else {\n            this.view.redrawPieces()\n            this.setMoveInputState(MOVE_INPUT_STATE.reset)\n        }\n    }\n\n    onContextMenu(e) { // while moving\n        e.preventDefault()\n        this.view.redrawPieces()\n        this.setMoveInputState(MOVE_INPUT_STATE.reset)\n        this.moveInputCanceledCallback(this.fromSquare, null, MOVE_CANCELED_REASON.secondaryClick)\n    }\n\n    isDragging() {\n        return this.moveInputState === MOVE_INPUT_STATE.dragTo || this.moveInputState === MOVE_INPUT_STATE.clickDragTo\n    }\n\n    destroy() {\n        this.setMoveInputState(MOVE_INPUT_STATE.reset)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {VisualMoveInput} from \"./VisualMoveInput.js\"\nimport {BORDER_TYPE, COLOR, INPUT_EVENT_TYPE} from \"../Chessboard.js\"\nimport {Position} from \"../model/Position.js\"\nimport {EXTENSION_POINT} from \"../model/Extension.js\"\nimport {Svg} from \"../lib/Svg.js\"\nimport {Utils} from \"../lib/Utils.js\"\n\nexport class ChessboardView {\n    constructor(chessboard) {\n        this.chessboard = chessboard\n        this.visualMoveInput = new VisualMoveInput(this)\n        if (chessboard.props.assetsCache) {\n            this.cacheSpriteToDiv(\"cm-chessboard-sprite\", this.getSpriteUrl())\n        }\n        this.container = document.createElement(\"div\")\n        this.chessboard.context.appendChild(this.container)\n        if (chessboard.props.responsive) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                this.resizeObserver = new ResizeObserver(() => {\n                    setTimeout(() => { // prevents \"ResizeObserver loop completed with undelivered notifications.\"\n                        this.handleResize()\n                    })\n                })\n                this.resizeObserver.observe(this.chessboard.context)\n            } else {\n                this.resizeListener = this.handleResize.bind(this)\n                window.addEventListener(\"resize\", this.resizeListener)\n            }\n        }\n        this.positionsAnimationTask = Promise.resolve()\n        this.pointerDownListener = this.pointerDownHandler.bind(this)\n        this.pointerDownListener = this.pointerDownHandler.bind(this)\n        this.container.addEventListener(\"mousedown\", this.pointerDownListener)\n        this.container.addEventListener(\"touchstart\", this.pointerDownListener, {passive: false})\n        this.createSvgAndGroups()\n        this.handleResize()\n    }\n\n    pointerDownHandler(e) {\n        this.visualMoveInput.onPointerDown(e)\n    }\n\n    destroy() {\n        this.visualMoveInput.destroy()\n        if (this.resizeObserver) {\n            this.resizeObserver.unobserve(this.chessboard.context)\n        }\n        if (this.resizeListener) {\n            window.removeEventListener(\"resize\", this.resizeListener)\n        }\n        this.chessboard.context.removeEventListener(\"mousedown\", this.pointerDownListener)\n        this.chessboard.context.removeEventListener(\"touchstart\", this.pointerDownListener)\n        Svg.removeElement(this.svg)\n    }\n\n    // Sprite //\n\n    cacheSpriteToDiv(wrapperId, url) {\n        if (!document.getElementById(wrapperId)) {\n            const wrapper = document.createElement(\"div\")\n            wrapper.style.transform = \"scale(0)\"\n            wrapper.style.position = \"absolute\"\n            wrapper.setAttribute(\"aria-hidden\", \"true\")\n            wrapper.id = wrapperId\n            document.body.appendChild(wrapper)\n            const xhr = new XMLHttpRequest()\n            xhr.open(\"GET\", url, true)\n            xhr.onload = function () {\n                wrapper.insertAdjacentHTML('afterbegin', xhr.response)\n            }\n            xhr.send()\n        }\n    }\n\n    createSvgAndGroups() {\n        this.svg = Svg.createSvg(this.container)\n        // let description = document.createElement(\"description\")\n        // description.innerText = \"Chessboard\"\n        // description.id = \"svg-description\"\n        // this.svg.appendChild(description)\n        let cssClass = this.chessboard.props.style.cssClass ? this.chessboard.props.style.cssClass : \"default\"\n        this.svg.setAttribute(\"class\", \"cm-chessboard border-type-\" + this.chessboard.props.style.borderType + \" \" + cssClass)\n        // this.svg.setAttribute(\"aria-describedby\", \"svg-description\")\n        this.svg.setAttribute(\"role\", \"img\")\n        this.updateMetrics()\n        this.boardGroup = Svg.addElement(this.svg, \"g\", {class: \"board\"})\n        this.coordinatesGroup = Svg.addElement(this.svg, \"g\", {class: \"coordinates\", \"aria-hidden\": \"true\"})\n        this.markersLayer = Svg.addElement(this.svg, \"g\", {class: \"markers-layer\"})\n        this.piecesLayer = Svg.addElement(this.svg, \"g\", {class: \"pieces-layer\"})\n        this.piecesGroup = Svg.addElement(this.piecesLayer, \"g\", {class: \"pieces\"})\n        this.markersTopLayer = Svg.addElement(this.svg, \"g\", {class: \"markers-top-layer\"})\n        this.interactiveTopLayer = Svg.addElement(this.svg, \"g\", {class: \"interactive-top-layer\"})\n    }\n\n    updateMetrics() {\n        const piecesTileSize = this.chessboard.props.style.pieces.tileSize\n        this.width = this.container.clientWidth\n        this.height = this.container.clientWidth * (this.chessboard.props.style.aspectRatio || 1)\n        if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n            this.borderSize = this.width / 25\n        } else if (this.chessboard.props.style.borderType === BORDER_TYPE.thin) {\n            this.borderSize = this.width / 320\n        } else {\n            this.borderSize = 0\n        }\n        this.innerWidth = this.width - 2 * this.borderSize\n        this.innerHeight = this.height - 2 * this.borderSize\n        this.squareWidth = this.innerWidth / 8\n        this.squareHeight = this.innerHeight / 8\n        this.scalingX = this.squareWidth / piecesTileSize\n        this.scalingY = this.squareHeight / piecesTileSize\n        this.pieceXTranslate = (this.squareWidth / 2 - piecesTileSize * this.scalingY / 2)\n    }\n\n    handleResize() {\n        this.container.style.width = this.chessboard.context.clientWidth + \"px\"\n        this.container.style.height = (this.chessboard.context.clientWidth * this.chessboard.props.style.aspectRatio) + \"px\"\n        if (this.container.clientWidth !== this.width || this.container.clientHeight !== this.height) {\n            this.updateMetrics()\n            this.redrawBoard()\n            this.redrawPieces()\n        }\n        this.svg.setAttribute(\"width\", \"100%\")\n        this.svg.setAttribute(\"height\", \"100%\")\n    }\n\n    redrawBoard() {\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.beforeRedrawBoard)\n        this.redrawSquares()\n        this.drawCoordinates()\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.afterRedrawBoard)\n        this.visualizeInputState()\n    }\n\n    // Board //\n\n    redrawSquares() {\n        while (this.boardGroup.firstChild) {\n            this.boardGroup.removeChild(this.boardGroup.lastChild)\n        }\n\n        let boardBorder = Svg.addElement(this.boardGroup, \"rect\", {width: this.width, height: this.height})\n        boardBorder.setAttribute(\"class\", \"border\")\n        if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n            const innerPos = this.borderSize\n            let borderInner = Svg.addElement(this.boardGroup, \"rect\", {\n                x: innerPos, y: innerPos, width: this.width - innerPos * 2, height: this.height - innerPos * 2\n            })\n            borderInner.setAttribute(\"class\", \"border-inner\")\n        }\n\n        for (let i = 0; i < 64; i++) {\n            const index = this.chessboard.state.orientation === COLOR.white ? i : 63 - i\n            const squareColor = ((9 * index) & 8) === 0 ? 'black' : 'white'\n            const fieldClass = `square ${squareColor}`\n            const point = this.squareToPoint(Position.indexToSquare(index))\n            const squareRect = Svg.addElement(this.boardGroup, \"rect\", {\n                x: point.x, y: point.y, width: this.squareWidth, height: this.squareHeight\n            })\n            squareRect.setAttribute(\"class\", fieldClass)\n            squareRect.setAttribute(\"data-square\", Position.indexToSquare(index))\n        }\n    }\n\n    drawCoordinates() {\n        if (!this.chessboard.props.style.showCoordinates) {\n            return\n        }\n        while (this.coordinatesGroup.firstChild) {\n            this.coordinatesGroup.removeChild(this.coordinatesGroup.lastChild)\n        }\n        const inline = this.chessboard.props.style.borderType !== BORDER_TYPE.frame\n        for (let file = 0; file < 8; file++) {\n            let x = this.borderSize + (17 + this.chessboard.props.style.pieces.tileSize * file) * this.scalingX\n            let y = this.height - this.scalingY * 3.5\n            let cssClass = \"coordinate file\"\n            if (inline) {\n                x = x + this.scalingX * 15.5\n                cssClass += file % 2 ? \" white\" : \" black\"\n            }\n            const textElement = Svg.addElement(this.coordinatesGroup, \"text\", {\n                class: cssClass, x: x, y: y, style: `font-size: ${this.scalingY * 10}px`\n            })\n            if (this.chessboard.state.orientation === COLOR.white) {\n                textElement.textContent = String.fromCharCode(97 + file)\n            } else {\n                textElement.textContent = String.fromCharCode(104 - file)\n            }\n        }\n        for (let rank = 0; rank < 8; rank++) {\n            let x = (this.borderSize / 3.7)\n            let y = this.borderSize + 25 * this.scalingY + rank * this.squareHeight\n            let cssClass = \"coordinate rank\"\n            if (inline) {\n                cssClass += rank % 2 ? \" black\" : \" white\"\n                if (this.chessboard.props.style.borderType === BORDER_TYPE.frame) {\n                    x = x + this.scalingX * 10\n                    y = y - this.scalingY * 15\n                } else {\n                    x = x + this.scalingX * 2\n                    y = y - this.scalingY * 15\n                }\n            }\n            const textElement = Svg.addElement(this.coordinatesGroup, \"text\", {\n                class: cssClass, x: x, y: y, style: `font-size: ${this.scalingY * 10}px`\n            })\n            if (this.chessboard.state.orientation === COLOR.white) {\n                textElement.textContent = \"\" + (8 - rank)\n            } else {\n                textElement.textContent = \"\" + (1 + rank)\n            }\n        }\n    }\n\n    // Pieces //\n\n    redrawPieces(squares = this.chessboard.state.position.squares) {\n        const childNodes = Array.from(this.piecesGroup.childNodes)\n        const isDragging = this.visualMoveInput.isDragging()\n        for (let i = 0; i < 64; i++) {\n            const pieceName = squares[i]\n            if (pieceName) {\n                const square = Position.indexToSquare(i)\n                this.drawPieceOnSquare(square, pieceName, isDragging && square === this.visualMoveInput.fromSquare)\n            }\n        }\n        for (const childNode of childNodes) {\n            this.piecesGroup.removeChild(childNode)\n        }\n    }\n\n    drawPiece(parentGroup, pieceName, point) {\n        const pieceGroup = Svg.addElement(parentGroup, \"g\", {})\n        pieceGroup.setAttribute(\"data-piece\", pieceName)\n        const transform = (this.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        pieceGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.getSpriteUrl()\n        const pieceUse = Svg.addElement(pieceGroup, \"use\", {\n            href: `${spriteUrl}#${pieceName}`, class: \"piece\"\n        })\n        const transformScale = (this.svg.createSVGTransform())\n        transformScale.setScale(this.scalingY, this.scalingY)\n        pieceUse.transform.baseVal.appendItem(transformScale)\n        return pieceGroup\n    }\n\n    drawPieceOnSquare(square, pieceName, hidden = false) {\n        const pieceGroup = Svg.addElement(this.piecesGroup, \"g\", {})\n        pieceGroup.setAttribute(\"data-piece\", pieceName)\n        pieceGroup.setAttribute(\"data-square\", square)\n        if (hidden) {\n            pieceGroup.setAttribute(\"visibility\", \"hidden\")\n        }\n        const point = this.squareToPoint(square)\n        const transform = (this.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        pieceGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.getSpriteUrl()\n        const pieceUse = Svg.addElement(pieceGroup, \"use\", {\n            href: `${spriteUrl}#${pieceName}`, class: \"piece\"\n        })\n        // center on square\n        const transformTranslate = (this.svg.createSVGTransform())\n        transformTranslate.setTranslate(this.pieceXTranslate, 0)\n        pieceUse.transform.baseVal.appendItem(transformTranslate)\n        // scale\n        const transformScale = (this.svg.createSVGTransform())\n        transformScale.setScale(this.scalingY, this.scalingY)\n        pieceUse.transform.baseVal.appendItem(transformScale)\n        return pieceGroup\n    }\n\n    setPieceVisibility(square, visible = true) {\n        const piece = this.getPieceElement(square)\n        if (piece) {\n            if (visible) {\n                piece.setAttribute(\"visibility\", \"visible\")\n            } else {\n                piece.setAttribute(\"visibility\", \"hidden\")\n            }\n        } else {\n            console.warn(\"no piece on\", square)\n        }\n    }\n\n    getPieceElement(square) {\n        if (!square || square.length < 2) {\n            console.warn(\"invalid square\", square)\n            return null\n        }\n        const piece = this.piecesGroup.querySelector(`g[data-square='${square}']`)\n        if (!piece) {\n            console.warn(\"no piece on\", square)\n            return null\n        }\n        return piece\n    }\n\n    // enable and disable move input //\n\n    enableMoveInput(eventHandler, color = null) {\n        if (this.chessboard.state.moveInputCallback) {\n            throw Error(\"moveInput already enabled\")\n        }\n        if (color === COLOR.white) {\n            this.chessboard.state.inputWhiteEnabled = true\n        } else if (color === COLOR.black) {\n            this.chessboard.state.inputBlackEnabled = true\n        } else {\n            this.chessboard.state.inputWhiteEnabled = true\n            this.chessboard.state.inputBlackEnabled = true\n        }\n        this.chessboard.state.moveInputCallback = eventHandler\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInputToggled, {enabled: true, color: color})\n        this.visualizeInputState()\n    }\n\n    disableMoveInput() {\n        this.chessboard.state.inputWhiteEnabled = false\n        this.chessboard.state.inputBlackEnabled = false\n        this.chessboard.state.moveInputCallback = null\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInputToggled, {enabled: false})\n        this.visualizeInputState()\n    }\n\n    // callbacks //\n\n    moveInputStartedCallback(square) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.moveInputStarted,\n            square: square, /** square is deprecated, use squareFrom (2023-05-22) */\n            squareFrom: square,\n            piece: this.chessboard.getPiece(square)\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            data.moveInputCallbackResult = this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n        return data.moveInputCallbackResult\n    }\n\n    movingOverSquareCallback(squareFrom, squareTo) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.movingOverSquare,\n            squareFrom: squareFrom,\n            squareTo: squareTo,\n            piece: this.chessboard.getPiece(squareFrom)\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            data.moveInputCallbackResult = this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n    }\n\n    validateMoveInputCallback(squareFrom, squareTo) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.validateMoveInput,\n            squareFrom: squareFrom,\n            squareTo: squareTo,\n            piece: this.chessboard.getPiece(squareFrom)\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            data.moveInputCallbackResult = this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n        return data.moveInputCallbackResult\n    }\n\n    moveInputCanceledCallback(squareFrom, squareTo, reason) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.moveInputCanceled,\n            reason: reason,\n            squareFrom: squareFrom,\n            squareTo: squareTo\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n    }\n\n    moveInputFinishedCallback(squareFrom, squareTo, legalMove) {\n        const data = {\n            chessboard: this.chessboard,\n            type: INPUT_EVENT_TYPE.moveInputFinished,\n            squareFrom: squareFrom,\n            squareTo: squareTo,\n            legalMove: legalMove\n        }\n        if (this.chessboard.state.moveInputCallback) {\n            this.chessboard.state.moveInputCallback(data)\n        }\n        this.chessboard.state.invokeExtensionPoints(EXTENSION_POINT.moveInput, data)\n    }\n\n    // Helpers //\n\n    visualizeInputState() {\n        if (this.chessboard.state) { // fix https://github.com/shaack/cm-chessboard/issues/47\n            if (this.chessboard.state.inputWhiteEnabled || this.chessboard.state.inputBlackEnabled) {\n                this.boardGroup.setAttribute(\"class\", \"board input-enabled\")\n            } else {\n                this.boardGroup.setAttribute(\"class\", \"board\")\n            }\n        }\n    }\n\n    indexToPoint(index) {\n        let x, y\n        if (this.chessboard.state.orientation === COLOR.white) {\n            x = this.borderSize + (index % 8) * this.squareWidth\n            y = this.borderSize + (7 - Math.floor(index / 8)) * this.squareHeight\n        } else {\n            x = this.borderSize + (7 - index % 8) * this.squareWidth\n            y = this.borderSize + (Math.floor(index / 8)) * this.squareHeight\n        }\n        return {x: x, y: y}\n    }\n\n    squareToPoint(square) {\n        const index = Position.squareToIndex(square)\n        return this.indexToPoint(index)\n    }\n\n    getSpriteUrl() {\n        if (Utils.isAbsoluteUrl(this.chessboard.props.style.pieces.file)) {\n            return this.chessboard.props.style.pieces.file\n        } else {\n            return this.chessboard.props.assetsUrl + this.chessboard.props.style.pieces.file\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nimport {ChessboardState} from \"./model/ChessboardState.js\"\nimport {FEN, Position} from \"./model/Position.js\"\nimport {PositionAnimationsQueue} from \"./view/PositionAnimationsQueue.js\"\nimport {EXTENSION_POINT} from \"./model/Extension.js\"\nimport {ChessboardView} from \"./view/ChessboardView.js\"\nimport {Utils} from \"./lib/Utils.js\"\n\nexport const COLOR = {\n    white: \"w\",\n    black: \"b\"\n}\nexport const INPUT_EVENT_TYPE = {\n    moveInputStarted: \"moveInputStarted\",\n    movingOverSquare: \"movingOverSquare\", // while dragging or hover after click\n    validateMoveInput: \"validateMoveInput\",\n    moveInputCanceled: \"moveInputCanceled\",\n    moveInputFinished: \"moveInputFinished\"\n}\n/** @deprecated */\nexport const SQUARE_SELECT_TYPE = {\n    primary: \"primary\",\n    secondary: \"secondary\"\n}\nexport const BORDER_TYPE = {\n    none: \"none\", // no border\n    thin: \"thin\", // thin border\n    frame: \"frame\" // wide border with coordinates in it\n}\nexport const PIECE = {\n    wp: \"wp\", wb: \"wb\", wn: \"wn\", wr: \"wr\", wq: \"wq\", wk: \"wk\",\n    bp: \"bp\", bb: \"bb\", bn: \"bn\", br: \"br\", bq: \"bq\", bk: \"bk\"\n}\n\nexport const PIECES_FILE_TYPE = {\n    svgSprite: \"svgSprite\"\n}\n\nexport {FEN}\n\nexport class Chessboard {\n\n    constructor(context, props = {}) {\n        if (!context) {\n            throw new Error(\"container element is \" + context)\n        }\n        this.context = context\n        this.id = (Math.random() + 1).toString(36).substring(2, 8)\n        this.extensions = []\n        this.props = {\n            position: FEN.empty, // set position as fen, use FEN.start or FEN.empty as shortcuts\n            orientation: COLOR.white, // white on bottom\n            responsive: true, // resize the board automatically to the size of the context element\n            assetsUrl: \"./assets/\", // put all css and sprites in this folder, will be ignored for absolute urls of assets files\n            assetsCache: true, // cache the sprites, deactivate if you want to use multiple pieces sets in one page\n            style: {\n                cssClass: \"default\", // set the css theme of the board, try \"green\", \"blue\" or \"chess-club\"\n                showCoordinates: true, // show ranks and files\n                borderType: BORDER_TYPE.none, // \"thin\" thin border, \"frame\" wide border with coordinates in it, \"none\" no border\n                aspectRatio: 1, // height/width of the board\n                pieces: {\n                    type: PIECES_FILE_TYPE.svgSprite, // pieces are in an SVG sprite, no other type supported for now\n                    file: \"pieces/standard.svg\", // the filename of the sprite in `assets/pieces/` or an absolute url like `https://\u2026` or `/\u2026`\n                    tileSize: 40 // the tile size in the sprite\n                },\n                animationDuration: 300 // pieces animation duration in milliseconds. Disable all animations with `0`\n            },\n            extensions: [ /* {class: ExtensionClass, props: { ... }} */] // add extensions here\n        }\n        Utils.mergeObjects(this.props, props)\n        this.state = new ChessboardState()\n        this.view = new ChessboardView(this)\n        this.positionAnimationsQueue = new PositionAnimationsQueue(this)\n        this.state.orientation = this.props.orientation\n        // instantiate extensions\n        for (const extensionData of this.props.extensions) {\n            this.addExtension(extensionData.class, extensionData.props)\n        }\n        this.view.redrawBoard()\n        this.state.position = new Position(this.props.position)\n        this.view.redrawPieces()\n        this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        this.initialized = Promise.resolve() // deprecated 2023-09-19 don't use this anymore\n    }\n\n    // API //\n\n    async setPiece(square, piece, animated = false) {\n        const positionFrom = this.state.position.clone()\n        this.state.position.setPiece(square, piece)\n        this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        return this.positionAnimationsQueue.enqueuePositionChange(positionFrom, this.state.position.clone(), animated)\n    }\n\n    async movePiece(squareFrom, squareTo, animated = false) {\n        const positionFrom = this.state.position.clone()\n        this.state.position.movePiece(squareFrom, squareTo)\n        this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        return this.positionAnimationsQueue.enqueuePositionChange(positionFrom, this.state.position.clone(), animated)\n    }\n\n    async setPosition(fen, animated = false) {\n        const positionFrom = this.state.position.clone()\n        const positionTo = new Position(fen)\n        if (positionFrom.getFen() !== positionTo.getFen()) {\n            this.state.position.setFen(fen)\n            this.state.invokeExtensionPoints(EXTENSION_POINT.positionChanged)\n        }\n        return this.positionAnimationsQueue.enqueuePositionChange(positionFrom, this.state.position.clone(), animated)\n    }\n\n    async setOrientation(color, animated = false) {\n        const position = this.state.position.clone()\n        if (this.boardTurning) {\n            console.warn(\"setOrientation is only once in queue allowed\")\n            return\n        }\n        this.boardTurning = true\n        return this.positionAnimationsQueue.enqueueTurnBoard(position, color, animated).then(() => {\n            this.boardTurning = false\n            this.state.invokeExtensionPoints(EXTENSION_POINT.boardChanged)\n        })\n    }\n\n    getPiece(square) {\n        return this.state.position.getPiece(square)\n    }\n\n    getPosition() {\n        return this.state.position.getFen()\n    }\n\n    getOrientation() {\n        return this.state.orientation\n    }\n\n    enableMoveInput(eventHandler, color = undefined) {\n        this.view.enableMoveInput(eventHandler, color)\n    }\n\n    disableMoveInput() {\n        this.view.disableMoveInput()\n    }\n\n    addExtension(extensionClass, props) {\n        if(this.getExtension(extensionClass)) {\n            throw Error(\"extension \\\"\" + extensionClass.name + \"\\\" already added\")\n        }\n        this.extensions.push(new extensionClass(this, props))\n    }\n\n    getExtension(extensionClass) {\n        for (const extension of this.extensions) {\n            if (extension instanceof extensionClass) {\n                return extension\n            }\n        }\n        return null\n    }\n\n    destroy() {\n        this.state.invokeExtensionPoints(EXTENSION_POINT.destroy)\n        this.positionAnimationsQueue.destroy()\n        this.view.destroy()\n        this.view = undefined\n        this.state = undefined\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class I18n {\n\n    constructor(props = {}) {\n        this.props = {\n            locale: null,\n            fallbackLang: \"en\" // used, when the translation was not found for locale\n        }\n        Object.assign(this.props, props)\n        this.locale = this.props.locale\n        if (!this.locale) {\n            const htmlLang = document.documentElement.getAttribute(\"lang\")\n            if (htmlLang) {\n                this.locale = htmlLang\n            }\n            if (!this.locale) {\n                this.locale = navigator.language\n            }\n        }\n        this.lang = this.locale.substr(0, 2)\n        this.translations = {}\n    }\n\n    load(dictionary) {\n        let fetchPromises = []\n        for (const lang in dictionary) {\n            if (dictionary.hasOwnProperty(lang)) {\n                if (!this.translations[lang]) {\n                    this.translations[lang] = {}\n                }\n                const translations = dictionary[lang]\n                if (typeof translations === \"string\") {\n                    fetchPromises.push(new Promise((resolve) => {\n                        fetch(translations)\n                            .then(res => res.json())\n                            .then(json => {\n                                Object.assign(this.translations[lang], json)\n                                resolve()\n                            })\n                            .catch(err => {\n                                throw err\n                            })\n                    }))\n                } else {\n                    Object.assign(this.translations[lang], translations)\n                }\n            }\n        }\n        if(fetchPromises.length > 0) {\n            return Promise.all(fetchPromises)\n        } else {\n            return Promise.resolve()\n        }\n    }\n\n    t(code, ...values) {\n        let translation\n        if (this.translations[this.locale] && this.translations[this.locale][code]) {\n            translation = this.translations[this.locale][code]\n        } else if (this.translations[this.lang] && this.translations[this.lang][code]) {\n            translation = this.translations[this.lang][code]\n        } else if (this.translations[this.props.fallbackLang][code]) {\n            translation = this.translations[this.props.fallbackLang][code]\n        } else {\n            console.warn(\"Error, no translation found for locale:\", this.locale,\n                \", lang: \", this.lang, \", code: \", code)\n            return \"?\" + code + \"?\"\n        }\n        if (values && values.length > 0) {\n            let i = 0\n            for (const value of values) {\n                translation = translation.replace(new RegExp(\"\\\\$\" + i, \"g\"), value)\n                i++\n            }\n        }\n        return translation\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class MessageBroker {\n\n    constructor() {\n        this.topics = []\n    }\n\n    subscribe(topic, callback) {\n        if(!topic) {\n            const message = \"subscribe: topic needed\"\n            console.error(message, callback)\n            throw new Error(message)\n        }\n        if(!callback) {\n            const message = \"subscribe: callback needed\"\n            console.error(message, topic)\n            throw new Error(message)\n        }\n        if (this.topics[topic] === undefined) {\n            this.topics[topic] = []\n        }\n        if (this.topics[topic].indexOf(callback) === -1) {\n            this.topics[topic].push(callback)\n        }\n    }\n\n    unsubscribe(topic = null, callback = null) {\n        if(callback !== null && topic !== null) {\n            this.topics[topic].splice(this.topics[topic].indexOf(callback), 1)\n        } else if (callback === null && topic !== null) {\n            this.topics[topic] = []\n        } else if (topic === null && callback !== null) {\n            for (const topicName in this.topics) {\n                // noinspection JSUnfilteredForInLoop\n                const topic = this.topics[topicName]\n                for (const topicSubscriber of topic) {\n                    if(topicSubscriber === callback) {\n                        // noinspection JSUnfilteredForInLoop\n                        this.unsubscribe(topicName, callback)\n                    }\n                }\n            }\n        } else {\n            this.topics = []\n        }\n        if(topic !== null) {\n            if(this.topics[topic] && this.topics[topic].length === 0) {\n                delete this.topics[topic]\n            }\n        }\n    }\n\n    publish(topic, object = {}, async = true) {\n        if(!topic) {\n            const message = \"publish: topic needed\"\n            console.error(message, object)\n            throw new Error(message)\n        }\n        const breadcrumbArray = topic.split(\"/\")\n        let wildcardTopic = \"\"\n        for (const topicPart of breadcrumbArray) {\n            this.callback(wildcardTopic + \"#\", topic, object, async)\n            wildcardTopic += topicPart + \"/\"\n        }\n        this.callback(topic, topic, object, async)\n    }\n\n    callback(wildcardTopic, topic, object = {}, async = true) {\n        if (this.topics[wildcardTopic]) {\n            this.topics[wildcardTopic].forEach(function (callback) {\n                if(async) {\n                    setTimeout(function () {\n                        callback(object, topic)\n                    })\n                } else {\n                    return callback(object, topic)\n                }\n            })\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class DomUtils {\n\n    static onDocumentReady(callback) {\n        this.documentReady(callback)\n    }\n\n    /** @deprecated 2023-05-31 use onDocumentReady() */\n    static documentReady(callback) {\n        document.addEventListener(\"DOMContentLoaded\", callback)\n        if (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n            document.removeEventListener(\"DOMContentLoaded\", callback)\n            callback()\n        }\n    }\n\n    // https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n    static isElementVisible(element) {\n        return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n    }\n\n    // https://stackoverflow.com/questions/123999/how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    static isElementInViewport(element) {\n        const rect = element.getBoundingClientRect()\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n        )\n    }\n\n    static getFormInputValues(context) {\n        const inputs = context.querySelectorAll(\"input,select\")\n        const values = {}\n        inputs.forEach((input) => {\n            if (input.type === \"checkbox\") {\n                values[input.id] = !!input.checked\n            } else {\n                values[input.id] = input.value\n            }\n        })\n        return values\n    }\n\n    static isBrowserDarkMode() {\n        return !!(window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n    }\n\n    static browserSupportsPreferredColorScheme() {\n        return window.matchMedia &&\n            (window.matchMedia(\"(prefers-color-scheme: dark)\").matches ||\n                window.matchMedia(\"(prefers-color-scheme: light)\").matches)\n    }\n\n    static loadJs(src) {\n        const element = document.createElement(\"script\")\n        element.setAttribute(\"type\", \"text/javascript\")\n        element.setAttribute(\"src\", src)\n        document.getElementsByTagName(\"head\")[0].appendChild(element)\n    }\n\n    static loadCss(src) {\n        const element = document.createElement(\"link\")\n        element.setAttribute(\"rel\", \"stylesheet\")\n        element.setAttribute(\"type\", \"text/css\")\n        element.setAttribute(\"href\", src)\n        document.getElementsByTagName(\"head\")[0].appendChild(element)\n    }\n\n    static setCustomProperty(name, value, element = document.documentElement) {\n        element.style.setProperty(\"--\" + name, value.trim())\n    }\n\n    static getCustomProperty(name, element = document.documentElement) {\n        return getComputedStyle(element).getPropertyValue(\"--\" + name).trim()\n    }\n\n    static createElement(html) {\n        const template = document.createElement(\"template\")\n        template.innerHTML = html.trim()\n        return template.content.firstChild\n    }\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element)\n    }\n\n    static clearElement(element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild)\n        }\n    }\n\n    static insertAfter(newChild, refChild) {\n        refChild.parentNode.insertBefore(newChild, refChild.nextSibling)\n    }\n\n    static delegate(element, eventName, selector, handler) {\n        const eventListener = function (event) {\n            let target = event.target\n            while (target && target !== this) {\n                if (target.matches(selector)) {\n                    handler.call(target, event)\n                }\n                target = target.parentNode\n            }\n        }\n        element.addEventListener(eventName, eventListener)\n        return {\n            remove: function () {\n                element.removeEventListener(eventName, eventListener)\n            }\n        }\n    }\n\n    static openExternalLinksBlank() {\n        const links = document.links\n        for (let i = 0; i < links.length; i++) {\n            const target = links[i].target\n            if (links[i].hostname !== window.location.hostname && target !== \"_self\") {\n                links[i].target = \"_blank\"\n            }\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\nimport {DomUtils} from \"../utils/DomUtils.js\"\n\nexport class Component {\n\n    constructor(props = {}, state = {}) {\n        this.props = props\n        this.state = state\n    }\n\n}\n\n/** @deprecated */\nexport class UiComponent extends Component {\n\n    constructor(context, props = {}, state = {}) {\n        super(props, state)\n        this.context = context\n        this.actions = {}\n    }\n\n    /**\n     * Searches for \"data-event-listener\" attributes in the HTML, and couples them with actions.\n     * Tag Attributes:\n     *  - `data-event-listener`: The event \"click\", \"change\",...\n     *  - `data-action`: The action in this.actions, called on the event\n     *  - `data-delegate`: Query selector, to delegate the event from a child element\n     */\n    addDataEventListeners(context = this.context) {\n        const eventListenerElements = context.querySelectorAll(\"[data-event-listener]\")\n        if(this.props.debug) {\n            console.log(\"eventListenerElements\", context, eventListenerElements)\n        }\n        for (const eventListenerElement of eventListenerElements) {\n            const eventName = eventListenerElement.dataset.eventListener\n            const action = eventListenerElement.dataset.action\n            const delegate = eventListenerElement.dataset.delegate\n            if (!this.actions[action]) {\n                console.error(context, \"You have to add the action \\\"\" + action + \"\\\" to your component.\")\n            }\n            if (delegate) {\n                DomUtils.delegate(eventListenerElement, eventName, delegate, (target) => {\n                    if(this.props.debug) {\n                        console.log(\"delegate\", action, target)\n                    }\n                    this.actions[action](target)\n                })\n            } else {\n                if(this.props.debug) {\n                    console.log(\"addEventListener\", eventName, action)\n                }\n                if(!this.actions[action]) {\n                    console.error(\"no action\", \"\\\"\" + action + \"\\\"\", \"is defined\")\n                } else {\n                    eventListenerElement.addEventListener(eventName, this.actions[action].bind(this))\n                }\n            }\n        }\n        return this\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\n\nexport const piecesTranslations = {\n    en: {\n        colors: {\n            w: \"w\", b: \"b\"\n        },\n        colors_long: {\n            w: \"White\", b: \"Black\"\n        },\n        pieces: {\n            p: \"p\", n: \"n\", b: \"b\", r: \"r\", q: \"q\", k: \"k\"\n        },\n        pieces_long: {\n            p: \"Pawn\", n: \"Knight\", b: \"Bishop\", r: \"Rook\", q: \"Queen\", k: \"King\"\n        }\n    },\n    de: {\n        colors: {\n            w: \"w\", b: \"s\"\n        },\n        colors_long: {\n            w: \"Wei\u00DF\", b: \"Schwarz\"\n        },\n        pieces: {\n            p: \"b\", n: \"s\", b: \"l\", r: \"t\", q: \"d\", k: \"k\"\n        },\n        pieces_long: {\n            p: \"Bauer\", n: \"Springer\", b: \"L\u00E4ufer\", r: \"Turm\", q: \"Dame\", k: \"K\u00F6nig\"\n        }\n    }\n}\n\nexport function renderPieceTitle(lang, name, color = undefined) {\n    let title = piecesTranslations[lang].pieces_long[name]\n    if (color) {\n        title += \" \" + piecesTranslations[lang].colors_long[color]\n    }\n    return title\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nconst collectionMutationMethods = {\n    array: [\"copyWithin\", \"fill\", \"pop\", \"push\", \"reverse\", \"shift\", \"unshift\", \"sort\", \"splice\"],\n    set: [\"add\", \"clear\", \"delete\"],\n    map: [\"set\", \"clear\", \"delete\"]\n}\n\nconst registry = new Map()\n\nexport class Observe {\n\n    /**\n     * Intercept a function call before the function is executed. Can manipulate\n     * arguments in callback.\n     * @param object\n     * @param functionName allows multiple names as array\n     * @param callback\n     * @returns Object with `remove` function to remove the interceptor\n     */\n    static preFunction(object, functionName, callback) {\n        if (Array.isArray(functionName)) {\n            let removes = []\n            functionName.forEach((functionNameItem) => {\n                removes.push(Observe.preFunction(object, functionNameItem, callback))\n            })\n            return {\n                remove: () => {\n                    removes.forEach((remove) => {\n                        remove.remove()\n                    })\n                }\n            }\n        }\n        if (!registry.has(object)) {\n            registry.set(object, {})\n        }\n        const registryObject = registry.get(object)\n        if (registryObject.observedPreFunctions === undefined) {\n            registryObject.observedPreFunctions = new Map()\n        }\n        if (!registryObject.observedPreFunctions.has(functionName)) {\n            registryObject.observedPreFunctions.set(functionName, new Set())\n            const originalMethod = object[functionName]\n            object[functionName] = function () {\n                let functionArguments = arguments\n                registryObject.observedPreFunctions.get(functionName).forEach(function (callback) {\n                    const params = {functionName: functionName, arguments: functionArguments}\n                    const callbackReturn = callback(params)\n                    if (callbackReturn) {\n                        functionArguments = callbackReturn\n                    }\n                })\n                return originalMethod.apply(object, functionArguments)\n            }\n        }\n        registryObject.observedPreFunctions.get(functionName).add(callback)\n        return {\n            remove: () => {\n                registryObject.observedPreFunctions.get(functionName).delete(callback)\n            }\n        }\n    }\n\n    /**\n     * Intercept a function call after the function is executed. Can manipulate\n     * returnValue in callback.\n     * @param object\n     * @param functionName allows multiple names as array\n     * @param callback\n     * @returns Object with `remove` function to remove the interceptor\n     */\n    static postFunction(object, functionName, callback) {\n        if (Array.isArray(functionName)) {\n            let removes = []\n            functionName.forEach((functionNameItem) => {\n                removes.push(Observe.postFunction(object, functionNameItem, callback))\n            })\n            return {\n                remove: () => {\n                    removes.forEach((remove) => {\n                        remove.remove()\n                    })\n                }\n            }\n        }\n        if (!registry.has(object)) {\n            registry.set(object, {})\n        }\n        const registryObject = registry.get(object)\n        if (registryObject.observedPostFunctions === undefined) {\n            registryObject.observedPostFunctions = new Map()\n        }\n        if (!registryObject.observedPostFunctions.has(functionName)) {\n            registryObject.observedPostFunctions.set(functionName, new Set())\n            const originalMethod = object[functionName]\n            object[functionName] = function () {\n                let returnValue = originalMethod.apply(object, arguments)\n                const functionArguments = arguments\n                registryObject.observedPostFunctions.get(functionName).forEach(function (callback) {\n                    const params = {functionName: functionName, arguments: functionArguments, returnValue: returnValue}\n                    callback(params)\n                    returnValue = params.returnValue // modifiable if called synced\n                })\n                return returnValue\n            }\n        }\n        registryObject.observedPostFunctions.get(functionName).add(callback)\n        return {\n            remove: () => {\n                registryObject.observedPostFunctions.get(functionName).delete(callback)\n            }\n        }\n    }\n\n    /**\n     * Observe properties (attributes) of an object. Works also with Arrays, Maps and Sets.\n     * The parameter `propertyName` can be an array of names to observe multiple properties.\n     * @param object\n     * @param propertyName allows multiple names as array\n     * @param callback\n     */\n    static property(object, propertyName, callback) {\n        // console.warn(\"`Observe` was deprecated at 2022-06-29, use `Observed`\")\n        if (Array.isArray(propertyName)) {\n            let removes = []\n            propertyName.forEach((propertyNameItem) => {\n                removes.push(Observe.property(object, propertyNameItem, callback))\n            })\n            return {\n                remove: () => {\n                    removes.forEach((remove) => {\n                        remove.remove()\n                    })\n                }\n            }\n        }\n        if (!object.hasOwnProperty(propertyName)) {\n            console.error(\"Observe.property\", object, \"missing property: \" + propertyName)\n            return\n        }\n        let isCollection = false\n        if (!registry.has(object)) {\n            registry.set(object, {})\n        }\n        const registryObject = registry.get(object)\n        if (registryObject.observedProperties === undefined) {\n            registryObject.observedProperties = new Map()\n        }\n        if (!registryObject.observedProperties.has(propertyName)) {\n            registryObject.observedProperties.set(propertyName, {\n                value: object[propertyName],\n                observers: new Set()\n            });\n\n            const property = object[propertyName]\n            let mutationMethods = []\n            if (property instanceof Array) {\n                isCollection = true\n                mutationMethods = collectionMutationMethods.array\n            } else if (property instanceof Set || property instanceof WeakSet) {\n                isCollection = true\n                mutationMethods = collectionMutationMethods.set\n            } else if (property instanceof Map || property instanceof WeakMap) {\n                isCollection = true\n                mutationMethods = collectionMutationMethods.map\n            }\n            if (delete object[propertyName]) { // handling for simple properties\n                Object.defineProperty(object, propertyName, {\n                    get: function () {\n                        return registryObject.observedProperties.get(propertyName).value\n                    },\n                    set: function (newValue) {\n                        const oldValue = registryObject.observedProperties.get(propertyName).value\n                        if (newValue !== oldValue) {\n                            registryObject.observedProperties.get(propertyName).value = newValue\n                            registryObject.observedProperties.get(propertyName).observers.forEach(function (callback) {\n                                const params = {propertyName: propertyName, oldValue: oldValue, newValue: newValue}\n                                callback(params)\n                            })\n                        }\n                    },\n                    enumerable: true,\n                    configurable: true\n                })\n                if (isCollection) { // handling for Collections\n                    mutationMethods.forEach(function (methodName) {\n                        object[propertyName][methodName] = function () {\n                            // object[propertyName].constructor.prototype[methodName] is Array or Set or...\n                            // noinspection JSPotentiallyInvalidConstructorUsage\n                            object[propertyName].constructor.prototype[methodName].apply(this, arguments)\n                            const methodArguments = arguments\n                            registryObject.observedProperties.get(propertyName).observers.forEach(function (observer) {\n                                const params = {\n                                    propertyName: propertyName,\n                                    methodName: methodName,\n                                    arguments: methodArguments,\n                                    newValue: object[propertyName]\n                                }\n                                observer(params)\n                            })\n                        }\n                    })\n                }\n            } else {\n                console.error(\"Error: Observe.property\", propertyName, \"failed\")\n            }\n        }\n        registryObject.observedProperties.get(propertyName).observers.add(callback)\n        return {\n            remove: () => {\n                registryObject.observedProperties.get(propertyName).observers.delete(callback)\n            }\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {COLOR} from \"cm-chessboard/src/Chessboard.js\"\nimport {Chess} from \"cm-chess/src/Chess.js\"\n\nexport class ChessConsoleState {\n\n    constructor(props) {\n        this.chess = new Chess() // used to validate moves and keep the history\n        this.orientation = props.playerColor || COLOR.white\n        this.plyViewed = undefined // the play viewed on the board\n    }\n\n    observeChess(callback) {\n        const chessManipulationMethods = [\n            'move', 'clear', 'load', 'loadPgn', 'put', 'remove', 'reset', 'undo'\n        ]\n        chessManipulationMethods.forEach((methodName) => {\n            Observe.postFunction(this.chess, methodName, (params) => {\n                callback(params)\n            })\n        })\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {FEN} from \"cm-chess/src/Chess.js\"\nimport {COLOR} from \"cm-chessboard/src/Chessboard.js\"\nimport {I18n} from \"cm-web-modules/src/i18n/I18n.js\"\nimport {MessageBroker} from \"cm-web-modules/src/message-broker/MessageBroker.js\"\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\nimport {piecesTranslations} from \"cm-chessboard/src/extensions/accessibility/I18n.js\"\nimport {ChessConsoleState} from \"./ChessConsoleState.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\n\nexport const CONSOLE_MESSAGE_TOPICS = {\n    newGame: \"game/new\", // if a new game was startet\n    initGame: \"game/init\", // after a page reload and when a new game was started\n    gameOver: \"game/over\",\n    moveRequest: \"game/moveRequest\",\n    legalMove: \"game/move/legal\",\n    illegalMove: \"game/move/illegal\",\n    moveUndone: \"game/move/undone\", // mainly for sound\n    load: \"game/load\"\n}\n\nexport class ChessConsole extends UiComponent {\n\n    constructor(context, player, opponent, props = {},\n                state = new ChessConsoleState(props)) {\n        super(context, props, state)\n        this.props = {\n            locale: navigator.language, // locale for i18n\n            playerColor: COLOR.white, // the players color (color at bottom)\n            pgn: undefined, // initial pgn, can contain header and history\n            accessible: false // render additional information to improve the usage for people using screen readers (beta)\n        }\n        if (!this.props.figures) {\n            this.props.figures = {\n                Rw: '<i class=\"fas fa-fw fa-chess-rook fa-figure-white\"></i>',\n                Nw: '<i class=\"fas fa-fw fa-chess-knight fa-figure-white\"></i>',\n                Bw: '<i class=\"fas fa-fw fa-chess-bishop fa-figure-white\"></i>',\n                Qw: '<i class=\"fas fa-fw fa-chess-queen fa-figure-white\"></i>',\n                Kw: '<i class=\"fas fa-fw fa-chess-king fa-figure-white\"></i>',\n                Pw: '<i class=\"fas fa-fw fa-chess-pawn fa-figure-white\"></i>',\n                Rb: '<i class=\"fas fa-fw fa-chess-rook fa-figure-black\"></i>',\n                Nb: '<i class=\"fas fa-fw fa-chess-knight fa-figure-black\"></i>',\n                Bb: '<i class=\"fas fa-fw fa-chess-bishop fa-figure-black\"></i>',\n                Qb: '<i class=\"fas fa-fw fa-chess-queen fa-figure-black\"></i>',\n                Kb: '<i class=\"fas fa-fw fa-chess-king fa-figure-black\"></i>',\n                Pb: '<i class=\"fas fa-fw fa-chess-pawn fa-figure-black\"></i>'\n            }\n        }\n        const colSets = {\n            consoleGame: \"col-xl-7 order-xl-2 col-lg-8 order-lg-1 order-md-1 col-md-12\",\n            consoleRight: \"col-xl-3 order-xl-3 col-lg-4 order-lg-2 col-md-8 order-md-3\",\n            consoleLeft: \"col-xl-2 order-xl-1 order-lg-3 col-lg-12 col-md-4 order-md-2\"\n        }\n        this.initialized = new Promise((resolve => {\n            this.i18n = new I18n({locale: props.locale})\n            this.i18n.load({\n                de: {\n                    ok: \"OK\",\n                    cancel: \"Abbrechen\",\n                },\n                en: {\n                    ok: \"OK\",\n                    cancel: \"Cancel\",\n                }\n            }).then(() => {\n                this.i18n.load(piecesTranslations).then(() => {\n                    resolve(this)\n                })\n            })\n        }))\n        /**\n         * @deprecated 2023-04-11 use this.initialized instead\n         */\n        this.initialization = this.initialized\n        if (!this.props.template) {\n            this.props.template = `\n                <div class=\"row chess-console\">\n                    <div class=\"chess-console-center ${colSets.consoleGame}\">\n                        <div class=\"chess-console-board\"></div>\n                    </div>\n                    <div class=\"chess-console-right ${colSets.consoleRight}\">\n                        <div class=\"control-buttons buttons-grid mb-4\"></div>\n                        <div class=\"chess-console-notifications\"></div>\n                    </div>\n                    <div class=\"chess-console-left ${colSets.consoleLeft}\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-4 col-md-12 col-6\">\n                                <div class=\"chess-console-history\"></div>\n                            </div>\n                            <div class=\"col-xl-12 col-lg-8 col-md-12 col-6\">\n                                <div class=\"chess-console-captured\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>`\n        }\n        Object.assign(this.props, props)\n        this.messageBroker = new MessageBroker()\n        const innerHTMLElement = DomUtils.createElement(this.context.innerHTML)\n        if (!(innerHTMLElement instanceof Element) ||\n            (!innerHTMLElement.querySelector(\".chess-console\") &&\n                !innerHTMLElement.classList.contains(\"chess-console\"))) {\n            this.context.innerHTML = this.props.template\n        }\n        this.componentContainers = {\n            center: this.context.querySelector(\".chess-console-center\"),\n            left: this.context.querySelector(\".chess-console-left\"),\n            right: this.context.querySelector(\".chess-console-right\"),\n            board: this.context.querySelector(\".chess-console-board\"),\n            controlButtons: this.context.querySelector(\".control-buttons\"),\n            notifications: this.context.querySelector(\".chess-console-notifications\")\n        }\n        this.components = {\n            // put here components, which want to be accessible from other components\n        }\n        this.player = new player.type(this, player.name, player.props)\n        this.opponent = new opponent.type(this, opponent.name, opponent.props)\n\n        /** @var this.persistence Persistence */\n        this.persistence = undefined\n    }\n\n    initGame(props = {}, requestNextMove = true) {\n        Object.assign(this.props, props)\n        this.state.orientation = this.props.playerColor\n        if (props.pgn) {\n            this.state.chess.loadPgn(props.pgn, {sloppy: true})\n            this.state.plyViewed = this.state.chess.plyCount()\n        } else {\n            this.state.chess.load(FEN.start)\n            this.state.plyViewed = 0\n        }\n        if (requestNextMove) {\n            this.nextMove()\n        }\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.initGame, {props: props})\n    }\n\n    newGame(props = {}) {\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.newGame, {props: props})\n        this.initGame(props)\n        if (this.components.board.chessboard) {\n            this.components.board.chessboard.disableMoveInput()\n        }\n    }\n\n    playerWhite() {\n        return this.props.playerColor === COLOR.white ? this.player : this.opponent\n    }\n\n    playerBlack() {\n        return this.props.playerColor === COLOR.white ? this.opponent : this.player\n    }\n\n    playerToMove() {\n        if (this.state.chess.gameOver()) {\n            return null\n        } else {\n            if (this.state.chess.turn() === \"w\") {\n                return this.playerWhite()\n            } else {\n                return this.playerBlack()\n            }\n        }\n    }\n\n    /*\n     * - calls `moveRequest()` in next player\n     */\n    nextMove() {\n        const playerToMove = this.playerToMove()\n        if (playerToMove) {\n            this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.moveRequest, {playerToMove: playerToMove})\n            setTimeout(() => {\n                playerToMove.moveRequest(this.state.chess.fen(), (move) => {\n                    return this.handleMoveResponse(move)\n                })\n            })\n        }\n    }\n\n    /*\n     * - validates move\n     * - requests nextMove\n     */\n    handleMoveResponse(move) {\n        const playerMoved = this.playerToMove()\n        const moveResult = this.state.chess.move(move)\n        if (!moveResult) {\n            if (this.props.debug) {\n                console.warn(\"illegalMove\", this.state.chess, move)\n            }\n            this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.illegalMove, {\n                playerMoved: playerMoved,\n                move: move\n            })\n            return moveResult\n        }\n        if (this.state.plyViewed === this.state.chess.plyCount() - 1) {\n            this.state.plyViewed++\n        }\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.legalMove, {\n            playerMoved: playerMoved,\n            move: move,\n            moveResult: moveResult\n        })\n        if (!this.state.chess.gameOver()) {\n            this.nextMove()\n        } else {\n            let wonColor = null\n            if (this.state.chess.inCheckmate()) {\n                wonColor = (this.state.chess.turn() === COLOR.white) ? COLOR.black : COLOR.white\n            }\n            this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.gameOver, {wonColor: wonColor})\n        }\n        return moveResult\n    }\n\n    undoMove() {\n        this.components.board.chessboard.disableMoveInput()\n        this.state.chess.undo()\n        if (this.playerToMove() !== this.player) {\n            this.state.chess.undo()\n        }\n        if (this.state.plyViewed > this.state.chess.plyCount()) {\n            this.state.plyViewed = this.state.chess.plyCount()\n        }\n        this.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.moveUndone)\n        this.nextMove()\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nexport class ChessConsolePlayer {\n\n    constructor(chessConsole, name) {\n        this.chessConsole = chessConsole\n        this.name = name\n    }\n\n    /**\n     * Called, when the Console requests the next Move from a Player.\n     * The Player should answer the moveRequest with a moveResponse.\n     * The moveResponse then returns the move result, if no move result was returned, the move was not legal.\n     * @param fen current position\n     * @param moveResponse a callback function to call as the moveResponse. Parameter is an object,\n     * containing 'from' and `to`. Example: `moveResult = moveResponse({from: \"e2\", to: \"e4\", promotion: null})`.\n     */\n    moveRequest(fen, moveResponse) {\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\nimport {COLOR, INPUT_EVENT_TYPE} from \"cm-chessboard/src/Chessboard.js\"\nimport {Chess} from \"chess.mjs/src/Chess.js\"\nimport {ChessConsolePlayer} from \"../ChessConsolePlayer.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\n\nexport class LocalPlayer extends ChessConsolePlayer {\n\n    constructor(chessConsole, name, props) {\n        super(chessConsole, name)\n        this.props = {\n            allowPremoves: false\n        }\n        Object.assign(this.props, props)\n        this.premoves = []\n    }\n\n    /**\n     * The return value returns, if valid or if is promotion.\n     * The callback returns the move.\n     */\n    validateMoveAndPromote(fen, squareFrom, squareTo, callback) {\n        const tmpChess = new Chess(fen)\n        let move = {from: squareFrom, to: squareTo}\n        const moveResult = tmpChess.move(move)\n        if (moveResult) {\n            callback(moveResult)\n            return true\n        } else { // is a promotion?\n            if (tmpChess.get(squareFrom) && tmpChess.get(squareFrom).type === \"p\") {\n                const possibleMoves = tmpChess.moves({square: squareFrom, verbose: true})\n                for (let possibleMove of possibleMoves) {\n                    if (possibleMove.to === squareTo && possibleMove.promotion) {\n                        const chessboard = this.chessConsole.components.board.chessboard\n                        chessboard.showPromotionDialog(squareTo, tmpChess.turn(), (event) => {\n                            console.log(event)\n                            if (event.piece) {\n                                move.promotion = event.piece.charAt(1)\n                                console.log(move)\n                                callback(tmpChess.move(move))\n                            } else {\n                                callback(null)\n                            }\n                        })\n                        return true\n                    }\n                }\n            }\n        }\n        callback(null)\n        return false\n    }\n\n    /**\n     * Handles the events from cm-chessboard\n     *\n     * INPUT_EVENT_TYPE.moveDone\n     * - validates Move, returns false, if not valid\n     * - does promotion\n     * - calls moveResponse()\n     *\n     * INPUT_EVENT_TYPE.moveStart\n     * - allowed only the right color to move\n     */\n    chessboardMoveInputCallback(event, moveResponse) {\n        // if player can make move, make, if not store as premove\n        // const boardFen = this.chessConsole.components.board.chessboard.getPosition()\n        const gameFen = this.chessConsole.state.chess.fen()\n        if (this.chessConsole.playerToMove() === this) {\n            if (event.type === INPUT_EVENT_TYPE.validateMoveInput) {\n                return this.validateMoveAndPromote(gameFen, event.squareFrom, event.squareTo, (moveResult) => {\n                    let result\n                    if (moveResult) { // valid\n                        result = moveResponse(moveResult)\n                    } else { // not valid\n                        result = moveResponse({from: event.squareFrom, to: event.squareTo})\n                        this.premoves = []\n                        this.updatePremoveMarkers()\n                    }\n                    if (result) {\n                        if(!this.props.allowPremoves) {\n                            this.chessConsole.components.board.chessboard.disableMoveInput()\n                        }\n                    }\n                })\n            } else if (event.type === INPUT_EVENT_TYPE.moveInputStarted) {\n                if (this.chessConsole.state.plyViewed !== this.chessConsole.state.chess.plyCount()) {\n                    this.chessConsole.state.plyViewed = this.chessConsole.state.chess.plyCount()\n                    return false\n                } else {\n                    const possibleMoves = this.chessConsole.state.chess.moves({square: event.square})\n                    if(possibleMoves.length > 0) {\n                        return true\n                    } else {\n                        this.chessConsole.components.board.chessConsole.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.illegalMove, {\n                            move: {\n                                from: event.squareFrom\n                            }\n                        })\n                        return false\n                    }\n                }\n            }\n        } else {\n            // premoves\n            if (event.type === INPUT_EVENT_TYPE.validateMoveInput) {\n                this.premoves.push(event)\n                this.updatePremoveMarkers()\n            }\n            return true\n        }\n    }\n\n    moveRequest(fen, moveResponse) {\n        if(!this.contextMenuEvent) {\n            this.chessConsole.components.board.chessboard.context.addEventListener(\"contextmenu\", (event) => {\n                event.preventDefault()\n                if(this.premoves.length > 0) {\n                    this.resetBoardPosition()\n                    this.premoves = []\n                    this.updatePremoveMarkers()\n                }\n            })\n            this.contextMenuEvent = true\n        }\n        const color = this.chessConsole.state.chess.turn() === 'w' ? COLOR.white : COLOR.black\n        if (!this.chessConsole.state.chess.gameOver()) {\n            if (this.premoves.length > 0) {\n                // premove\n                const eventFromPremovesQueue = this.premoves.shift()\n                this.updatePremoveMarkers()\n                setTimeout(() => {\n                    this.chessboardMoveInputCallback(eventFromPremovesQueue, moveResponse)\n                }, 100)\n                return true\n            }\n            // normal move\n            this.chessConsole.components.board.chessboard.enableMoveInput(\n                (event) => {\n                    return this.chessboardMoveInputCallback(event, moveResponse)\n                }, color\n            )\n        }\n    }\n\n    updatePremoveMarkers() {\n        this.chessConsole.components.board.chessboard.removeMarkers(this.chessConsole.components.board.props.markers.premove)\n        for (const premove of this.premoves) {\n            this.chessConsole.components.board.chessboard.addMarker(this.chessConsole.components.board.props.markers.premove, premove.squareTo)\n        }\n    }\n\n    resetBoardPosition() {\n        this.chessConsole.components.board.chessboard.setPosition(this.chessConsole.state.chess.fen(), true)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\nimport {Svg} from \"../../lib/Svg.js\"\nimport {INPUT_EVENT_TYPE} from \"../../Chessboard.js\"\nimport {Utils} from \"../../lib/Utils.js\"\n\nexport const MARKER_TYPE = {\n    frame: {class: \"marker-frame\", slice: \"markerFrame\"},\n    framePrimary: {class: \"marker-frame-primary\", slice: \"markerFrame\"},\n    frameDanger: {class: \"marker-frame-danger\", slice: \"markerFrame\"},\n    circle: {class: \"marker-circle\", slice: \"markerCircle\"},\n    circlePrimary: {class: \"marker-circle-primary\", slice: \"markerCircle\"},\n    circleDanger: {class: \"marker-circle-danger\", slice: \"markerCircle\"},\n    square: {class: \"marker-square\", slice: \"markerSquare\"},\n    dot: {class: \"marker-dot\", slice: \"markerDot\", position: 'above'},\n    bevel: {class: \"marker-bevel\", slice: \"markerBevel\"}\n}\n\nexport class Markers extends Extension {\n\n    /** @constructor */\n    constructor(chessboard, props = {}) {\n        super(chessboard)\n        this.registerExtensionPoint(EXTENSION_POINT.afterRedrawBoard, () => {\n            this.onRedrawBoard()\n        })\n        this.props = {\n            autoMarkers: MARKER_TYPE.frame, // set to `null` to disable autoMarkers\n            sprite: \"extensions/markers/markers.svg\" // the sprite file of the markers\n        }\n        Object.assign(this.props, props)\n        if (chessboard.props.assetsCache) {\n            chessboard.view.cacheSpriteToDiv(\"cm-chessboard-markers\", this.getSpriteUrl())\n        }\n        chessboard.addMarker = this.addMarker.bind(this)\n        chessboard.getMarkers = this.getMarkers.bind(this)\n        chessboard.removeMarkers = this.removeMarkers.bind(this)\n        this.markerGroupDown = Svg.addElement(chessboard.view.markersLayer, \"g\", {class: \"markers\"})\n        this.markerGroupUp = Svg.addElement(chessboard.view.markersTopLayer, \"g\", {class: \"markers\"})\n        this.markers = []\n        if (this.props.autoMarkers) {\n            Object.assign(this.props.autoMarkers, this.props.autoMarkers)\n            this.registerExtensionPoint(EXTENSION_POINT.moveInput, (event) => {\n                this.drawAutoMarkers(event)\n            })\n        }\n    }\n\n    drawAutoMarkers(event) {\n        if(event.type !== INPUT_EVENT_TYPE.moveInputFinished) {\n            this.removeMarkers(this.props.autoMarkers)\n        }\n        if (event.type === INPUT_EVENT_TYPE.moveInputStarted &&\n            !event.moveInputCallbackResult) {\n            return\n        }\n        if (event.type === INPUT_EVENT_TYPE.moveInputStarted ||\n            event.type === INPUT_EVENT_TYPE.movingOverSquare) {\n            if (event.squareFrom) {\n                this.addMarker(this.props.autoMarkers, event.squareFrom)\n            }\n            if (event.squareTo) {\n                this.addMarker(this.props.autoMarkers, event.squareTo)\n            }\n        }\n    }\n\n    onRedrawBoard() {\n        while (this.markerGroupUp.firstChild) {\n            this.markerGroupUp.removeChild(this.markerGroupUp.firstChild)\n        }\n        while (this.markerGroupDown.firstChild) {\n            this.markerGroupDown.removeChild(this.markerGroupDown.firstChild)\n        }\n        this.markers.forEach((marker) => {\n                this.drawMarker(marker)\n            }\n        )\n    }\n\n    drawMarker(marker) {\n        let markerGroup\n        if (marker.type.position === 'above') {\n            markerGroup = Svg.addElement(this.markerGroupUp, \"g\")\n        } else {\n            markerGroup = Svg.addElement(this.markerGroupDown, \"g\")\n        }\n        markerGroup.setAttribute(\"data-square\", marker.square)\n        const point = this.chessboard.view.squareToPoint(marker.square)\n        const transform = (this.chessboard.view.svg.createSVGTransform())\n        transform.setTranslate(point.x, point.y)\n        markerGroup.transform.baseVal.appendItem(transform)\n        const spriteUrl = this.chessboard.props.assetsCache ? \"\" : this.getSpriteUrl()\n        const markerUse = Svg.addElement(markerGroup, \"use\",\n            {href: `${spriteUrl}#${marker.type.slice}`, class: \"marker \" + marker.type.class})\n        const transformScale = (this.chessboard.view.svg.createSVGTransform())\n        transformScale.setScale(this.chessboard.view.scalingX, this.chessboard.view.scalingY)\n        markerUse.transform.baseVal.appendItem(transformScale)\n        return markerGroup\n    }\n\n    addMarker(type, square) {\n        if (typeof type === \"string\" || typeof square === \"object\") { // todo remove 2022-12-01\n            console.error(\"changed the signature of `addMarker` to `(type, square)` with v5.1.x\")\n            return\n        }\n        this.markers.push(new Marker(square, type))\n        this.onRedrawBoard()\n    }\n\n    getMarkers(type = undefined, square = undefined) {\n        if (typeof type === \"string\" || typeof square === \"object\") { // todo remove 2022-12-01\n            console.error(\"changed the signature of `getMarkers` to `(type, square)` with v5.1.x\")\n            return\n        }\n        let markersFound = []\n        this.markers.forEach((marker) => {\n            if (marker.matches(square, type)) {\n                markersFound.push(marker)\n            }\n        })\n        return markersFound\n    }\n\n    removeMarkers(type = undefined, square = undefined) {\n        if (typeof type === \"string\" || typeof square === \"object\") { // todo remove 2022-12-01\n            console.error(\"changed the signature of `removeMarkers` to `(type, square)` with v5.1.x\")\n            return\n        }\n        this.markers = this.markers.filter((marker) => !marker.matches(square, type))\n        this.onRedrawBoard()\n    }\n\n    getSpriteUrl() {\n        if(Utils.isAbsoluteUrl(this.props.sprite)) {\n            return this.props.sprite\n        } else {\n            return this.chessboard.props.assetsUrl + this.props.sprite\n        }\n    }\n}\n\nclass Marker {\n    constructor(square, type) {\n        this.square = square\n        this.type = type\n    }\n\n    matches(square = undefined, type = undefined) {\n        if (!type && !square) {\n            return true\n        } else if (!type) {\n            if (square === this.square) {\n                return true\n            }\n        } else if (!square) {\n            if (this.type === type) {\n                return true\n            }\n        } else if (this.type === type && square === this.square) {\n            return true\n        }\n        return false\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nexport class CoreUtils {\n\n    static debounce(callback, wait = 0, immediate = false) {\n        let timeout\n        return function executedFunction(...args) {\n            if (immediate && !timeout) {\n                callback(...args)\n                timeout = true\n            } else {\n                const debounced = () => {\n                    clearTimeout(timeout)\n                    callback(...args)\n                }\n                clearTimeout(timeout)\n                timeout = setTimeout(debounced, wait)\n            }\n        }\n    }\n\n    static mergeObjects(target, source) {\n        const isObject = (obj) => obj && typeof obj === 'object'\n        if (!isObject(target) || !isObject(source)) {\n            return source\n        }\n        for (const key of Object.keys(source)) {\n            if (source[key] instanceof Object) {\n                Object.assign(source[key], CoreUtils.mergeObjects(target[key], source[key]))\n            }\n        }\n        Object.assign(target || {}, source)\n        return target\n    }\n\n    static createTask() {\n        let resolve, reject\n        const promise = new Promise(function (_resolve, _reject) {\n            resolve = _resolve\n            reject = _reject\n        })\n        promise.resolve = resolve\n        promise.reject = reject\n        return promise\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\nimport {COLOR, PIECE} from \"../../Chessboard.js\"\nimport {Svg} from \"../../lib/Svg.js\"\nimport {Utils} from \"../../lib/Utils.js\"\n\nconst DISPLAY_STATE = {\n    hidden: \"hidden\",\n    displayRequested: \"displayRequested\",\n    shown: \"shown\"\n}\n\nexport const PROMOTION_DIALOG_RESULT_TYPE = {\n    pieceSelected: \"pieceSelected\",\n    canceled: \"canceled\"\n}\n\nexport class PromotionDialog extends Extension {\n\n    /** @constructor */\n    constructor(chessboard) {\n        super(chessboard)\n        this.registerExtensionPoint(EXTENSION_POINT.afterRedrawBoard, this.extensionPointRedrawBoard.bind(this))\n        chessboard.showPromotionDialog = this.showPromotionDialog.bind(this)\n        chessboard.isPromotionDialogShown = this.isPromotionDialogShown.bind(this)\n        this.promotionDialogGroup = Svg.addElement(chessboard.view.interactiveTopLayer, \"g\", {class: \"promotion-dialog-group\"})\n        this.state = {\n            displayState: DISPLAY_STATE.hidden,\n            callback: null,\n            dialogParams: {\n                square: null,\n                color: null\n            }\n        }\n    }\n\n    // public (chessboard.showPromotionDialog)\n    showPromotionDialog(square, color, callback) {\n        this.state.dialogParams.square = square\n        this.state.dialogParams.color = color\n        this.state.callback = callback\n        this.setDisplayState(DISPLAY_STATE.displayRequested)\n        setTimeout(() => {\n                this.chessboard.view.positionsAnimationTask.then(() => {\n                    this.setDisplayState(DISPLAY_STATE.shown)\n                })\n            }\n        )\n    }\n\n    // public (chessboard.isPromotionDialogShown)\n    isPromotionDialogShown() {\n        return this.state.displayState === DISPLAY_STATE.shown ||\n            this.state.displayState === DISPLAY_STATE.displayRequested\n    }\n\n    // private\n    extensionPointRedrawBoard() {\n        this.redrawDialog()\n    }\n\n    drawPieceButton(piece, point) {\n        const squareWidth = this.chessboard.view.squareWidth\n        const squareHeight = this.chessboard.view.squareHeight\n        Svg.addElement(this.promotionDialogGroup,\n            \"rect\", {\n                x: point.x, y: point.y, width: squareWidth, height: squareHeight,\n                class: \"promotion-dialog-button\",\n                \"data-piece\": piece\n            })\n        this.chessboard.view.drawPiece(this.promotionDialogGroup, piece, point)\n    }\n\n    redrawDialog() {\n        while (this.promotionDialogGroup.firstChild) {\n            this.promotionDialogGroup.removeChild(this.promotionDialogGroup.firstChild)\n        }\n        if (this.state.displayState === DISPLAY_STATE.shown) {\n            const squareWidth = this.chessboard.view.squareWidth\n            const squareHeight = this.chessboard.view.squareHeight\n            const squareCenterPoint = this.chessboard.view.squareToPoint(this.state.dialogParams.square)\n            squareCenterPoint.x = squareCenterPoint.x + squareWidth / 2\n            squareCenterPoint.y = squareCenterPoint.y + squareHeight / 2\n            let turned = false\n            const rank = parseInt(this.state.dialogParams.square.charAt(1), 10)\n            if (this.chessboard.getOrientation() === COLOR.white && rank < 5 ||\n                this.chessboard.getOrientation() === COLOR.black && rank >= 5) {\n                turned = true\n            }\n            const offsetY = turned ? -4 * squareHeight : 0\n            const offsetX = squareCenterPoint.x + squareWidth > this.chessboard.view.width ? -squareWidth : 0\n            Svg.addElement(this.promotionDialogGroup,\n                \"rect\", {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + offsetY,\n                    width: squareWidth,\n                    height: squareHeight * 4,\n                    class: \"promotion-dialog\"\n                })\n            const dialogParams = this.state.dialogParams\n            if (turned) {\n                this.drawPieceButton(PIECE[dialogParams.color + \"q\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"r\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight * 2\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"b\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight * 3\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"n\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y - squareHeight * 4\n                })\n            } else {\n                this.drawPieceButton(PIECE[dialogParams.color + \"q\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"r\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + squareHeight\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"b\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + squareHeight * 2\n                })\n                this.drawPieceButton(PIECE[dialogParams.color + \"n\"], {\n                    x: squareCenterPoint.x + offsetX,\n                    y: squareCenterPoint.y + squareHeight * 3\n                })\n            }\n        }\n    }\n\n    promotionDialogOnClickPiece(event) {\n        if (event.button !== 2) {\n            if (event.target.dataset.piece) {\n                if(this.state.callback) {\n                    this.state.callback({\n                        type: PROMOTION_DIALOG_RESULT_TYPE.pieceSelected,\n                        square: this.state.dialogParams.square,\n                        piece: event.target.dataset.piece\n                    })\n                }\n                this.setDisplayState(DISPLAY_STATE.hidden)\n            } else {\n                this.promotionDialogOnCancel(event)\n            }\n        }\n    }\n\n    promotionDialogOnCancel(event) {\n        if (this.state.displayState === DISPLAY_STATE.shown) {\n            event.preventDefault()\n            this.setDisplayState(DISPLAY_STATE.hidden)\n            if(this.state.callback) {\n                this.state.callback({type: PROMOTION_DIALOG_RESULT_TYPE.canceled})\n            }\n        }\n    }\n\n    contextMenu(event) {\n        event.preventDefault()\n        this.setDisplayState(DISPLAY_STATE.hidden)\n        if(this.state.callback) {\n            this.state.callback({type: PROMOTION_DIALOG_RESULT_TYPE.canceled})\n        }\n    }\n\n    setDisplayState(displayState) {\n        this.state.displayState = displayState\n        if (displayState === DISPLAY_STATE.shown) {\n            this.clickDelegate = Utils.delegate(this.chessboard.view.svg,\n                \"mousedown\",\n                \"*\",\n                this.promotionDialogOnClickPiece.bind(this))\n            this.contextMenuListener = this.contextMenu.bind(this)\n            this.chessboard.view.svg.addEventListener(\"contextmenu\", this.contextMenuListener)\n        } else if (displayState === DISPLAY_STATE.hidden) {\n            this.clickDelegate.remove()\n            this.chessboard.view.svg.removeEventListener(\"contextmenu\", this.contextMenuListener)\n        }\n        this.redrawDialog()\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\nimport {COLOR, INPUT_EVENT_TYPE} from \"../../Chessboard.js\"\nimport {piecesTranslations, renderPieceTitle} from \"./I18n.js\"\nimport {Utils} from \"../../lib/Utils.js\"\n\nconst translations = {\n    de: {\n        chessboard: \"Schachbrett\",\n        pieces_lists: \"Figurenlisten\",\n        board_as_table: \"Schachbrett als Tabelle\",\n        move_piece: \"Figur bewegen\",\n        from: \"Zug von\",\n        to: \"Zug nach\",\n        move: \"Zug ausf\u00FChren\",\n        input_white_enabled: \"Eingabe Wei\u00DF aktiviert\",\n        input_black_enabled: \"Eingabe Schwarz aktiviert\",\n        input_disabled: \"Eingabe deaktiviert\",\n        pieces: \"Figuren\",\n    },\n    en: {\n        chessboard: \"Chessboard\",\n        pieces_lists: \"Pieces lists\",\n        board_as_table: \"Chessboard as table\",\n        move_piece: \"Move piece\",\n        from: \"Move from\",\n        to: \"Move to\",\n        move: \"Make move\",\n        input_white_enabled: \"Input white enabled\",\n        input_black_enabled: \"Input black enabled\",\n        input_disabled: \"Input disabled\",\n        pieces: \"Pieces\"\n    }\n}\n\nexport class Accessibility extends Extension {\n    constructor(chessboard, props) {\n        super(chessboard)\n        this.props = {\n            language: navigator.language.substring(0, 2).toLowerCase(), // supports \"de\" and \"en\" for now, used for pieces naming\n            brailleNotationInAlt: true, // show the braille notation of the position in the alt attribute of the SVG image\n            movePieceForm: true, // display a form to move a piece (from, to, move)\n            boardAsTable: true, // display the board additionally as HTML table\n            piecesAsList: true, // display the pieces additionally as List\n            visuallyHidden: true // hide all those extra outputs visually but keep them accessible for screen readers and braille displays\n        }\n        Object.assign(this.props, props)\n        if (this.props.language !== \"de\" && this.props.language !== \"en\") {\n            this.props.language = \"en\"\n        }\n        this.lang = this.props.language\n        this.tPieces = piecesTranslations[this.lang]\n        this.t = translations[this.lang]\n        this.components = []\n        if(this.props.movePieceForm || this.props.boardAsTable || this.props.piecesAsList) {\n            const container = document.createElement(\"div\")\n            container.classList.add(\"cm-chessboard-accessibility\")\n            this.chessboard.context.appendChild(container)\n            if(this.props.visuallyHidden) {\n                container.classList.add(\"visually-hidden\")\n            }\n            if (this.props.movePieceForm) {\n                this.components.push(new MovePieceForm(container, this))\n            }\n            if (this.props.boardAsTable) {\n                this.components.push(new BoardAsTable(container, this))\n            }\n            if (this.props.piecesAsList) {\n                this.components.push(new PiecesAsList(container, this))\n            }\n        }\n        if (this.props.brailleNotationInAlt) {\n            this.components.push(new BrailleNotationInAlt(this))\n        }\n    }\n}\n\nclass BrailleNotationInAlt {\n    constructor(extension) {\n        this.extension = extension\n        extension.registerExtensionPoint(EXTENSION_POINT.positionChanged, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        const pieces = this.extension.chessboard.state.position.getPieces()\n        let listW = piecesTranslations[this.extension.lang].colors.w.toUpperCase() + \":\"\n        let listB = piecesTranslations[this.extension.lang].colors.b.toUpperCase() + \":\"\n        for (const piece of pieces) {\n            const pieceName = piece.name === \"p\" ? \"\" : piecesTranslations[this.extension.lang].pieces[piece.name].toUpperCase()\n            if (piece.color === \"w\") {\n                listW += \" \" + pieceName + piece.position\n            } else {\n                listB += \" \" + pieceName + piece.position\n            }\n        }\n        const altText = `${listW}\n${listB}`\n        this.extension.chessboard.view.svg.setAttribute(\"alt\", altText)\n    }\n}\n\nclass MovePieceForm {\n    constructor(container, extension) {\n        this.chessboard = extension.chessboard\n        this.movePieceFormContainer = Utils.createDomElement(`\n<div>\n    <h3 id=\"hl_form_${this.chessboard.id}\">${extension.t.move_piece}</h3>\n    <form aria-labelledby=\"hl_form_${this.chessboard.id}\">\n        <label for=\"move_piece_input_from_${this.chessboard.id}\">${extension.t.from}</label>\n        <input class=\"input-from\" type=\"text\" size=\"2\" id=\"move_piece_input_from_${this.chessboard.id}\"/>\n        <label for=\"move_piece_input_to_${this.chessboard.id}\">${extension.t.to}</label>\n        <input class=\"input-to\" type=\"text\" size=\"2\" id=\"move_piece_input_to_${this.chessboard.id}\"/>\n        <button type=\"submit\" class=\"button-move\">${extension.t.move}</button>\n    </form>\n</div>`)\n        this.form = this.movePieceFormContainer.querySelector(\"form\")\n        this.inputFrom = this.form.querySelector(\".input-from\")\n        this.inputTo = this.form.querySelector(\".input-to\")\n        this.moveButton = this.form.querySelector(\".button-move\")\n        this.form.addEventListener(\"submit\", (evt) => {\n            evt.preventDefault()\n            if (this.chessboard.state.moveInputCallback({\n                chessboard: this.chessboard,\n                type: INPUT_EVENT_TYPE.validateMoveInput,\n                squareFrom: this.inputFrom.value,\n                squareTo: this.inputTo.value\n            })) {\n                this.chessboard.movePiece(this.inputFrom.value, this.inputTo.value,\n                    true).then(() => {\n                    this.inputFrom.value = \"\"\n                    this.inputTo.value = \"\"\n                })\n            }\n        })\n        container.appendChild(this.movePieceFormContainer)\n        extension.registerExtensionPoint(EXTENSION_POINT.moveInputToggled, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        if (this.inputFrom) {\n            if (this.chessboard.state.inputWhiteEnabled || this.chessboard.state.inputBlackEnabled) {\n                this.inputFrom.disabled = false\n                this.inputTo.disabled = false\n                this.moveButton.disabled = false\n            } else {\n                this.inputFrom.disabled = true\n                this.inputTo.disabled = true\n                this.moveButton.disabled = true\n            }\n        }\n    }\n}\n\nclass BoardAsTable {\n    constructor(container, extension) {\n        this.extension = extension\n        this.chessboard = extension.chessboard\n        this.boardAsTableContainer = Utils.createDomElement(`<div><h3 id=\"hl_table_${this.chessboard.id}\">${extension.t.board_as_table}</h3><div class=\"table\"></div></div>`)\n        this.boardAsTable = this.boardAsTableContainer.querySelector(\".table\")\n        container.appendChild(this.boardAsTableContainer)\n        extension.registerExtensionPoint(EXTENSION_POINT.positionChanged, () => {\n            this.redraw()\n        })\n        extension.registerExtensionPoint(EXTENSION_POINT.boardChanged, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        const squares = this.chessboard.state.position.squares.slice()\n        const ranks = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\n        const files = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"]\n        if (this.chessboard.state.orientation === COLOR.black) {\n            ranks.reverse()\n            files.reverse()\n            squares.reverse()\n        }\n        let html = `<table aria-labelledby=\"hl_table_${this.chessboard.id}\"><tr><th></th>`\n        for (const rank of ranks) {\n            html += `<th scope='col'>${rank}</th>`\n        }\n        html += \"</tr>\"\n        for (let x = 7; x >= 0; x--) {\n            html += `<tr><th scope=\"row\">${files[7 - x]}</th>`\n            for (let y = 0; y < 8; y++) {\n                const pieceCode = squares[y % 8 + x * 8]\n                let color, name\n                if (pieceCode) {\n                    color = pieceCode.charAt(0)\n                    name = pieceCode.charAt(1)\n                    html += `<td>${renderPieceTitle(this.extension.lang, name, color)}</td>`\n                } else {\n                    html += `<td></td>`\n                }\n            }\n            html += \"</tr>\"\n        }\n        html += \"</table>\"\n        this.boardAsTable.innerHTML = html\n    }\n}\n\nclass PiecesAsList {\n    constructor(container, extension) {\n        this.extension = extension\n        this.chessboard = extension.chessboard\n        this.piecesListContainer = Utils.createDomElement(`<div><h3 id=\"hl_lists_${this.chessboard.id}\">${extension.t.pieces_lists}</h3><div class=\"list\"></div></div>`)\n        this.piecesList = this.piecesListContainer.querySelector(\".list\")\n        container.appendChild(this.piecesListContainer)\n        extension.registerExtensionPoint(EXTENSION_POINT.positionChanged, () => {\n            this.redraw()\n        })\n    }\n\n    redraw() {\n        const pieces = this.chessboard.state.position.getPieces()\n        let listW = \"\"\n        let listB = \"\"\n        for (const piece of pieces) {\n            if (piece.color === \"w\") {\n                listW += `<li class=\"list-inline-item\">${renderPieceTitle(this.extension.lang, piece.name)} ${piece.position}</li>`\n            } else {\n                listB += `<li class=\"list-inline-item\">${renderPieceTitle(this.extension.lang, piece.name)} ${piece.position}</li>`\n            }\n        }\n        this.piecesList.innerHTML = `\n        <h4 id=\"white_${this.chessboard.id}\">${this.extension.t.pieces} ${this.extension.tPieces.colors_long.w}</h4>\n        <ul aria-labelledby=\"white_${this.chessboard.id}\" class=\"list-inline\">${listW}</ul>\n        <h4 id=\"black_${this.chessboard.id}\">${this.extension.t.pieces} ${this.extension.tPieces.colors_long.b}</h4>\n        <ul aria-labelledby=\"black_${this.chessboard.id}\" class=\"list-inline\">${listB}</ul>`\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chessboard\n * License: MIT, see file 'LICENSE'\n */\nimport {Extension, EXTENSION_POINT} from \"../../model/Extension.js\"\n\nexport class AutoBorderNone extends Extension {\n    constructor(chessboard, props = {}) {\n        super(chessboard)\n        this.props = {\n            chessboardBorderType: chessboard.props.style.borderType,\n            borderNoneBelow: 540 // pixels width of the board, where the border is set to none\n        }\n        Object.assign(this.props, props)\n        this.registerExtensionPoint(EXTENSION_POINT.beforeRedrawBoard, this.extensionPointBeforeRedrawBoard.bind(this))\n    }\n    extensionPointBeforeRedrawBoard() {\n        let newBorderType\n        if(this.chessboard.view.width < this.props.borderNoneBelow){\n            newBorderType = \"none\"\n        } else {\n            newBorderType = this.props.chessboardBorderType\n        }\n        if(newBorderType !== this.chessboard.props.style.borderType) {\n            this.chessboard.props.style.borderType = newBorderType\n            this.chessboard.view.updateMetrics()\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Chessboard, COLOR, INPUT_EVENT_TYPE} from \"cm-chessboard/src/Chessboard.js\"\nimport {FEN} from \"cm-chessboard/src/model/Position.js\"\nimport {Markers} from \"cm-chessboard/src/extensions/markers/Markers.js\"\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\nimport {CoreUtils} from \"cm-web-modules/src/utils/CoreUtils.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\nimport {PromotionDialog} from \"cm-chessboard/src/extensions/promotion-dialog/PromotionDialog.js\"\nimport {Accessibility} from \"cm-chessboard/src/extensions/accessibility/Accessibility.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\nimport {AutoBorderNone} from \"cm-chessboard/src/extensions/auto-border-none/AutoBorderNone.js\"\n\nexport const CONSOLE_MARKER_TYPE = {\n    moveInput: {class: \"marker-frame\", slice: \"markerFrame\"},\n    check: {class: \"marker-circle-danger\", slice: \"markerCircle\"},\n    wrongMove: {class: \"marker-frame-danger\", slice: \"markerFrame\"},\n    premove: {class: \"marker-frame-primary\", slice: \"markerFrame\"},\n    legalMove: {class: \"marker-dot\", slice: \"markerDot\"},\n    legalMoveCapture: {class: \"marker-bevel\", slice: \"markerBevel\"}\n}\n\nexport class Board extends UiComponent {\n\n    constructor(chessConsole, props = {}) {\n        super(chessConsole.componentContainers.board, props)\n        chessConsole.components.board = this // register board component, to allow access to the promotion dialog\n        this.initialized = new Promise((resolve) => {\n            this.i18n = chessConsole.i18n\n            this.i18n.load({\n                de: {\n                    chessBoard: \"Schachbrett\"\n                },\n                en: {\n                    chessBoard: \"Chess Board\"\n                }\n            }).then(() => {\n                this.chessConsole = chessConsole\n                this.elements = {\n                    playerTop: document.createElement(\"div\"),\n                    playerBottom: document.createElement(\"div\"),\n                    chessboard: document.createElement(\"div\")\n                }\n                this.elements.playerTop.setAttribute(\"class\", \"player top\")\n                this.elements.playerTop.innerHTML = \"&nbsp;\"\n                this.elements.playerBottom.setAttribute(\"class\", \"player bottom\")\n                this.elements.playerBottom.innerHTML = \"&nbsp;\"\n                this.elements.chessboard.setAttribute(\"class\", \"chessboard\")\n                this.context.appendChild(DomUtils.createElement(\"<h2 class='visually-hidden'>\" + this.i18n.t(\"chessBoard\") + \"</h2>\"))\n                this.context.appendChild(this.elements.playerTop)\n                this.context.appendChild(this.elements.chessboard)\n                this.context.appendChild(this.elements.playerBottom)\n                this.chessConsole.state.observeChess((params) => {\n                    let animated = true\n                    if (params.functionName === \"load_pgn\") {\n                        animated = false\n                    }\n                    this.setPositionOfPlyViewed(animated)\n                    this.markLastMove()\n                })\n                Observe.property(this.chessConsole.state, \"plyViewed\", (props) => {\n                    this.setPositionOfPlyViewed(props.oldValue !== undefined)\n                    this.markLastMove()\n                })\n                this.props = {\n                    position: FEN.empty,\n                    orientation: chessConsole.state.orientation,\n                    assetsUrl: undefined,\n                    markLegalMoves: true,\n                    style: {\n                        aspectRatio: 0.98\n                    },\n                    accessibility: {\n                        active: true, // turn accessibility on or off\n                        brailleNotationInAlt: true, // show the braille notation of the position in the alt attribute of the SVG image\n                        movePieceForm: true, // display a form to move a piece (from, to, move)\n                        boardAsTable: true, // display the board additionally as HTML table\n                        piecesAsList: true, // display the pieces additionally as List\n                        visuallyHidden: true // hide all those extra outputs visually but keep them accessible for screen readers and braille displays\n                    },\n                    markers: {\n                        moveInput: CONSOLE_MARKER_TYPE.moveInput,\n                        check: CONSOLE_MARKER_TYPE.check,\n                        wrongMove: CONSOLE_MARKER_TYPE.wrongMove,\n                        premove: CONSOLE_MARKER_TYPE.premove,\n                        legalMove: CONSOLE_MARKER_TYPE.legalMove,\n                        legalMoveCapture: CONSOLE_MARKER_TYPE.legalMoveCapture\n                    },\n                    extensions: [{class: PromotionDialog}, {\n                        class: ChessConsoleMarkers, props: {\n                            board: this\n                        }\n                    }, {class: AutoBorderNone}]\n                }\n                CoreUtils.mergeObjects(this.props, props)\n                if (this.props.accessibility.active) {\n                    this.props.extensions.push({\n                        class: Accessibility, props: this.props.accessibility\n                    })\n                }\n                this.chessboard = new Chessboard(this.elements.chessboard, this.props)\n                Observe.property(chessConsole.state, \"orientation\", () => {\n                    this.setPlayerNames()\n                    this.chessboard.setOrientation(chessConsole.state.orientation).then(() => {\n                        this.markPlayerToMove()\n                    })\n                })\n                Observe.property(chessConsole.player, \"name\", () => {\n                    this.setPlayerNames()\n                })\n                Observe.property(chessConsole.opponent, \"name\", () => {\n                    this.setPlayerNames()\n                })\n                chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.moveRequest, () => {\n                    this.markPlayerToMove()\n                })\n                this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.illegalMove, (message) => {\n                    this.chessboard.removeMarkers(this.props.markers.wrongMove)\n                    clearTimeout(this.removeMarkersTimeout)\n                    if (message.move.from) {\n                        this.chessboard.addMarker(this.props.markers.wrongMove, message.move.from)\n                    } else {\n                        console.warn(\"illegalMove without `message.move.from`\")\n                    }\n                    if (message.move.to) {\n                        this.chessboard.addMarker(this.props.markers.wrongMove, message.move.to)\n                    }\n                    this.removeMarkersTimeout = setTimeout(() => {\n                        this.chessboard.removeMarkers(this.props.markers.wrongMove)\n                    }, 500)\n                })\n                this.setPositionOfPlyViewed(false)\n                this.setPlayerNames()\n                this.markPlayerToMove()\n                this.markLastMove()\n\n                resolve(this)\n            })\n        })\n        /**\n         * @deprecated 2023-04-11 use `this.initialized` instead\n         */\n        this.initialization = this.initialized\n    }\n\n    setPositionOfPlyViewed(animated = true) {\n        clearTimeout(this.setPositionOfPlyViewedDebounced)\n        this.setPositionOfPlyViewedDebounced = setTimeout(() => {\n            const to = this.chessConsole.state.chess.fenOfPly(this.chessConsole.state.plyViewed)\n            this.chessboard.setPosition(to, animated)\n        })\n    }\n\n    markLastMove() {\n        window.clearTimeout(this.markLastMoveDebounce)\n        this.markLastMoveDebounce = setTimeout(() => {\n            this.chessboard.removeMarkers(this.props.markers.moveInput)\n            this.chessboard.removeMarkers(this.props.markers.check)\n            if (this.chessConsole.state.plyViewed === this.chessConsole.state.chess.plyCount()) {\n                const lastMove = this.chessConsole.state.chess.lastMove()\n                if (lastMove) {\n                    this.chessboard.addMarker(this.props.markers.moveInput, lastMove.from)\n                    this.chessboard.addMarker(this.props.markers.moveInput, lastMove.to)\n                }\n                if (this.chessConsole.state.chess.inCheck() || this.chessConsole.state.chess.inCheckmate()) {\n                    const kingSquare = this.chessConsole.state.chess.pieces(\"k\", this.chessConsole.state.chess.turn())[0]\n                    this.chessboard.addMarker(this.props.markers.check, kingSquare.square)\n                }\n            }\n        })\n    }\n\n    setPlayerNames() {\n        window.clearTimeout(this.setPlayerNamesDebounce)\n        this.setPlayerNamesDebounce = setTimeout(() => {\n            if (this.chessConsole.props.playerColor === this.chessConsole.state.orientation) {\n                this.elements.playerBottom.innerHTML = this.chessConsole.player.name\n                this.elements.playerTop.innerHTML = this.chessConsole.opponent.name\n            } else {\n                this.elements.playerBottom.innerHTML = this.chessConsole.opponent.name\n                this.elements.playerTop.innerHTML = this.chessConsole.player.name\n            }\n        })\n    }\n\n    markPlayerToMove() {\n        clearTimeout(this.markPlayerToMoveDebounce)\n        this.markPlayerToMoveDebounce = setTimeout(() => {\n            this.elements.playerTop.classList.remove(\"to-move\")\n            this.elements.playerBottom.classList.remove(\"to-move\")\n            this.elements.playerTop.classList.remove(\"not-to-move\")\n            this.elements.playerBottom.classList.remove(\"not-to-move\")\n            const playerMove = this.chessConsole.playerToMove()\n            if (\n                this.chessConsole.state.orientation === COLOR.white &&\n                playerMove === this.chessConsole.playerWhite() ||\n                this.chessConsole.state.orientation === COLOR.black &&\n                playerMove === this.chessConsole.playerBlack()) {\n                this.elements.playerBottom.classList.add(\"to-move\")\n                this.elements.playerTop.classList.add(\"not-to-move\")\n            } else {\n                this.elements.playerTop.classList.add(\"to-move\")\n                this.elements.playerBottom.classList.add(\"not-to-move\")\n            }\n        }, 10)\n    }\n\n}\n\nclass ChessConsoleMarkers extends Markers {\n    drawAutoMarkers(event) {\n        clearTimeout(this.drawAutoMarkersDebounced)\n        this.drawAutoMarkersDebounced = setTimeout(() => {\n                this.removeMarkers(this.props.autoMarkers)\n                const board = this.props.board\n                const moves = this.props.board.chessConsole.state.chess.moves({square: event.square, verbose: true})\n                if (board.props.markLegalMoves) {\n                    if (event.type === INPUT_EVENT_TYPE.moveInputStarted ||\n                        event.type === INPUT_EVENT_TYPE.validateMoveInput ||\n                        event.type === INPUT_EVENT_TYPE.moveInputCanceled ||\n                        event.type === INPUT_EVENT_TYPE.moveInputFinished) {\n                        event.chessboard.removeMarkers(board.props.markers.legalMove)\n                        event.chessboard.removeMarkers(board.props.markers.legalMoveCapture)\n                    }\n                    if (event.type === INPUT_EVENT_TYPE.moveInputStarted) {\n                        for (const move of moves) { // draw dots on possible squares\n                            if (move.promotion && move.promotion !== \"q\") {\n                                continue\n                            }\n                            if (event.chessboard.getPiece(move.to)) {\n                                event.chessboard.addMarker(board.props.markers.legalMoveCapture, move.to)\n                            } else {\n                                event.chessboard.addMarker(board.props.markers.legalMove, move.to)\n                            }\n                        }\n                    }\n                }\n                if (event.type === INPUT_EVENT_TYPE.moveInputStarted) {\n                    if (event.moveInputCallbackResult) {\n                        this.addMarker(this.props.autoMarkers, event.squareFrom)\n                    }\n                } else if (event.type === INPUT_EVENT_TYPE.movingOverSquare) {\n                    this.addMarker(this.props.autoMarkers, event.squareFrom)\n                    if (event.squareTo) {\n                        this.addMarker(this.props.autoMarkers, event.squareTo)\n                    }\n                }\n            }\n        )\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\n\nexport class GameStateOutput extends UiComponent {\n\n    constructor(chessConsole) {\n        super(chessConsole.componentContainers.notifications)\n\n        this.chessConsole = chessConsole\n        this.i18n = chessConsole.i18n\n        this.i18n.load(\n            {\n                de: {\n                    game_over: \"Das Spiel ist beendet\",\n                    check: \"Schach!\",\n                    checkmate: \"Schachmatt\",\n                    draw: \"Remis\",\n                    stalemate: \"Patt\",\n                    threefold_repetition: \"Remis durch dreifache Wiederholung\"\n                },\n                en: {\n                    game_over: \"The game is over\",\n                    check: \"Check!\",\n                    checkmate: \"Checkmate\",\n                    draw: \"Remis\",\n                    stalemate: \"Stalemate\",\n                    threefold_repetition: \"Remis by threefold repetition\"\n                }\n            }\n        )\n        this.element = document.createElement(\"div\")\n        this.element.setAttribute(\"class\", \"gameState alert alert-primary mb-2\")\n        this.context.appendChild(this.element)\n\n        this.chessConsole.state.observeChess(() => {\n            this.redraw()\n        })\n        this.redraw()\n    }\n\n    redraw() {\n        const chess = this.chessConsole.state.chess\n        let html = ''\n        if (chess.gameOver()) {\n            html += `<b>${this.i18n.t(\"game_over\")}</b><br/>`\n            if (chess.inCheckmate()) {\n                html += `${this.i18n.t(\"checkmate\")}`\n            } else if (chess.inStalemate()) {\n                html += `${this.i18n.t(\"stalemate\")}`\n            } else if (chess.inThreefoldRepetition()) {\n                html += `${this.i18n.t(\"threefold_repetition\")}`\n            } else if (chess.inDraw()) {\n                html += `${this.i18n.t(\"draw\")}`\n            }\n        } else if (chess.inCheck()) {\n            html = `${this.i18n.t(\"check\")}`\n        } else {\n            html = \"\"\n        }\n        if (html) {\n            this.chessConsole.componentContainers.notifications.style.display = \"block\"\n            this.element.innerHTML = `${html}`\n        } else {\n            this.chessConsole.componentContainers.notifications.style.display = \"none\"\n        }\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chess\n * License: MIT, see file 'LICENSE'\n *\n * @deprecated\n */\n\nimport {COLOR} from \"cm-chess/src/Chess.js\"\n\nexport const PIECES = {\n    notation: {\n        de: {\n            R: \"T\", N: \"S\", B: \"L\", Q: \"D\", K: \"K\", P: \"\"\n        }\n    },\n    figures: {\n        utf8: {\n            Rw: \"\u2656\", Nw: \"\u2658\", Bw: \"\u2657\", Qw: \"\u2655\", Kw: \"\u2654\", Pw: \"\u2659\",\n            Rb: \"\u265C\", Nb: \"\u265E\", Bb: \"\u265D\", Qb: \"\u265B\", Kb: \"\u265A\", Pb: \"\u265F\"\n        },\n        fontAwesomePro: {\n            Rw: '<i class=\"far fa-fw fa-chess-rook\"></i>',\n            Nw: '<i class=\"far fa-fw fa-chess-knight\"></i>',\n            Bw: '<i class=\"far fa-fw fa-chess-bishop\"></i>',\n            Qw: '<i class=\"far fa-fw fa-chess-queen\"></i>',\n            Kw: '<i class=\"far fa-fw fa-chess-king\"></i>',\n            Pw: '<i class=\"far fa-fw fa-chess-pawn\"></i>',\n            Rb: '<i class=\"fas fa-fw fa-chess-rook\"></i>',\n            Nb: '<i class=\"fas fa-fw fa-chess-knight\"></i>',\n            Bb: '<i class=\"fas fa-fw fa-chess-bishop\"></i>',\n            Qb: '<i class=\"fas fa-fw fa-chess-queen\"></i>',\n            Kb: '<i class=\"fas fa-fw fa-chess-king\"></i>',\n            Pb: '<i class=\"fas fa-fw fa-chess-pawn\"></i>'\n        }\n    }\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport class ChessRender {\n    static san(san, color = COLOR.white, lang = \"en\", mode = \"text\", pieces = PIECES.figures.utf8) {\n        // console.warn(\"ChessRender is deprecated and will be removed in future\")\n        if(mode === \"figures\") {\n            if (color === COLOR.white) {\n                return this.replaceAll(san, {\n                    \"R\": pieces.Rw,\n                    \"N\": pieces.Nw,\n                    \"B\": pieces.Bw,\n                    \"Q\": pieces.Qw,\n                    \"K\": pieces.Kw\n                })\n            } else {\n                return this.replaceAll(san, {\n                    \"R\": pieces.Rb,\n                    \"N\": pieces.Nb,\n                    \"B\": pieces.Bb,\n                    \"Q\": pieces.Qb,\n                    \"K\": pieces.Kb\n                })\n            }\n        } else if(mode === \"text\") {\n            return this.replaceAll(san, PIECES.notation[lang])\n        } else {\n            console.error(\"mode must be 'text' or 'figures'\")\n        }\n    }\n    static replaceAll(str, replacementsObj, ignoreCase = false) {\n        let retStr = str\n        const flags = ignoreCase ? \"gi\" : \"g\"\n        for (let needle in replacementsObj) {\n            // noinspection JSUnfilteredForInLoop\n            retStr = retStr.replace(new RegExp(needle, flags), replacementsObj[needle])\n        }\n        return retStr\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\nimport {COLOR} from \"cm-chess/src/Chess.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\nimport {ChessRender} from \"../tools/ChessRender.js\"\n\nexport class History extends UiComponent {\n\n    constructor(chessConsole, props) {\n        super(chessConsole.componentContainers.left.querySelector(\".chess-console-history\"), props)\n        this.chessConsole = chessConsole\n        this.element = document.createElement(\"div\")\n        this.element.setAttribute(\"class\", \"history\")\n        this.context.appendChild(this.element)\n        this.props = {\n            notationType: \"figures\",\n            makeClickable: true\n        }\n        Object.assign(this.props, props)\n        this.chessConsole.state.observeChess(() => {\n            this.redraw()\n        })\n        Observe.property(chessConsole.state, \"plyViewed\", () => {\n            this.redraw()\n        })\n        if(this.props.makeClickable) {\n            this.addClickEvents()\n        }\n        this.i18n = chessConsole.i18n\n        this.i18n.load({\n            \"de\": {\n                \"game_history\": \"Spielnotation\"\n            },\n            \"en\": {\n                \"game_history\": \"Game notation\"\n            }\n        }).then(() => {\n            this.redraw()\n        })\n    }\n\n    addClickEvents() {\n        this.clickHandler = DomUtils.delegate(this.element, \"click\", \".ply\", (event) => {\n            const ply = parseInt(event.target.getAttribute(\"data-ply\"), 10)\n            if(ply <= this.chessConsole.state.chess.history().length) {\n                this.chessConsole.state.plyViewed = ply\n            }\n        })\n        this.element.classList.add(\"clickable\")\n    }\n\n    removeClickEvents() {\n        this.clickHandler.remove()\n        this.element.classList.remove(\"clickable\")\n    }\n\n    redraw() {\n        window.clearTimeout(this.redrawDebounce)\n        this.redrawDebounce = setTimeout(() => {\n            const history = this.chessConsole.state.chess.history()\n            let sanWhite\n            let sanBlack\n            let output = \"\"\n            let i\n            let rowClass = \"\"\n            let whiteClass = \"\"\n            let blackClass = \"\"\n            for (i = 0; i < history.length; i += 2) {\n                const moveWhite = history[i]\n                if (moveWhite) {\n                    sanWhite = ChessRender.san(moveWhite.san, COLOR.white, this.chessConsole.i18n.lang, this.props.notationType, this.chessConsole.props.figures)\n                }\n                const moveBlack = history[i + 1]\n                if (moveBlack) {\n                    sanBlack = ChessRender.san(moveBlack.san, COLOR.black, this.chessConsole.i18n.lang, this.props.notationType, this.chessConsole.props.figures)\n                } else {\n                    sanBlack = \"\"\n                }\n                if (this.chessConsole.state.plyViewed < i + 1) {\n                    whiteClass = \"text-muted\"\n                }\n                if(this.chessConsole.state.plyViewed === i + 1) {\n                    whiteClass = \"active\"\n                }\n                if (this.chessConsole.state.plyViewed < i + 2) {\n                    blackClass = \"text-muted\"\n                }\n                if(this.chessConsole.state.plyViewed === i + 2) {\n                    blackClass = \"active\"\n                }\n                output += \"<tr><td class='num \" + rowClass + \"'>\" + (i / 2 + 1) + \".</td><td data-ply='\" + (i + 1) + \"' class='ply \" + whiteClass + \" ply\" + (i + 1) + \"'>\" + sanWhite + \"</td><td data-ply='\" + (i + 2) + \"' class='ply \" + blackClass + \" ply\" + (i + 2) + \"'>\" + sanBlack + \"</td></tr>\"\n            }\n            this.element.innerHTML = \"<h2 class='visually-hidden'>\" + this.i18n.t(\"game_history\") + \"</h2>\" +\n                \"<table>\" + output + \"</table>\"\n            if (this.chessConsole.state.plyViewed > 0) {\n                const $ply = $(this.element).find('.ply' + this.chessConsole.state.plyViewed)\n                if ($ply.position()) {\n                    this.element.scrollTop = 0\n                    this.element.scrollTop = ($ply.position().top - 68)\n                }\n            }\n        })\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\nimport {PIECES} from \"cm-chess/src/Chess.js\"\nimport {DomUtils} from \"cm-web-modules/src/utils/DomUtils.js\"\n\nconst zeroWithSpace = \"&#8203;\"\n\nexport class CapturedPieces extends UiComponent {\n\n    constructor(chessConsole) {\n        super(chessConsole)\n        this.chessConsole = chessConsole\n        this.element = document.createElement(\"div\")\n        this.element.setAttribute(\"class\", \"captured-pieces\")\n        this.chessConsole.componentContainers.left.querySelector(\".chess-console-captured\").appendChild(this.element)\n        this.chessConsole.state.observeChess(() => {\n            this.redraw()\n        })\n        Observe.property(this.chessConsole.state, \"plyViewed\", () => {\n            this.redraw()\n        })\n        Observe.property(this.chessConsole.state, \"orientation\", () => {\n            this.redraw()\n        })\n        this.i18n = chessConsole.i18n\n        this.i18n.load({\n            \"de\": {\n                \"captured_pieces\": \"Geschlagene Figuren\"\n            },\n            \"en\": {\n                \"captured_pieces\": \"Captured pieces\"\n            }\n        }).then(() => {\n            this.redraw()\n        })\n        DomUtils.delegate(this.element, \"click\", \".piece\", (event) => {\n            const ply = event.target.getAttribute(\"data-ply\")\n            this.chessConsole.state.plyViewed = parseInt(ply, 10)\n        })\n    }\n\n    redraw() {\n        window.clearTimeout(this.redrawDebounce)\n        this.redrawDebounce = setTimeout(() => {\n            const capturedPiecesWhite = []\n            const capturedPiecesWhiteAfterPlyViewed = []\n            const capturedPiecesBlack = []\n            const capturedPiecesBlackAfterPlyViewed = []\n\n            const history = this.chessConsole.state.chess.history({verbose: true})\n            let pointsWhite = 0\n            let pointsBlack = 0\n            history.forEach((move, index) => {\n                if (move.flags.indexOf(\"c\") !== -1 || move.flags.indexOf(\"e\") !== -1) {\n                    const pieceCaptured = move.captured.toUpperCase()\n                    if (move.color === \"b\") {\n                        const pieceHtml = `<span class=\"piece\" role='button' data-ply='${move.ply}'>` + this.chessConsole.props.figures[pieceCaptured + \"w\"] + \"</span>\"\n                        if (index < this.chessConsole.state.plyViewed) {\n                            capturedPiecesWhite.push(pieceHtml)\n                        } else {\n                            capturedPiecesWhiteAfterPlyViewed.push(pieceHtml)\n                        }\n                        pointsWhite += PIECES[pieceCaptured.toLowerCase()].value\n                    } else if (move.color === \"w\") {\n                        const pieceHtml = `<span class=\"piece\" role='button' data-ply='${move.ply}'>`  + this.chessConsole.props.figures[pieceCaptured + \"b\"] + \"</span>\"\n                        if (index < this.chessConsole.state.plyViewed) {\n                            capturedPiecesBlack.push(pieceHtml)\n                        } else {\n                            capturedPiecesBlackAfterPlyViewed.push(pieceHtml)\n                        }\n                        pointsBlack += PIECES[pieceCaptured.toLowerCase()].value\n                    }\n                }\n            })\n            const outputWhite = this.renderPieces(capturedPiecesWhite, capturedPiecesWhiteAfterPlyViewed, pointsWhite)\n            const outputBlack = this.renderPieces(capturedPiecesBlack, capturedPiecesBlackAfterPlyViewed, pointsBlack)\n            this.element.innerHTML = \"<h2 class='visually-hidden'>\" + this.i18n.t(\"captured_pieces\") + \"</h2>\" +\n                (this.chessConsole.state.orientation === \"w\" ? outputWhite + outputBlack : outputBlack + outputWhite)\n        })\n    }\n\n    renderPieces(capturedPieces, capturedPiecesAfterPlyViewed, points) {\n        let output = \"<div>\"\n        if (capturedPieces.length > 0) {\n            output += capturedPieces.join(zeroWithSpace)\n        }\n        if (capturedPiecesAfterPlyViewed.length > 0) {\n            output += \"<span class='text-muted'>\" + capturedPiecesAfterPlyViewed.join(zeroWithSpace) + \"</span>\"\n        }\n        output += \"<small> \" + (points > 0 ? points : \"\") + \"</small></div>\"\n        return output\n    }\n\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\nimport {COLOR} from \"cm-chessboard/src/Chessboard.js\"\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\n\nexport class HistoryControl extends UiComponent {\n    constructor(chessConsole, props = {}) {\n        super(chessConsole.componentContainers.controlButtons)\n\n        this.chessConsole = chessConsole\n        const i18n = chessConsole.i18n\n        this.props = {\n            autoPlayDelay: 1500\n        }\n        Object.assign(this.props, props)\n        i18n.load({\n            de: {\n                \"to_game_start\": \"Zum Spielstart\",\n                \"one_move_back\": \"Ein Zug zur\u00FCck\",\n                \"one_move_forward\": \"Ein Zug weiter\",\n                \"to_last_move\": \"Zum letzen Zug\",\n                \"auto_run\": \"Automatisch abspielen\",\n                \"turn_board\": \"Brett drehen\"\n            },\n            en: {\n                \"to_game_start\": \"To game start\",\n                \"one_move_back\": \"One move back\",\n                \"one_move_forward\": \"One move forward\",\n                \"to_last_move\": \"To last move\",\n                \"auto_run\": \"Auto play\",\n                \"turn_board\": \"Turn board\"\n            }\n        }).then(() => {\n\n            this.$btnFirst = $(`<button type=\"button\" title=\"${i18n.t('to_game_start')}\" class=\"btn btn-link text-black first\"><i class=\"fa fa-fw fa-fast-backward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnBack = $(`<button type=\"button\" title=\"${i18n.t('one_move_back')}\" class=\"btn btn-link text-black back\"><i class=\"fa fa-fw fa-step-backward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnForward = $(`<button type=\"button\" title=\"${i18n.t('one_move_forward')}\" class=\"btn btn-link text-black forward\"><i class=\"fa fa-fw fa-step-forward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnLast = $(`<button type=\"button\" title=\"${i18n.t('to_last_move')}\" class=\"btn btn-link text-black last\"><i class=\"fa fa-fw fa-fast-forward\" aria-hidden=\"true\"></i></button>`)\n            this.$btnAutoplay = $(`<button type=\"button\" title=\"${i18n.t('auto_run')}\" class=\"btn btn-link text-black autoplay\"><i class=\"fa fa-fw fa-play\" aria-hidden=\"true\"></i><i class=\"fa fa-fw fa-stop\" aria-hidden=\"true\"></i></button>`)\n            this.$btnOrientation = $(`<button type=\"button\" title=\"${i18n.t('turn_board')}\" class=\"btn btn-link text-black orientation\"><i class=\"fa fa-fw fa-exchange-alt fa-rotate-90\" aria-hidden=\"true\"></i></button>`)\n\n            this.context.appendChild(this.$btnFirst[0])\n            this.context.appendChild(this.$btnBack[0])\n            this.context.appendChild(this.$btnForward[0])\n            this.context.appendChild(this.$btnLast[0])\n            this.context.appendChild(this.$btnAutoplay[0])\n            this.context.appendChild(this.$btnOrientation[0])\n\n            this.chessConsole.state.observeChess(() => {\n                this.setButtonStates()\n            })\n            Observe.property(this.chessConsole.state, \"plyViewed\", () => {\n                this.setButtonStates()\n            })\n            Observe.property(this.chessConsole.state, \"orientation\", () => {\n                if (this.chessConsole.state.orientation !== this.chessConsole.props.playerColor) {\n                    this.$btnOrientation.addClass(\"btn-active\") // todo\n                } else {\n                    this.$btnOrientation.removeClass(\"btn-active\") // todo\n                }\n            })\n            this.$btnFirst.click(() => {\n                this.chessConsole.state.plyViewed = 0\n                this.resetAutoPlay()\n            })\n            this.$btnBack.click(() => {\n                this.chessConsole.state.plyViewed--\n                this.resetAutoPlay()\n            })\n            this.$btnForward.click(() => {\n                this.chessConsole.state.plyViewed++\n                this.resetAutoPlay()\n            })\n            this.$btnLast.click(() => {\n                this.chessConsole.state.plyViewed = this.chessConsole.state.chess.plyCount()\n                this.resetAutoPlay()\n            })\n            this.$btnOrientation.click(() => {\n                this.chessConsole.state.orientation = this.chessConsole.state.orientation === COLOR.white ? COLOR.black : COLOR.white\n            })\n            this.$btnAutoplay.click(() => {\n                if (this.autoplay) {\n                    clearInterval(this.autoplay)\n                    this.autoplay = null\n                } else {\n                    this.chessConsole.state.plyViewed++\n                    this.autoplay = setInterval(this.autoPlayMove.bind(this), this.props.autoPlayDelay)\n                }\n                this.updatePlayIcon()\n            })\n            this.setButtonStates()\n        })\n    }\n\n    resetAutoPlay() {\n        if (this.autoplay) {\n            clearInterval(this.autoplay)\n            this.autoplay = setInterval(this.autoPlayMove.bind(this), this.props.autoPlayDelay)\n        }\n    }\n\n    autoPlayMove() {\n        if (this.chessConsole.state.plyViewed >= this.chessConsole.state.chess.plyCount()) {\n            clearInterval(this.autoplay)\n            this.autoplay = null\n            this.updatePlayIcon()\n        } else {\n            this.chessConsole.state.plyViewed++\n            if (this.chessConsole.state.plyViewed >= this.chessConsole.state.chess.plyCount()) {\n                clearInterval(this.autoplay)\n                this.autoplay = null\n                this.updatePlayIcon()\n            }\n        }\n    }\n\n    updatePlayIcon() {\n        const $playIcon = this.$btnAutoplay.find(\".fa-play\")\n        const $stopIcon = this.$btnAutoplay.find(\".fa-stop\")\n        if (this.autoplay) {\n            $playIcon.hide()\n            $stopIcon.show()\n        } else {\n            $playIcon.show()\n            $stopIcon.hide()\n        }\n    }\n\n    setButtonStates() {\n        window.clearTimeout(this.redrawDebounce)\n        this.redrawDebounce = setTimeout(() => {\n            if (this.chessConsole.state.plyViewed > 0) {\n                this.$btnFirst.prop('disabled', false)\n                this.$btnBack.prop('disabled', false)\n            } else {\n                this.$btnFirst.prop('disabled', true)\n                this.$btnBack.prop('disabled', true)\n            }\n            if (this.chessConsole.state.plyViewed < this.chessConsole.state.chess.plyCount()) {\n                this.$btnLast.prop('disabled', false)\n                this.$btnForward.prop('disabled', false)\n                this.$btnAutoplay.prop('disabled', false)\n            } else {\n                this.$btnLast.prop('disabled', true)\n                this.$btnForward.prop('disabled', true)\n                this.$btnAutoplay.prop('disabled', true)\n            }\n        })\n        this.updatePlayIcon()\n    }\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\nimport {COLOR} from \"cm-chess/src/Chess.js\"\nimport {Component} from \"cm-web-modules/src/app/Component.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\n\nexport class Persistence extends Component {\n\n    constructor(chessConsole, props) {\n        super(props)\n        this.chessConsole = chessConsole\n        if(!this.props.savePrefix) {\n            this.props.savePrefix = \"ChessConsole\"\n        }\n        this.chessConsole.state.observeChess(() => {\n            this.save()\n        })\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.newGame, () => {\n            this.save()\n        })\n        this.chessConsole.persistence = this\n    }\n\n    load(prefix = this.props.savePrefix) {\n        const props = {}\n        try {\n            if (this.loadValue(\"PlayerColor\") !== null) {\n                props.playerColor = this.loadValue(\"PlayerColor\")\n            } else {\n                props.playerColor = COLOR.white\n            }\n            if (localStorage.getItem(prefix + \"Pgn\") !== null) {\n                props.pgn = localStorage.getItem(prefix + \"Pgn\")\n            }\n            this.chessConsole.messageBroker.publish(CONSOLE_MESSAGE_TOPICS.load)\n            this.chessConsole.initGame(props)\n        } catch (e) {\n            localStorage.clear()\n            console.warn(e)\n            this.chessConsole.initGame({playerColor: COLOR.white})\n        }\n    }\n\n    loadValue(valueName, prefix = this.props.savePrefix) {\n        let item = null\n        try {\n            item = localStorage.getItem(prefix + valueName)\n            return JSON.parse(item)\n        } catch (e) {\n            console.error(\"error loading \", prefix + valueName)\n            console.error(\"item:\" + item)\n            console.error(e)\n        }\n    }\n\n    save(prefix = this.props.savePrefix) {\n        localStorage.setItem(prefix + \"PlayerColor\", JSON.stringify(this.chessConsole.props.playerColor))\n        localStorage.setItem(prefix + \"Pgn\", this.chessConsole.state.chess.renderPgn())\n    }\n\n    saveValue(valueName, value, prefix = this.props.savePrefix) {\n        localStorage.setItem(prefix + valueName, JSON.stringify(value))\n    }\n\n}\n", "// noinspection JSUnresolvedVariable\n/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\nlet audioContext = new AudioContext()\nconst mainGainNode = audioContext.createGain()\nmainGainNode.gain.value = 1\nmainGainNode.connect(audioContext.destination)\n\nconst events = ['click', 'touchstart', 'touchend', 'keydown', 'mousedown', 'mouseup', 'dblclick']\n\nfunction addEventListeners() {\n    events.forEach(event => {\n        document.addEventListener(event, resumeAudioContext)\n    })\n}\n\nfunction removeEventListeners() {\n    events.forEach(event => {\n        document.removeEventListener(event, resumeAudioContext)\n    })\n}\n\n// start context after user interaction\nfunction resumeAudioContext() {\n    if (audioContext.state !== \"running\") {\n        audioContext.resume().then(() => {\n            console.log('AudioContext resumed successfully, state:', audioContext.state)\n            removeEventListeners()\n        })\n    }\n}\nconsole.log(\"AudioContext.state:\", audioContext.state)\naddEventListeners()\n\nexport class Audio {\n\n    static context() {\n        return audioContext\n    }\n\n    static destination() {\n        return mainGainNode\n    }\n\n    static setGain(gain) {\n        mainGainNode.gain.setValueAtTime(gain, audioContext.currentTime)\n    }\n\n    static isEnabled() {\n        return audioContext.state === \"running\"\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Audio} from \"./Audio.js\"\n\nexport class Sample {\n\n    constructor(src, props = {}) {\n        this.src = src\n        this.props = {\n            gain: 1,\n            startWithoutAudioContext: true // start to play, without enabled audio context\n        }\n        Object.assign(this.props, props)\n        this.gainNode = Audio.context().createGain()\n        this.setGain(this.props.gain)\n        this.audioBuffer = null\n        this.load()\n    }\n\n    setGain(gain) {\n        this.gainNode.gain.setValueAtTime(gain, Audio.context().currentTime)\n    }\n\n    play(when = undefined, offset = undefined, duration = undefined) {\n        if (this.props.startWithoutAudioContext || Audio.isEnabled()) {\n            this.loading.then(() => {\n                let source\n                source = this.createBufferSource()\n                source.start(when, offset, duration)\n            })\n        }\n\n    }\n\n    createBufferSource() {\n        const source = Audio.context().createBufferSource()\n        source.buffer = this.audioBuffer\n        source.connect(this.gainNode)\n        this.gainNode.connect(Audio.destination())\n        return source\n    }\n\n    load() {\n        this.loading = new Promise(((resolve, reject) => {\n            const request = new XMLHttpRequest()\n            request.open('GET', this.src, true)\n            request.responseType = 'arraybuffer'\n            request.onload = () => {\n                Audio.context().decodeAudioData(request.response, (audioBuffer) => {\n                    this.audioBuffer = audioBuffer\n                    resolve()\n                }, () => {\n                    console.error(\"error loading sound\", this.src)\n                    reject()\n                })\n            }\n            request.send()\n        }))\n        return this.loading\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-web-modules\n * License: MIT, see file 'LICENSE'\n */\n\nimport {Sample} from \"./Sample.js\"\n\nexport class AudioSprite extends Sample {\n\n    play(sliceName, when = 0) {\n        const slice = this.props.slices[sliceName]\n        if (!slice) {\n            throw new Error(`slice ${sliceName} not found in sprite`)\n        }\n        super.play(when, slice.offset, slice.duration)\n    }\n\n}", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {AudioSprite} from \"cm-web-modules/src/audio/AudioSprite.js\"\nimport {Component} from \"cm-web-modules/src/app/Component.js\"\nimport {CONSOLE_MESSAGE_TOPICS} from \"../ChessConsole.js\"\n\nexport class Sound extends Component {\n\n    constructor(chessConsole, props) {\n        super(props)\n        this.chessConsole = chessConsole\n        this.audioSprite = new AudioSprite(this.props.soundSpriteFile,\n            {\n                gain: 1,\n                slices: {\n                    \"game_start\": {offset: 0, duration: 0.9},\n                    \"game_won\": {offset: 0.9, duration: 1.8},\n                    \"game_lost\": {offset: 2.7, duration: 0.9},\n                    \"game_draw\": {offset: 9.45, duration: 1.35},\n                    \"check\": {offset: 3.6, duration: 0.45},\n                    \"wrong_move\": {offset: 4.05, duration: 0.45},\n                    \"move\": {offset: 4.5, duration: 0.2},\n                    \"capture\": {offset: 6.3, duration: 0.2},\n                    \"castle\": {offset: 7.65, duration: 0.2},\n                    \"take_back\": {offset: 8.1, duration: 0.12},\n                    \"promotion\": {offset: 9.0, duration: 0.45},\n                    \"dialog\": {offset: 10.8, duration: 0.45}\n                }\n            })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.initGame, () => {\n            // this.play(\"game_start\")\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.legalMove, (data) => {\n            const chess = this.chessConsole.state.chess\n            const flags = data.moveResult.flags\n            if (flags.indexOf(\"p\") !== -1) {\n                this.play(\"promotion\")\n            } else if (flags.indexOf(\"c\") !== -1) {\n                this.play(\"capture\")\n            } else if (flags.indexOf(\"k\") !== -1 || flags.indexOf(\"q\") !== -1) {\n                this.play(\"castle\")\n            } else {\n                clearInterval(this.moveDebounced)\n                this.moveDebounced = setTimeout(() => {\n                    this.play(\"move\")\n                }, 10)\n            }\n            if (chess.inCheck() || chess.inCheckmate()) {\n                this.play(\"check\")\n            }\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.illegalMove, () => {\n            this.play(\"wrong_move\")\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.moveUndone, () => {\n            this.play(\"take_back\")\n        })\n        chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.gameOver, (data) => {\n            setTimeout(() => {\n                if(!data.wonColor) {\n                    this.play(\"game_lost\")\n                } else {\n                    if(data.wonColor === this.chessConsole.props.playerColor) {\n                        this.play(\"game_won\")\n                    } else {\n                        this.play(\"game_lost\")\n                    }\n                }\n            }, 500)\n        })\n        chessConsole.sound = this\n    }\n\n    play(soundName) {\n        this.audioSprite.play(soundName)\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/bootstrap-show-modal\n * License: MIT, see file 'LICENSE'\n */\n\nexport class Modal {\n    constructor(props) {\n        this.props = {\n            title: \"\", // the dialog title html\n            body: \"\", // the dialog body html\n            footer: \"\", // the dialog footer html (mainly used for buttons)\n            modalClass: \"fade\", // Additional css for \".modal\", \"fade\" for fade effect\n            modalDialogClass: \"\", // Additional css for \".modal-dialog\", like \"modal-lg\" or \"modal-sm\" for sizing\n            headerClass: \"\", // Additional css for \".modal-header\"\n            bodyClass: \"\", // Additional css for \".modal-body\"\n            footerClass: \"\", // Additional css for \".modal-footer\"\n            theme: undefined, // data-bs-theme\n            options: { // The Bootstrap modal options as described here: https://getbootstrap.com/docs/4.0/components/modal/#options\n                backdrop: 'static' // disallow closing on click in the background\n            },\n            draggable: false, // make the dialog draggable\n            // Events:\n            onCreate: null, // Callback, called after the modal was created\n            onShown: null, // Callback, called after the modal was shown and completely faded in\n            onDispose: null, // Callback, called after the modal was disposed\n            onSubmit: null // Callback of bootstrap.showConfirm(), called after yes or no was pressed\n        }\n        Object.assign(this.props, props)\n        this.id = \"bootstrap-show-modal-\" + i\n        i++\n        this.show()\n        if (this.props.onCreate) {\n            this.props.onCreate(this)\n        }\n    }\n\n    createContainerElement() {\n        const self = this\n        this.element = document.createElement(\"div\")\n        this.element.id = this.id\n        let cssClass = \"modal \" + this.props.modalClass\n        // seems to be a bug in bootstrap, but I am not sure\n        if(this.props.theme === \"dark\") {\n            cssClass += \" text-light\"\n        }\n        this.element.setAttribute(\"class\", cssClass)\n        this.element.setAttribute(\"tabindex\", \"-1\")\n        this.element.setAttribute(\"role\", \"dialog\")\n        this.element.setAttribute(\"aria-labelledby\", this.id)\n        if (this.props.theme) {\n            this.element.setAttribute(\"data-bs-theme\", this.props.theme)\n        }\n        this.element.innerHTML = `\n<div class=\"modal-dialog ${this.props.modalDialogClass}\" role=\"document\">\n    <div class=\"modal-content\">\n    <div class=\"modal-header ${this.props.headerClass}\">\n        <h5 class=\"modal-title\"></h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n    </div>\n    <div class=\"modal-body ${this.props.bodyClass}\"></div>\n    <div class=\"modal-footer ${this.props.footerClass}\"></div>\n    </div>\n</div>`\n        document.body.appendChild(this.element)\n        this.titleElement = this.element.querySelector(\".modal-title\")\n        this.bodyElement = this.element.querySelector(\".modal-body\")\n        this.footerElement = this.element.querySelector(\".modal-footer\")\n        this.element.addEventListener('hidden.bs.modal', function () {\n            self.dispose()\n        })\n        this.element.addEventListener('shown.bs.modal', function () {\n            if (self.props.onShown) {\n                self.props.onShown(self)\n            }\n        })\n    }\n\n    show() {\n        if (!this.element) {\n            this.createContainerElement()\n            if (this.props.options) {\n                const modalInstance = new bootstrap.Modal(this.element, this.props.options)\n                if (modalInstance) {\n                    modalInstance.show()\n                }\n            } else {\n                const modalInstance = new bootstrap.Modal(this.element)\n                if (modalInstance) {\n                    modalInstance.show()\n                }\n            }\n        } else {\n            const modalInstance = bootstrap.Modal.getInstance(this.element)\n            if (modalInstance) {\n                modalInstance.show()\n            }\n        }\n        if (this.props.title) {\n            this.titleElement.style.display = \"\"\n            this.titleElement.innerHTML = this.props.title\n        } else {\n            this.titleElement.style.display = \"none\"\n        }\n        if (this.props.body) {\n            this.bodyElement.style.display = \"\"\n            this.bodyElement.innerHTML = this.props.body\n        } else {\n            this.bodyElement.style.display = \"none\"\n        }\n        if (this.props.footer) {\n            this.footerElement.style.display = \"\"\n            this.footerElement.innerHTML = this.props.footer\n        } else {\n            this.footerElement.style.display = \"none\"\n        }\n    }\n\n    hide() {\n        const modalInstance = bootstrap.Modal.getInstance(this.element)\n        if (modalInstance) {\n            modalInstance.hide()\n        }\n    }\n\n    dispose() {\n        const modalInstance = bootstrap.Modal.getInstance(this.element)\n        if (modalInstance) {\n            modalInstance.dispose()\n        }\n        document.body.removeChild(this.element)\n        if (this.props.onDispose) {\n            this.props.onDispose(this)\n        }\n    }\n}\n\nlet i = 0\nbootstrap.showModal = (props) => {\n    if (props.buttons) {\n        let footer = \"\"\n        for (let key in props.buttons) {\n            const buttonText = props.buttons[key]\n            footer += `<button type=\"button\" class=\"btn btn-primary\" data-value=\"${key}\" data-bs-dismiss=\"modal\">${buttonText}</button>`\n        }\n        props.footer = footer\n    }\n    return new Modal(props)\n}\n\nbootstrap.showAlert = (props) => {\n    props.buttons = {OK: 'OK'}\n    return bootstrap.showModal(props)\n}\n\nbootstrap.showConfirm = (props) => {\n    props.footer = `<button class=\"btn btn-secondary btn-false btn-cancel\">${props.textFalse}</button><button class=\"btn btn-primary btn-true\">${props.textTrue}</button>`\n    props.onCreate = (modal) => {\n        const modalInstance = bootstrap.Modal.getInstance(modal.element)\n        modal.element.querySelector(\".btn-false\").addEventListener(\"click\", function () {\n            if (modalInstance) {\n                modalInstance.hide()\n            }\n            modal.props.onSubmit(false, modal)\n        })\n        modal.element.querySelector(\".btn-true\").addEventListener(\"click\", function () {\n            if (modalInstance) {\n                modalInstance.hide()\n            }\n            modal.props.onSubmit(true, modal)\n        })\n    }\n    return bootstrap.showModal(props)\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {COLOR} from \"cm-chess/src/Chess.js\"\nimport \"bootstrap-show-modal/src/ShowModal.js\"\n\nexport class NewGameDialog {\n\n    constructor(module, props) {\n        const i18n = module.i18n\n        i18n.load({\n            de: {\n                color: \"Farbe\",\n                white: \"Weiss\",\n                black: \"Schwarz\",\n                auto: \"automatisch\"\n            },\n            en: {\n                color: \"Color\",\n                white: \"White\",\n                black: \"Black\",\n                auto: \"automatically\"\n            }\n        }).then(() => {\n            const newGameColor = module.persistence.loadValue(\"newGameColor\")\n            props.modalClass = \"fade\"\n            props.body =\n               `<form class=\"form\"><div class=\"form-group row\">\n                    <div class=\"col-3\"><label for=\"color\" class=\"col-form-label\">${i18n.t(\"color\")}</label></div>\n                    <div class=\"col-9\"><select id=\"color\" class=\"form-select\">\n                        <option value=\"auto\">${i18n.t(\"auto\")}</option>\n                        <option value=\"w\" ${newGameColor === \"w\" ? \"selected\" : \"\"}>${i18n.t(\"white\")}</option>\n                        <option value=\"b\" ${newGameColor === \"b\" ? \"selected\" : \"\"}>${i18n.t(\"black\")}</option>\n                    </select></div>\n                </div></form>`\n            props.footer = `<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">${i18n.t(\"cancel\")}</button>\n            <button type=\"submit\" class=\"btn btn-primary\">${i18n.t(\"ok\")}</button>`\n            props.onCreate = (modal) => {\n                modal.element.querySelector(\"button[type='submit']\").addEventListener(\"click\", function (event) {\n                    event.preventDefault()\n                    const formElement = modal.element.querySelector(\".form\")\n                    let color = formElement.querySelector(\"#color\").value\n                    module.persistence.saveValue(\"newGameColor\", color)\n                    if (color !== COLOR.white && color !== COLOR.black) {\n                        color = (module.props.playerColor === COLOR.white) ? COLOR.black : COLOR.white\n                    }\n                    modal.hide()\n                    module.newGame({playerColor: color})\n                })\n            }\n            bootstrap.showModal(props)\n        })\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/chess-console\n * License: MIT, see file 'LICENSE'\n */\n\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\nimport {NewGameDialog} from \"./NewGameDialog.js\"\n\nexport class GameControl extends UiComponent {\n\n    constructor(chessConsole, props) {\n        super(chessConsole.componentContainers.controlButtons, props)\n        this.chessConsole = chessConsole\n\n        const i18n = chessConsole.i18n\n        i18n.load({\n            de: {\n                \"start_game\": \"Ein neues Spiel starten\",\n                \"undo_move\": \"Zug zur\u00FCck nehmen\"\n            },\n            en: {\n                \"start_game\": \"Start a new game\",\n                \"undo_move\": \"Undo move\"\n            }\n        }).then(() => {\n\n            this.$btnUndoMove = $(`<button type=\"button\" title=\"${i18n.t('undo_move')}\" class=\"btn btn-icon btn-light undoMove\"><i class=\"fa fa-fw fa-undo-alt\" aria-hidden=\"true\"></i></button>`)\n            this.$btnStartNewGame = $(`<button type=\"button\" title=\"${i18n.t('start_game')}\" class=\"btn btn-icon btn-light startNewGame\"><i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i></button>\\`)`)\n\n            this.context.appendChild(this.$btnUndoMove[0])\n            this.context.appendChild(this.$btnStartNewGame[0])\n\n            this.$btnUndoMove.click(() => {\n                this.chessConsole.undoMove()\n            })\n            this.$btnStartNewGame.click(() => {\n                this.showNewGameDialog()\n            })\n\n            this.chessConsole.state.observeChess(() => {\n                this.setButtonStates()\n            })\n            this.setButtonStates()\n        })\n    }\n\n    showNewGameDialog() {\n        new NewGameDialog(this.chessConsole, {\n            title: this.chessConsole.i18n.t('start_game')\n        })\n    }\n\n    setButtonStates() {\n        if (this.chessConsole.state.chess.plyCount() < 2) {\n            this.$btnUndoMove.prop(\"disabled\", true)\n        } else {\n            this.$btnUndoMove.prop(\"disabled\", false)\n        }\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-engine-runner\n * License: MIT, see file 'LICENSE'\n */\n\nexport const ENGINE_STATE = {\n    LOADING: 1,\n    LOADED: 2,\n    READY: 3,\n    THINKING: 4\n}\n\nexport class EngineRunner {\n\n    constructor(props) {\n        this.props = {\n            debug: false,\n            responseDelay: 1000  // https://www.reddit.com/r/ProgrammerHumor/comments/6xwely/from_the_apple_chess_engine_code/\n                                 // https://opensource.apple.com/source/Chess/Chess-347/Sources/MBCEngine.mm.auto.html\n        }\n        Object.assign(this.props, props)\n        this.engineState = ENGINE_STATE.LOADING\n        this.initialized = this.init()\n        /**\n         * @deprecated 2023-04-11 use `this.initialized` instead\n         */\n        this.initialization = this.initialized\n    }\n\n    init() {\n        return Promise.reject(\"you have to implement `init()` in the EngineRunner\")\n    }\n\n    calculateMove(fen, props = {}) {\n\n    }\n\n}\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-chess-engine-runner\n * License: MIT, see file 'LICENSE'\n */\n\nimport {ENGINE_STATE, EngineRunner} from \"./EngineRunner.js\"\n\n// [depth, Skill Level]\nexport const LEVELS = {\n    1: [3, 0],\n    2: [3, 1],\n    3: [4, 2],\n    4: [5, 3],\n    5: [5, 4],\n    6: [6, 5],\n    7: [7, 6],\n    8: [8, 7],\n    9: [9, 8],\n    10: [10, 10],\n    11: [11, 11],\n    12: [12, 12],\n    13: [13, 13],\n    14: [14, 14],\n    15: [15, 15],\n    16: [16, 16],\n    17: [17, 17],\n    18: [18, 18],\n    19: [19, 19],\n    20: [20, 20]\n}\n\nexport class StockfishRunner extends EngineRunner {\n\n    constructor(props) {\n        super(props)\n    }\n\n    init() {\n        return new Promise((resolve) => {\n            const listener = (event) => {\n                this.workerListener(event)\n            }\n            if (this.engineWorker) {\n                this.engineWorker.removeEventListener(\"message\", listener)\n                this.engineWorker.terminate()\n            }\n            this.engineWorker = new Worker(this.props.workerUrl)\n            this.engineWorker.addEventListener(\"message\", listener)\n\n            this.uciCmd('uci')\n            this.uciCmd('ucinewgame')\n            this.uciCmd('isready')\n            resolve()\n        })\n    }\n\n    workerListener(event) {\n        if(this.props.debug) {\n            if(event.type === \"message\") {\n                console.log(\"  msg\", event.data)\n            } else {\n                console.log(event)\n            }\n        }\n        const line = event.data\n        if (line === 'uciok') {\n            this.engineState = ENGINE_STATE.LOADED\n        } else if (line === 'readyok') {\n            this.engineState = ENGINE_STATE.READY\n        } else {\n            let match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/)\n            if (match) {\n                const score = parseInt(match[2], 10)\n                let tmpScore\n                if (match[1] === 'cp') {\n                    tmpScore = (score / 100.0).toFixed(1)\n                } else if (match[1] === 'mate') {\n                    tmpScore = '#' + Math.abs(score)\n                }\n                this.score = tmpScore\n            }\n            // match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbk])?/) // ponder is not always included\n            match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbk])?( ponder ([a-h][1-8])?([a-h][1-8])?)?/)\n            if (match) {\n                this.engineState = ENGINE_STATE.READY\n                if (match[4] !== undefined) {\n                    this.ponder = {from: match[5], to: match[6]}\n                } else {\n                    this.ponder = undefined\n                }\n                const move = {from: match[1], to: match[2], promotion: match[3], score: this.score, ponder: this.ponder}\n                this.moveResponse(move)\n            } else {\n                match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/)\n                if (match) {\n                    this.engineState = ENGINE_STATE.THINKING\n                    this.search = 'Depth: ' + match[1] + ' Nps: ' + match[2]\n                }\n            }\n        }\n    }\n\n    calculateMove(fen, props = { level: 4 }) {\n        this.engineState = ENGINE_STATE.THINKING\n        const timeoutPromise = new Promise((resolve) => {\n            setTimeout(async () => {\n                resolve()\n            }, this.props.responseDelay)\n        })\n        const calculationPromise = new Promise ((resolve) => {\n            setTimeout(() => {\n                this.uciCmd('setoption name Skill Level value ' + (LEVELS[props.level][1]))\n                this.uciCmd('position fen ' + fen)\n                this.uciCmd('go depth ' + (LEVELS[props.level][0]))\n                this.moveResponse = (move) => {\n                    resolve(move)\n                }\n            }, this.props.responseDelay)\n        })\n        return new Promise((resolve) => {\n            Promise.all([this.initialisation, timeoutPromise, calculationPromise]).then((values) => {\n                this.engineState = ENGINE_STATE.READY\n                resolve(values[2])\n            })\n        })\n    }\n\n    uciCmd(cmd) {\n        if(this.props.debug) {\n            console.log(\"  uci ->\", cmd)\n        }\n        this.engineWorker.postMessage(cmd)\n    }\n\n}\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\n\r\nimport {LEVELS} from \"cm-engine-runner/src/StockfishRunner.js\"\r\n\r\nexport class StockfishNewGameDialog {\r\n\r\n    constructor(chessConsole, props) {\r\n        this.chessConsole = chessConsole\r\n        this.props = props\r\n        const i18n = chessConsole.i18n\r\n        i18n.load({\r\n            de: {\r\n                color: \"Farbe\",\r\n                white: \"Weiss\",\r\n                black: \"Schwarz\",\r\n                auto: \"Automatisch wechselnd\",\r\n                random: \"Zufallsauswahl\"\r\n            },\r\n            en: {\r\n                color: \"Color\",\r\n                white: \"white\",\r\n                black: \"black\",\r\n                auto: \"automatically alternating\",\r\n                random: \"random\"\r\n            }\r\n        }).then(() => {\r\n            const newGameColor = chessConsole.persistence.loadValue(\"newGameColor\")\r\n            props.modalClass = \"fade\"\r\n            props.body = `<div class=\"form\"><div class=\"form-group row\">\r\n                        <div class=\"col-3\"><label for=\"color\" class=\"col-form-label\">${i18n.t(\"color\")}</label></div>\r\n                        <div class=\"col-9\"><select id=\"color\" class=\"form-control\">\r\n                        <option value=\"w\" ${newGameColor === \"w\" ? \"selected\" : \"\"}>${i18n.t(\"white\")}</option>\r\n                        <option value=\"b\" ${newGameColor === \"b\" ? \"selected\" : \"\"}>${i18n.t(\"black\")}</option>\r\n                        <option value=\"random\" ${newGameColor === \"random\" ? \"selected\" : \"\"}>${i18n.t(\"random\")}</option>\r\n                        <option value=\"auto\" ${newGameColor === \"auto\" ? \"selected\" : \"\"}>${i18n.t(\"auto\")}</option>\r\n                        </select></div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                        <div class=\"col-3\"><label for=\"level\" class=\"col-form-label\">${i18n.t(\"level\")}</label></div>\r\n                        <div class=\"col-9\"><select id=\"level\" class=\"form-control\">\r\n                        ${this.renderLevelOptions()}\r\n                        </select></div>\r\n                        </div></div>`\r\n            props.footer = `<button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\">${i18n.t(\"cancel\")}</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\">${i18n.t(\"ok\")}</button>`\r\n            props.onCreate = (modal) => {\r\n                $(modal.element).on(\"click\", \"button[type='submit']\", function (event) {\r\n                    event.preventDefault()\r\n                    const $form = $(modal.element).find(\".form\")\r\n                    let color = $form.find(\"#color\").val()\r\n                    chessConsole.persistence.saveValue(\"newGameColor\", color)\r\n                    const level = parseInt($form.find(\"#level\").val(), 10) || 1\r\n                    if (color === \"auto\") {\r\n                        color = (chessConsole.props.playerColor === COLOR.white) ? COLOR.black : COLOR.white\r\n                    } else if (color === \"random\") {\r\n                        color = \"wb\".charAt(Math.floor(Math.random() * 2))\r\n                    }\r\n                    modal.hide()\r\n                    chessConsole.newGame({playerColor: color, engineLevel: level})\r\n                })\r\n            }\r\n            bootstrap.showModal(props)\r\n        })\r\n    }\r\n\r\n    renderLevelOptions() {\r\n        let html = ''\r\n        const currentLevel = this.props.player.state.level\r\n        const levels = Object.keys(LEVELS)\r\n        for (let i = levels[0]; i <= levels[levels.length - 1]; i++) {\r\n            let selected = ''\r\n            if (currentLevel === i) {\r\n                selected = 'selected '\r\n            }\r\n            html += '<option ' + selected + 'value=\"' + i + '\">Level ' + i + '</option>' // (ELO ca. ' + (i * 65 + 1100) + ')\r\n        }\r\n        return html\r\n    }\r\n\r\n}\r\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\n\r\nimport {GameControl} from \"chess-console/src/components/GameControl/GameControl.js\"\r\nimport {StockfishNewGameDialog} from \"./StockfishNewGameDialog.js\"\r\n\r\nexport class StockfishGameControl extends GameControl {\r\n    showNewGameDialog() {\r\n        new StockfishNewGameDialog(this.chessConsole, {\r\n            title: this.chessConsole.i18n.t('start_game'),\r\n            player: this.props.player\r\n        })\r\n    }\r\n}\r\n", "\n// Code dealing with Polyglot opening books\n// Representation of a single entry in a Polyglot opening book\n\nclass BookEntry {\n\n    // Build one BookEntry from the binary data slurped from\n    // a polyglot opening book starting at byte-offset 'ofs'\n    constructor(bookdata, ofs) {\n        // Remember where we started from\n        // noinspection JSUnusedGlobalSymbols\n        this.ofs = ofs\n        // Convert key to BigInt (64-bit) value\n        let key = BigInt(0)\n        let i\n        let byt\n        for (i = 0; i < 8; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            key = (key << BigInt(8)) | BigInt(byt)\n        }\n        this.key = key\n        let raw_move = 0\n        for (i = 0; i < 2; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            raw_move = (raw_move << 8) | byt\n        }\n        this.raw_move = raw_move\n        let weight = 0\n        for (i = 0; i < 2; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            weight = (weight << 8) | byt\n        }\n        this.weight = weight\n        let learn = 0\n        for (i = 0; i < 4; ++i) {\n            byt = bookdata.charCodeAt(ofs++)\n            learn = (learn << 8) | byt\n        }\n        // noinspection JSUnusedGlobalSymbols\n        this.learn = learn\n    }\n\n    get_key() {\n        return this.key\n    }\n\n    get_from_row() {\n        return (this.raw_move >> 9) & 0x0007\n    }\n\n    get_from_col() {\n        return (this.raw_move >> 6) & 0x0007\n    }\n\n    get_to_row() {\n        return (this.raw_move >> 3) & 0x0007\n    }\n\n    get_to_col() {\n        return this.raw_move & 0x0007\n    }\n\n    get_promo_piece() {\n        return (this.raw_move >> 12) & 0x0007\n    }\n\n    // Polyglot uses its own convention for castling: provide\n    // accessor methods for finding out which type of castling\n    // is encoded in current move.\n    isOOW() {\n        return this.raw_move === 0x0107\n    }\n\n    isOOB() {\n        return this.raw_move === 0x0f3f\n    }\n\n    isOOOW() {\n        return this.raw_move === 0x0100\n    }\n\n    isOOOB() {\n        return this.raw_move === 0x0f38\n    }\n\n}\n\n// representation of a Polyglot binary opening book\nexport class Book {\n\n    constructor(bookdata) {\n        this.bookdata = bookdata\n        this.cache = []\t// cache so that we parse each entry at most one time\n        if (this.bookdata.length >= 32) {\n            this.first = new BookEntry(this.bookdata, 0)\n            this.last = new BookEntry(this.bookdata, this.get_last_index())\n        } else {\n            this.first = null\n            this.last = null\n        }\n    }\n\n    get_length() {\n        return this.bookdata.length / 16\n    }\n\n    get_last_index() {\n        return this.get_length() - 1\n    }\n\n    get_offset(idx) {\n        return idx * 16\n    }\n\n    get_entry(idx) {\n        let e\n        if (this.cache[idx] === undefined) {\n            e = new BookEntry(this.bookdata, this.get_offset(idx))\n            this.cache[idx] = e\n        } else {\n            e = this.cache[idx]\n        }\n        return e\n    }\n\n    // Retrieve the index of the first occurrence of the specified hash,\n    // or -1 if not found.\n    //\n    // weed = BigInt (64-bit integer) with the hash to locate\n    find_first_hash(weed) {\n        if (this.first === null || this.last === null) {\n            return -1\n        }\n        if (weed < this.first || weed > this.last) {\n            return -1\n        }\n        if (weed === this.first) {\n            return 0\n        }\n        let i0 = 0\n        let i1 = (this.bookdata.length / 16) - 1\n        let i = i1\n        let ky = 0n\t// need a BigInt here\n        // If the last entry matches the searched hash value,\n        // we can skip the binary search and go straight to\n        // the part where we move up in the list of same hash\n        // values until we find the first in the list.\n        if (weed !== this.last) {\n            // Stop looping if only 2 elements are in the inspection range:\n            // both endpoints will have been compared to the wanted hash value\n            // and both endpoints of the range will have a different hash. So,\n            // if there are only two left, and both have previously been confirmed\n            // to be different from the wanted hash, that means that the hash is\n            // not in the table and we can safely bail out of the loop.\n            while (i1 - i0 > 1) {\n                i = Math.floor((i0 + i1) / 2)\t// this is javascript for you: no int arithmetic\n                const e = this.get_entry(i)\n                ky = e.get_key()\n                if (ky === weed) {\n                    // Found an entry with the wanted hash: stop looping\n                    break\n                }\n                // Not found, so continue with half the current range\n                if (ky < weed) {\n                    i0 = i\n                } else {\n                    i1 = i\n                }\n            }\n        }\n        // No need to go up in the table if not found\n        if (ky !== weed) {\n            return -1\n        }\n        // Move up in table until different key found\n        while (i > 0) {\n            if (this.get_entry(i - 1).get_key() === weed) {\n                i = i - 1\n            } else {\n                break\n            }\n        }\n        return i\n    }\n\n    // Get all entries for given hash\n    get_all_moves(weed) {\n        let i = this.find_first_hash(weed)\n        if (i < 0) {\n            return []\n        }\n        const lst = []\n        let e = this.get_entry(i)\n        while ((e !== undefined) && (e.get_key() === weed)) {\n            lst.push(e)\n            e = this.get_entry(++i)\n        }\n        return lst\n    }\n\n}\n", "//\n// Polyglot Zobrist hashing function.\n//\n// Main difference with other Javascript implementations found is that this\n// code uses 64-bit integers (pretty recent addition to the Javascript language)\n//\n// BigInt values to hold 64-bit entries\n//\n// Table slurped from https://github.com/ddugovic/polyglot/random.c\n//\n// Javascript code loosely inpsired on https://shinkarom.github.io/zobrist/\n//\nconst random64 = [\n    0x9D39247E33776D41n, 0x2AF7398005AAA5C7n, 0x44DB015024623547n, 0x9C15F73E62A76AE2n,\n    0x75834465489C0C89n, 0x3290AC3A203001BFn, 0x0FBBAD1F61042279n, 0xE83A908FF2FB60CAn,\n    0x0D7E765D58755C10n, 0x1A083822CEAFE02Dn, 0x9605D5F0E25EC3B0n, 0xD021FF5CD13A2ED5n,\n    0x40BDF15D4A672E32n, 0x011355146FD56395n, 0x5DB4832046F3D9E5n, 0x239F8B2D7FF719CCn,\n    0x05D1A1AE85B49AA1n, 0x679F848F6E8FC971n, 0x7449BBFF801FED0Bn, 0x7D11CDB1C3B7ADF0n,\n    0x82C7709E781EB7CCn, 0xF3218F1C9510786Cn, 0x331478F3AF51BBE6n, 0x4BB38DE5E7219443n,\n    0xAA649C6EBCFD50FCn, 0x8DBD98A352AFD40Bn, 0x87D2074B81D79217n, 0x19F3C751D3E92AE1n,\n    0xB4AB30F062B19ABFn, 0x7B0500AC42047AC4n, 0xC9452CA81A09D85Dn, 0x24AA6C514DA27500n,\n    0x4C9F34427501B447n, 0x14A68FD73C910841n, 0xA71B9B83461CBD93n, 0x03488B95B0F1850Fn,\n    0x637B2B34FF93C040n, 0x09D1BC9A3DD90A94n, 0x3575668334A1DD3Bn, 0x735E2B97A4C45A23n,\n    0x18727070F1BD400Bn, 0x1FCBACD259BF02E7n, 0xD310A7C2CE9B6555n, 0xBF983FE0FE5D8244n,\n    0x9F74D14F7454A824n, 0x51EBDC4AB9BA3035n, 0x5C82C505DB9AB0FAn, 0xFCF7FE8A3430B241n,\n    0x3253A729B9BA3DDEn, 0x8C74C368081B3075n, 0xB9BC6C87167C33E7n, 0x7EF48F2B83024E20n,\n    0x11D505D4C351BD7Fn, 0x6568FCA92C76A243n, 0x4DE0B0F40F32A7B8n, 0x96D693460CC37E5Dn,\n    0x42E240CB63689F2Fn, 0x6D2BDCDAE2919661n, 0x42880B0236E4D951n, 0x5F0F4A5898171BB6n,\n    0x39F890F579F92F88n, 0x93C5B5F47356388Bn, 0x63DC359D8D231B78n, 0xEC16CA8AEA98AD76n,\n    0x5355F900C2A82DC7n, 0x07FB9F855A997142n, 0x5093417AA8A7ED5En, 0x7BCBC38DA25A7F3Cn,\n    0x19FC8A768CF4B6D4n, 0x637A7780DECFC0D9n, 0x8249A47AEE0E41F7n, 0x79AD695501E7D1E8n,\n    0x14ACBAF4777D5776n, 0xF145B6BECCDEA195n, 0xDABF2AC8201752FCn, 0x24C3C94DF9C8D3F6n,\n    0xBB6E2924F03912EAn, 0x0CE26C0B95C980D9n, 0xA49CD132BFBF7CC4n, 0xE99D662AF4243939n,\n    0x27E6AD7891165C3Fn, 0x8535F040B9744FF1n, 0x54B3F4FA5F40D873n, 0x72B12C32127FED2Bn,\n    0xEE954D3C7B411F47n, 0x9A85AC909A24EAA1n, 0x70AC4CD9F04F21F5n, 0xF9B89D3E99A075C2n,\n    0x87B3E2B2B5C907B1n, 0xA366E5B8C54F48B8n, 0xAE4A9346CC3F7CF2n, 0x1920C04D47267BBDn,\n    0x87BF02C6B49E2AE9n, 0x092237AC237F3859n, 0xFF07F64EF8ED14D0n, 0x8DE8DCA9F03CC54En,\n    0x9C1633264DB49C89n, 0xB3F22C3D0B0B38EDn, 0x390E5FB44D01144Bn, 0x5BFEA5B4712768E9n,\n    0x1E1032911FA78984n, 0x9A74ACB964E78CB3n, 0x4F80F7A035DAFB04n, 0x6304D09A0B3738C4n,\n    0x2171E64683023A08n, 0x5B9B63EB9CEFF80Cn, 0x506AACF489889342n, 0x1881AFC9A3A701D6n,\n    0x6503080440750644n, 0xDFD395339CDBF4A7n, 0xEF927DBCF00C20F2n, 0x7B32F7D1E03680ECn,\n    0xB9FD7620E7316243n, 0x05A7E8A57DB91B77n, 0xB5889C6E15630A75n, 0x4A750A09CE9573F7n,\n    0xCF464CEC899A2F8An, 0xF538639CE705B824n, 0x3C79A0FF5580EF7Fn, 0xEDE6C87F8477609Dn,\n    0x799E81F05BC93F31n, 0x86536B8CF3428A8Cn, 0x97D7374C60087B73n, 0xA246637CFF328532n,\n    0x043FCAE60CC0EBA0n, 0x920E449535DD359En, 0x70EB093B15B290CCn, 0x73A1921916591CBDn,\n    0x56436C9FE1A1AA8Dn, 0xEFAC4B70633B8F81n, 0xBB215798D45DF7AFn, 0x45F20042F24F1768n,\n    0x930F80F4E8EB7462n, 0xFF6712FFCFD75EA1n, 0xAE623FD67468AA70n, 0xDD2C5BC84BC8D8FCn,\n    0x7EED120D54CF2DD9n, 0x22FE545401165F1Cn, 0xC91800E98FB99929n, 0x808BD68E6AC10365n,\n    0xDEC468145B7605F6n, 0x1BEDE3A3AEF53302n, 0x43539603D6C55602n, 0xAA969B5C691CCB7An,\n    0xA87832D392EFEE56n, 0x65942C7B3C7E11AEn, 0xDED2D633CAD004F6n, 0x21F08570F420E565n,\n    0xB415938D7DA94E3Cn, 0x91B859E59ECB6350n, 0x10CFF333E0ED804An, 0x28AED140BE0BB7DDn,\n    0xC5CC1D89724FA456n, 0x5648F680F11A2741n, 0x2D255069F0B7DAB3n, 0x9BC5A38EF729ABD4n,\n    0xEF2F054308F6A2BCn, 0xAF2042F5CC5C2858n, 0x480412BAB7F5BE2An, 0xAEF3AF4A563DFE43n,\n    0x19AFE59AE451497Fn, 0x52593803DFF1E840n, 0xF4F076E65F2CE6F0n, 0x11379625747D5AF3n,\n    0xBCE5D2248682C115n, 0x9DA4243DE836994Fn, 0x066F70B33FE09017n, 0x4DC4DE189B671A1Cn,\n    0x51039AB7712457C3n, 0xC07A3F80C31FB4B4n, 0xB46EE9C5E64A6E7Cn, 0xB3819A42ABE61C87n,\n    0x21A007933A522A20n, 0x2DF16F761598AA4Fn, 0x763C4A1371B368FDn, 0xF793C46702E086A0n,\n    0xD7288E012AEB8D31n, 0xDE336A2A4BC1C44Bn, 0x0BF692B38D079F23n, 0x2C604A7A177326B3n,\n    0x4850E73E03EB6064n, 0xCFC447F1E53C8E1Bn, 0xB05CA3F564268D99n, 0x9AE182C8BC9474E8n,\n    0xA4FC4BD4FC5558CAn, 0xE755178D58FC4E76n, 0x69B97DB1A4C03DFEn, 0xF9B5B7C4ACC67C96n,\n    0xFC6A82D64B8655FBn, 0x9C684CB6C4D24417n, 0x8EC97D2917456ED0n, 0x6703DF9D2924E97En,\n    0xC547F57E42A7444En, 0x78E37644E7CAD29En, 0xFE9A44E9362F05FAn, 0x08BD35CC38336615n,\n    0x9315E5EB3A129ACEn, 0x94061B871E04DF75n, 0xDF1D9F9D784BA010n, 0x3BBA57B68871B59Dn,\n    0xD2B7ADEEDED1F73Fn, 0xF7A255D83BC373F8n, 0xD7F4F2448C0CEB81n, 0xD95BE88CD210FFA7n,\n    0x336F52F8FF4728E7n, 0xA74049DAC312AC71n, 0xA2F61BB6E437FDB5n, 0x4F2A5CB07F6A35B3n,\n    0x87D380BDA5BF7859n, 0x16B9F7E06C453A21n, 0x7BA2484C8A0FD54En, 0xF3A678CAD9A2E38Cn,\n    0x39B0BF7DDE437BA2n, 0xFCAF55C1BF8A4424n, 0x18FCF680573FA594n, 0x4C0563B89F495AC3n,\n    0x40E087931A00930Dn, 0x8CFFA9412EB642C1n, 0x68CA39053261169Fn, 0x7A1EE967D27579E2n,\n    0x9D1D60E5076F5B6Fn, 0x3810E399B6F65BA2n, 0x32095B6D4AB5F9B1n, 0x35CAB62109DD038An,\n    0xA90B24499FCFAFB1n, 0x77A225A07CC2C6BDn, 0x513E5E634C70E331n, 0x4361C0CA3F692F12n,\n    0xD941ACA44B20A45Bn, 0x528F7C8602C5807Bn, 0x52AB92BEB9613989n, 0x9D1DFA2EFC557F73n,\n    0x722FF175F572C348n, 0x1D1260A51107FE97n, 0x7A249A57EC0C9BA2n, 0x04208FE9E8F7F2D6n,\n    0x5A110C6058B920A0n, 0x0CD9A497658A5698n, 0x56FD23C8F9715A4Cn, 0x284C847B9D887AAEn,\n    0x04FEABFBBDB619CBn, 0x742E1E651C60BA83n, 0x9A9632E65904AD3Cn, 0x881B82A13B51B9E2n,\n    0x506E6744CD974924n, 0xB0183DB56FFC6A79n, 0x0ED9B915C66ED37En, 0x5E11E86D5873D484n,\n    0xF678647E3519AC6En, 0x1B85D488D0F20CC5n, 0xDAB9FE6525D89021n, 0x0D151D86ADB73615n,\n    0xA865A54EDCC0F019n, 0x93C42566AEF98FFBn, 0x99E7AFEABE000731n, 0x48CBFF086DDF285An,\n    0x7F9B6AF1EBF78BAFn, 0x58627E1A149BBA21n, 0x2CD16E2ABD791E33n, 0xD363EFF5F0977996n,\n    0x0CE2A38C344A6EEDn, 0x1A804AADB9CFA741n, 0x907F30421D78C5DEn, 0x501F65EDB3034D07n,\n    0x37624AE5A48FA6E9n, 0x957BAF61700CFF4En, 0x3A6C27934E31188An, 0xD49503536ABCA345n,\n    0x088E049589C432E0n, 0xF943AEE7FEBF21B8n, 0x6C3B8E3E336139D3n, 0x364F6FFA464EE52En,\n    0xD60F6DCEDC314222n, 0x56963B0DCA418FC0n, 0x16F50EDF91E513AFn, 0xEF1955914B609F93n,\n    0x565601C0364E3228n, 0xECB53939887E8175n, 0xBAC7A9A18531294Bn, 0xB344C470397BBA52n,\n    0x65D34954DAF3CEBDn, 0xB4B81B3FA97511E2n, 0xB422061193D6F6A7n, 0x071582401C38434Dn,\n    0x7A13F18BBEDC4FF5n, 0xBC4097B116C524D2n, 0x59B97885E2F2EA28n, 0x99170A5DC3115544n,\n    0x6F423357E7C6A9F9n, 0x325928EE6E6F8794n, 0xD0E4366228B03343n, 0x565C31F7DE89EA27n,\n    0x30F5611484119414n, 0xD873DB391292ED4Fn, 0x7BD94E1D8E17DEBCn, 0xC7D9F16864A76E94n,\n    0x947AE053EE56E63Cn, 0xC8C93882F9475F5Fn, 0x3A9BF55BA91F81CAn, 0xD9A11FBB3D9808E4n,\n    0x0FD22063EDC29FCAn, 0xB3F256D8ACA0B0B9n, 0xB03031A8B4516E84n, 0x35DD37D5871448AFn,\n    0xE9F6082B05542E4En, 0xEBFAFA33D7254B59n, 0x9255ABB50D532280n, 0xB9AB4CE57F2D34F3n,\n    0x693501D628297551n, 0xC62C58F97DD949BFn, 0xCD454F8F19C5126An, 0xBBE83F4ECC2BDECBn,\n    0xDC842B7E2819E230n, 0xBA89142E007503B8n, 0xA3BC941D0A5061CBn, 0xE9F6760E32CD8021n,\n    0x09C7E552BC76492Fn, 0x852F54934DA55CC9n, 0x8107FCCF064FCF56n, 0x098954D51FFF6580n,\n    0x23B70EDB1955C4BFn, 0xC330DE426430F69Dn, 0x4715ED43E8A45C0An, 0xA8D7E4DAB780A08Dn,\n    0x0572B974F03CE0BBn, 0xB57D2E985E1419C7n, 0xE8D9ECBE2CF3D73Fn, 0x2FE4B17170E59750n,\n    0x11317BA87905E790n, 0x7FBF21EC8A1F45ECn, 0x1725CABFCB045B00n, 0x964E915CD5E2B207n,\n    0x3E2B8BCBF016D66Dn, 0xBE7444E39328A0ACn, 0xF85B2B4FBCDE44B7n, 0x49353FEA39BA63B1n,\n    0x1DD01AAFCD53486An, 0x1FCA8A92FD719F85n, 0xFC7C95D827357AFAn, 0x18A6A990C8B35EBDn,\n    0xCCCB7005C6B9C28Dn, 0x3BDBB92C43B17F26n, 0xAA70B5B4F89695A2n, 0xE94C39A54A98307Fn,\n    0xB7A0B174CFF6F36En, 0xD4DBA84729AF48ADn, 0x2E18BC1AD9704A68n, 0x2DE0966DAF2F8B1Cn,\n    0xB9C11D5B1E43A07En, 0x64972D68DEE33360n, 0x94628D38D0C20584n, 0xDBC0D2B6AB90A559n,\n    0xD2733C4335C6A72Fn, 0x7E75D99D94A70F4Dn, 0x6CED1983376FA72Bn, 0x97FCAACBF030BC24n,\n    0x7B77497B32503B12n, 0x8547EDDFB81CCB94n, 0x79999CDFF70902CBn, 0xCFFE1939438E9B24n,\n    0x829626E3892D95D7n, 0x92FAE24291F2B3F1n, 0x63E22C147B9C3403n, 0xC678B6D860284A1Cn,\n    0x5873888850659AE7n, 0x0981DCD296A8736Dn, 0x9F65789A6509A440n, 0x9FF38FED72E9052Fn,\n    0xE479EE5B9930578Cn, 0xE7F28ECD2D49EECDn, 0x56C074A581EA17FEn, 0x5544F7D774B14AEFn,\n    0x7B3F0195FC6F290Fn, 0x12153635B2C0CF57n, 0x7F5126DBBA5E0CA7n, 0x7A76956C3EAFB413n,\n    0x3D5774A11D31AB39n, 0x8A1B083821F40CB4n, 0x7B4A38E32537DF62n, 0x950113646D1D6E03n,\n    0x4DA8979A0041E8A9n, 0x3BC36E078F7515D7n, 0x5D0A12F27AD310D1n, 0x7F9D1A2E1EBE1327n,\n    0xDA3A361B1C5157B1n, 0xDCDD7D20903D0C25n, 0x36833336D068F707n, 0xCE68341F79893389n,\n    0xAB9090168DD05F34n, 0x43954B3252DC25E5n, 0xB438C2B67F98E5E9n, 0x10DCD78E3851A492n,\n    0xDBC27AB5447822BFn, 0x9B3CDB65F82CA382n, 0xB67B7896167B4C84n, 0xBFCED1B0048EAC50n,\n    0xA9119B60369FFEBDn, 0x1FFF7AC80904BF45n, 0xAC12FB171817EEE7n, 0xAF08DA9177DDA93Dn,\n    0x1B0CAB936E65C744n, 0xB559EB1D04E5E932n, 0xC37B45B3F8D6F2BAn, 0xC3A9DC228CAAC9E9n,\n    0xF3B8B6675A6507FFn, 0x9FC477DE4ED681DAn, 0x67378D8ECCEF96CBn, 0x6DD856D94D259236n,\n    0xA319CE15B0B4DB31n, 0x073973751F12DD5En, 0x8A8E849EB32781A5n, 0xE1925C71285279F5n,\n    0x74C04BF1790C0EFEn, 0x4DDA48153C94938An, 0x9D266D6A1CC0542Cn, 0x7440FB816508C4FEn,\n    0x13328503DF48229Fn, 0xD6BF7BAEE43CAC40n, 0x4838D65F6EF6748Fn, 0x1E152328F3318DEAn,\n    0x8F8419A348F296BFn, 0x72C8834A5957B511n, 0xD7A023A73260B45Cn, 0x94EBC8ABCFB56DAEn,\n    0x9FC10D0F989993E0n, 0xDE68A2355B93CAE6n, 0xA44CFE79AE538BBEn, 0x9D1D84FCCE371425n,\n    0x51D2B1AB2DDFB636n, 0x2FD7E4B9E72CD38Cn, 0x65CA5B96B7552210n, 0xDD69A0D8AB3B546Dn,\n    0x604D51B25FBF70E2n, 0x73AA8A564FB7AC9En, 0x1A8C1E992B941148n, 0xAAC40A2703D9BEA0n,\n    0x764DBEAE7FA4F3A6n, 0x1E99B96E70A9BE8Bn, 0x2C5E9DEB57EF4743n, 0x3A938FEE32D29981n,\n    0x26E6DB8FFDF5ADFEn, 0x469356C504EC9F9Dn, 0xC8763C5B08D1908Cn, 0x3F6C6AF859D80055n,\n    0x7F7CC39420A3A545n, 0x9BFB227EBDF4C5CEn, 0x89039D79D6FC5C5Cn, 0x8FE88B57305E2AB6n,\n    0xA09E8C8C35AB96DEn, 0xFA7E393983325753n, 0xD6B6D0ECC617C699n, 0xDFEA21EA9E7557E3n,\n    0xB67C1FA481680AF8n, 0xCA1E3785A9E724E5n, 0x1CFC8BED0D681639n, 0xD18D8549D140CAEAn,\n    0x4ED0FE7E9DC91335n, 0xE4DBF0634473F5D2n, 0x1761F93A44D5AEFEn, 0x53898E4C3910DA55n,\n    0x734DE8181F6EC39An, 0x2680B122BAA28D97n, 0x298AF231C85BAFABn, 0x7983EED3740847D5n,\n    0x66C1A2A1A60CD889n, 0x9E17E49642A3E4C1n, 0xEDB454E7BADC0805n, 0x50B704CAB602C329n,\n    0x4CC317FB9CDDD023n, 0x66B4835D9EAFEA22n, 0x219B97E26FFC81BDn, 0x261E4E4C0A333A9Dn,\n    0x1FE2CCA76517DB90n, 0xD7504DFA8816EDBBn, 0xB9571FA04DC089C8n, 0x1DDC0325259B27DEn,\n    0xCF3F4688801EB9AAn, 0xF4F5D05C10CAB243n, 0x38B6525C21A42B0En, 0x36F60E2BA4FA6800n,\n    0xEB3593803173E0CEn, 0x9C4CD6257C5A3603n, 0xAF0C317D32ADAA8An, 0x258E5A80C7204C4Bn,\n    0x8B889D624D44885Dn, 0xF4D14597E660F855n, 0xD4347F66EC8941C3n, 0xE699ED85B0DFB40Dn,\n    0x2472F6207C2D0484n, 0xC2A1E7B5B459AEB5n, 0xAB4F6451CC1D45ECn, 0x63767572AE3D6174n,\n    0xA59E0BD101731A28n, 0x116D0016CB948F09n, 0x2CF9C8CA052F6E9Fn, 0x0B090A7560A968E3n,\n    0xABEEDDB2DDE06FF1n, 0x58EFC10B06A2068Dn, 0xC6E57A78FBD986E0n, 0x2EAB8CA63CE802D7n,\n    0x14A195640116F336n, 0x7C0828DD624EC390n, 0xD74BBE77E6116AC7n, 0x804456AF10F5FB53n,\n    0xEBE9EA2ADF4321C7n, 0x03219A39EE587A30n, 0x49787FEF17AF9924n, 0xA1E9300CD8520548n,\n    0x5B45E522E4B1B4EFn, 0xB49C3B3995091A36n, 0xD4490AD526F14431n, 0x12A8F216AF9418C2n,\n    0x001F837CC7350524n, 0x1877B51E57A764D5n, 0xA2853B80F17F58EEn, 0x993E1DE72D36D310n,\n    0xB3598080CE64A656n, 0x252F59CF0D9F04BBn, 0xD23C8E176D113600n, 0x1BDA0492E7E4586En,\n    0x21E0BD5026C619BFn, 0x3B097ADAF088F94En, 0x8D14DEDB30BE846En, 0xF95CFFA23AF5F6F4n,\n    0x3871700761B3F743n, 0xCA672B91E9E4FA16n, 0x64C8E531BFF53B55n, 0x241260ED4AD1E87Dn,\n    0x106C09B972D2E822n, 0x7FBA195410E5CA30n, 0x7884D9BC6CB569D8n, 0x0647DFEDCD894A29n,\n    0x63573FF03E224774n, 0x4FC8E9560F91B123n, 0x1DB956E450275779n, 0xB8D91274B9E9D4FBn,\n    0xA2EBEE47E2FBFCE1n, 0xD9F1F30CCD97FB09n, 0xEFED53D75FD64E6Bn, 0x2E6D02C36017F67Fn,\n    0xA9AA4D20DB084E9Bn, 0xB64BE8D8B25396C1n, 0x70CB6AF7C2D5BCF0n, 0x98F076A4F7A2322En,\n    0xBF84470805E69B5Fn, 0x94C3251F06F90CF3n, 0x3E003E616A6591E9n, 0xB925A6CD0421AFF3n,\n    0x61BDD1307C66E300n, 0xBF8D5108E27E0D48n, 0x240AB57A8B888B20n, 0xFC87614BAF287E07n,\n    0xEF02CDD06FFDB432n, 0xA1082C0466DF6C0An, 0x8215E577001332C8n, 0xD39BB9C3A48DB6CFn,\n    0x2738259634305C14n, 0x61CF4F94C97DF93Dn, 0x1B6BACA2AE4E125Bn, 0x758F450C88572E0Bn,\n    0x959F587D507A8359n, 0xB063E962E045F54Dn, 0x60E8ED72C0DFF5D1n, 0x7B64978555326F9Fn,\n    0xFD080D236DA814BAn, 0x8C90FD9B083F4558n, 0x106F72FE81E2C590n, 0x7976033A39F7D952n,\n    0xA4EC0132764CA04Bn, 0x733EA705FAE4FA77n, 0xB4D8F77BC3E56167n, 0x9E21F4F903B33FD9n,\n    0x9D765E419FB69F6Dn, 0xD30C088BA61EA5EFn, 0x5D94337FBFAF7F5Bn, 0x1A4E4822EB4D7A59n,\n    0x6FFE73E81B637FB3n, 0xDDF957BC36D8B9CAn, 0x64D0E29EEA8838B3n, 0x08DD9BDFD96B9F63n,\n    0x087E79E5A57D1D13n, 0xE328E230E3E2B3FBn, 0x1C2559E30F0946BEn, 0x720BF5F26F4D2EAAn,\n    0xB0774D261CC609DBn, 0x443F64EC5A371195n, 0x4112CF68649A260En, 0xD813F2FAB7F5C5CAn,\n    0x660D3257380841EEn, 0x59AC2C7873F910A3n, 0xE846963877671A17n, 0x93B633ABFA3469F8n,\n    0xC0C0F5A60EF4CDCFn, 0xCAF21ECD4377B28Cn, 0x57277707199B8175n, 0x506C11B9D90E8B1Dn,\n    0xD83CC2687A19255Fn, 0x4A29C6465A314CD1n, 0xED2DF21216235097n, 0xB5635C95FF7296E2n,\n    0x22AF003AB672E811n, 0x52E762596BF68235n, 0x9AEBA33AC6ECC6B0n, 0x944F6DE09134DFB6n,\n    0x6C47BEC883A7DE39n, 0x6AD047C430A12104n, 0xA5B1CFDBA0AB4067n, 0x7C45D833AFF07862n,\n    0x5092EF950A16DA0Bn, 0x9338E69C052B8E7Bn, 0x455A4B4CFE30E3F5n, 0x6B02E63195AD0CF8n,\n    0x6B17B224BAD6BF27n, 0xD1E0CCD25BB9C169n, 0xDE0C89A556B9AE70n, 0x50065E535A213CF6n,\n    0x9C1169FA2777B874n, 0x78EDEFD694AF1EEDn, 0x6DC93D9526A50E68n, 0xEE97F453F06791EDn,\n    0x32AB0EDB696703D3n, 0x3A6853C7E70757A7n, 0x31865CED6120F37Dn, 0x67FEF95D92607890n,\n    0x1F2B1D1F15F6DC9Cn, 0xB69E38A8965C6B65n, 0xAA9119FF184CCCF4n, 0xF43C732873F24C13n,\n    0xFB4A3D794A9A80D2n, 0x3550C2321FD6109Cn, 0x371F77E76BB8417En, 0x6BFA9AAE5EC05779n,\n    0xCD04F3FF001A4778n, 0xE3273522064480CAn, 0x9F91508BFFCFC14An, 0x049A7F41061A9E60n,\n    0xFCB6BE43A9F2FE9Bn, 0x08DE8A1C7797DA9Bn, 0x8F9887E6078735A1n, 0xB5B4071DBFC73A66n,\n    0x230E343DFBA08D33n, 0x43ED7F5A0FAE657Dn, 0x3A88A0FBBCB05C63n, 0x21874B8B4D2DBC4Fn,\n    0x1BDEA12E35F6A8C9n, 0x53C065C6C8E63528n, 0xE34A1D250E7A8D6Bn, 0xD6B04D3B7651DD7En,\n    0x5E90277E7CB39E2Dn, 0x2C046F22062DC67Dn, 0xB10BB459132D0A26n, 0x3FA9DDFB67E2F199n,\n    0x0E09B88E1914F7AFn, 0x10E8B35AF3EEAB37n, 0x9EEDECA8E272B933n, 0xD4C718BC4AE8AE5Fn,\n    0x81536D601170FC20n, 0x91B534F885818A06n, 0xEC8177F83F900978n, 0x190E714FADA5156En,\n    0xB592BF39B0364963n, 0x89C350C893AE7DC1n, 0xAC042E70F8B383F2n, 0xB49B52E587A1EE60n,\n    0xFB152FE3FF26DA89n, 0x3E666E6F69AE2C15n, 0x3B544EBE544C19F9n, 0xE805A1E290CF2456n,\n    0x24B33C9D7ED25117n, 0xE74733427B72F0C1n, 0x0A804D18B7097475n, 0x57E3306D881EDB4Fn,\n    0x4AE7D6A36EB5DBCBn, 0x2D8D5432157064C8n, 0xD1E649DE1E7F268Bn, 0x8A328A1CEDFE552Cn,\n    0x07A3AEC79624C7DAn, 0x84547DDC3E203C94n, 0x990A98FD5071D263n, 0x1A4FF12616EEFC89n,\n    0xF6F7FD1431714200n, 0x30C05B1BA332F41Cn, 0x8D2636B81555A786n, 0x46C9FEB55D120902n,\n    0xCCEC0A73B49C9921n, 0x4E9D2827355FC492n, 0x19EBB029435DCB0Fn, 0x4659D2B743848A2Cn,\n    0x963EF2C96B33BE31n, 0x74F85198B05A2E7Dn, 0x5A0F544DD2B1FB18n, 0x03727073C2E134B1n,\n    0xC7F6AA2DE59AEA61n, 0x352787BAA0D7C22Fn, 0x9853EAB63B5E0B35n, 0xABBDCDD7ED5C0860n,\n    0xCF05DAF5AC8D77B0n, 0x49CAD48CEBF4A71En, 0x7A4C10EC2158C4A6n, 0xD9E92AA246BF719En,\n    0x13AE978D09FE5557n, 0x730499AF921549FFn, 0x4E4B705B92903BA4n, 0xFF577222C14F0A3An,\n    0x55B6344CF97AAFAEn, 0xB862225B055B6960n, 0xCAC09AFBDDD2CDB4n, 0xDAF8E9829FE96B5Fn,\n    0xB5FDFC5D3132C498n, 0x310CB380DB6F7503n, 0xE87FBB46217A360En, 0x2102AE466EBB1148n,\n    0xF8549E1A3AA5E00Dn, 0x07A69AFDCC42261An, 0xC4C118BFE78FEAAEn, 0xF9F4892ED96BD438n,\n    0x1AF3DBE25D8F45DAn, 0xF5B4B0B0D2DEEEB4n, 0x962ACEEFA82E1C84n, 0x046E3ECAAF453CE9n,\n    0xF05D129681949A4Cn, 0x964781CE734B3C84n, 0x9C2ED44081CE5FBDn, 0x522E23F3925E319En,\n    0x177E00F9FC32F791n, 0x2BC60A63A6F3B3F2n, 0x222BBFAE61725606n, 0x486289DDCC3D6780n,\n    0x7DC7785B8EFDFC80n, 0x8AF38731C02BA980n, 0x1FAB64EA29A2DDF7n, 0xE4D9429322CD065An,\n    0x9DA058C67844F20Cn, 0x24C0E332B70019B0n, 0x233003B5A6CFE6ADn, 0xD586BD01C5C217F6n,\n    0x5E5637885F29BC2Bn, 0x7EBA726D8C94094Bn, 0x0A56A5F0BFE39272n, 0xD79476A84EE20D06n,\n    0x9E4C1269BAA4BF37n, 0x17EFEE45B0DEE640n, 0x1D95B0A5FCF90BC6n, 0x93CBE0B699C2585Dn,\n    0x65FA4F227A2B6D79n, 0xD5F9E858292504D5n, 0xC2B5A03F71471A6Fn, 0x59300222B4561E00n,\n    0xCE2F8642CA0712DCn, 0x7CA9723FBB2E8988n, 0x2785338347F2BA08n, 0xC61BB3A141E50E8Cn,\n    0x150F361DAB9DEC26n, 0x9F6A419D382595F4n, 0x64A53DC924FE7AC9n, 0x142DE49FFF7A7C3Dn,\n    0x0C335248857FA9E7n, 0x0A9C32D5EAE45305n, 0xE6C42178C4BBB92En, 0x71F1CE2490D20B07n,\n    0xF1BCC3D275AFE51An, 0xE728E8C83C334074n, 0x96FBF83A12884624n, 0x81A1549FD6573DA5n,\n    0x5FA7867CAF35E149n, 0x56986E2EF3ED091Bn, 0x917F1DD5F8886C61n, 0xD20D8C88C8FFE65Fn,\n    0x31D71DCE64B2C310n, 0xF165B587DF898190n, 0xA57E6339DD2CF3A0n, 0x1EF6E6DBB1961EC9n,\n    0x70CC73D90BC26E24n, 0xE21A6B35DF0C3AD7n, 0x003A93D8B2806962n, 0x1C99DED33CB890A1n,\n    0xCF3145DE0ADD4289n, 0xD0E4427A5514FB72n, 0x77C621CC9FB3A483n, 0x67A34DAC4356550Bn,\n    0xF8D626AAAF278509n\n]\n//\n// Global vars\n//\n\nexport class KeyGenerator {\n\n    constructor() {\n        // noinspection JSUnusedGlobalSymbols\n        this.bail_out = false\n        this.en_passant_row = -1\n        this.en_passant_column = -1\n        this.can_take_ep = false\n    }\n\n//\n// Utility function to convert BigInt values to hex string of fixed size\n//\n    // noinspection JSUnusedGlobalSymbols\n    bn2hex(bn, the_size) {\n        let hex = bn.toString()\n        while (hex.length < the_size) {\n            hex = \"0\" + hex\n        }\n        return \"0x\" + hex\n    }\n\n//\n// XOR current hash value with specified random value from the table above\n//\n    xor_with_random(weed, num) {\n        return weed ^ random64[num]\n    }\n\n//\n// Parse en-passant part from FEN string and set (global) vars accordingly\n//\n    parse_en_passant(str) {\n        if (!str || str === \"-\") {\n            return\n        }\n        if (str.length !== 2) {\n            this.bail_out = true\n            return\n        }\n        const col = str.charCodeAt(0) - 97\t// asc('a') == 97\n        const row = str.charCodeAt(1) - 49\t// asc('1') == 49\n        if ((col < 0) || (col > 7) || (row < 0) || (row > 7)) {\n            this.bail_out = true\n            return\n        }\n        this.en_passant_column = col\n        this.en_passant_row = row\n    }\n\n//\n// Include side to move in hash.\n//\n// Note: NOP for black to move\n//\n    hash_color_to_move(arr, str) {\n        if (str === \"w\") {\n            return this.xor_with_random(arr, 780)\n        } else if (str !== \"b\") {\n            this.bail_out = true\n        }\n        return arr\n    }\n\n//\n// Include castling rights in hash.\n//\n    hash_castle(weed, str) {\n        if (str === \"-\") {\n            //\n            // NOP if no more castling rights\n            //\n            return weed\n        }\n        if (str.search(\"K\") !== -1) {\n            weed = this.xor_with_random(weed, 768)\n        }\n        if (str.search(\"Q\") !== -1) {\n            weed = this.xor_with_random(weed, 769)\n        }\n        if (str.search(\"k\") !== -1) {\n            weed = this.xor_with_random(weed, 770)\n        }\n        if (str.search(\"q\") !== -1) {\n            weed = this.xor_with_random(weed, 771)\n        }\n        return weed\n    }\n\n//\n// Compute hash based on location of pieces on the board\n//\n// weed = initial hash value (BigInt to hold 64-bit integers)\n// str = first part of FEN string (containing location of pieces)\n//\n    hash_pieces(weed, str) {\n        const rows = str.split(\"/\")\n        if (rows.length !== 8) {\n            this.bail_out = true\n            return weed\n        }\n        for (let i = 0; i < 8; i++) {\n            let col = 0\n            const row = 7 - i\n            for (let j = 0; j < rows[i].length; j++) {\n                switch (rows[i][j]) {\n                    //\n                    // Check for possible en-passant captures\n                    //\n                    case \"p\":\n                        weed = this.xor_with_random(weed, 8 * row + col)\n                        if ((this.en_passant_row === 2) && (row === 3) && (this.en_passant_column > 0) && (col === this.en_passant_column - 1))\n                            this.can_take_ep = true\n                        if ((this.en_passant_row === 2) && (row === 3) && (this.en_passant_column < 7) && (col === this.en_passant_column + 1))\n                            this.can_take_ep = true\n                        col++\n                        break\n                    case \"P\":\n                        weed = this.xor_with_random(weed, 64 + 8 * row + col)\n                        if ((this.en_passant_row === 5) && (row === 4) && (this.en_passant_column > 0) && (col === this.en_passant_column - 1))\n                            this.can_take_ep = true\n                        if ((this.en_passant_row === 5) && (row === 4) && (this.en_passant_column < 7) && (col === this.en_passant_column + 1))\n                            this.can_take_ep = true\n                        col++\n                        break\n                    case \"n\":\n                        weed = this.xor_with_random(weed, 64 * 2 + 8 * row + col)\n                        col++\n                        break\n                    case \"N\":\n                        weed = this.xor_with_random(weed, 64 * 3 + 8 * row + col)\n                        col++\n                        break\n                    case \"b\":\n                        weed = this.xor_with_random(weed, 64 * 4 + 8 * row + col)\n                        col++\n                        break\n                    case \"B\":\n                        weed = this.xor_with_random(weed, 64 * 5 + 8 * row + col)\n                        col++\n                        break\n                    case \"r\":\n                        weed = this.xor_with_random(weed, 64 * 6 + 8 * row + col)\n                        col++\n                        break\n                    case \"R\":\n                        weed = this.xor_with_random(weed, 64 * 7 + 8 * row + col)\n                        col++\n                        break\n                    case \"q\":\n                        weed = this.xor_with_random(weed, 64 * 8 + 8 * row + col)\n                        col++\n                        break\n                    case \"Q\":\n                        weed = this.xor_with_random(weed, 64 * 9 + 8 * row + col)\n                        col++\n                        break\n                    case \"k\":\n                        weed = this.xor_with_random(weed, 64 * 10 + 8 * row + col)\n                        col++\n                        break\n                    case \"K\":\n                        weed = this.xor_with_random(weed, 64 * 11 + 8 * row + col)\n                        col++\n                        break\n                    case \"0\":\n                    case \"1\":\n                    case \"2\":\n                    case \"3\":\n                    case \"4\":\n                    case \"5\":\n                    case \"6\":\n                    case \"7\":\n                    case \"8\":\n                        const r = rows[i].charCodeAt(j) - 48\t// asc('0') == 48\n                        col += r\n                        break\n                    default:\n                        this.bail_out = true\n                        return weed\n                }\n            }\n            if (col !== 8)\n                this.bail_out = true\n        }\n        return weed\n    }\n\n//\n// Generate hash based on FEN string\n//\n    compute_fen_hash(fenstring) {\n        this.en_passant_row = -1\n        this.en_passant_column = -1\n        this.can_take_ep = false\n\n        let hash = 0n\n        const fen = fenstring.trim().split(\" \")\n        if (fen.length !== 6) {\n            return null\n        }\n        this.parse_en_passant(fen[3]) \t// will set global en-passant variables\n        hash = this.hash_pieces(hash, fen[0])\n        if (this.can_take_ep) {\n            hash = this.xor_with_random(hash, 772 + this.en_passant_column)\n        }\n        hash = this.hash_color_to_move(hash, fen[1])\n        hash = this.hash_castle(hash, fen[2])\n        return hash\n    }\n\n}", "/**\n * Author: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-polyglot\n * License: MIT, see file \"LINCENSE\"\n *\n * An ES6 wrapper for the ployglot part of https://github.com/evilwan/stakelbase\n */\n\nimport {Book} from \"../lib/stakelbase/Book.js\"\nimport {KeyGenerator} from \"../lib/stakelbase/KeyGenerator.js\"\n\nexport class Polyglot {\n\n    constructor(url) {\n        // const bookEntry = new BookEntry()\n        this.book = null\n        this.initialisation = new Promise((resolve) => {\n            /** @var book Book */\n            this.fetchBook(url).then((book) => {\n                this.book = book\n                resolve()\n            })\n        })\n        this.keyGenerator = new KeyGenerator()\n    }\n\n    /**\n        @returns move { from: 'h7', to:'h8', promotion: 'q' }\n     */\n    entryToMove(bookEntry) {\n        const move = {\n            from: undefined,\n            to: undefined,\n            promotion: undefined\n        }\n        const files = \"abcdefgh\"\n        const promoPieces = \" nbrq\"\n\n        move.from = files[bookEntry.get_from_col()]\n        move.from = \"\" + move.from + (bookEntry.get_from_row() + 1)\n        move.to = files[bookEntry.get_to_col()]\n        move.to = \"\" + move.to + (bookEntry.get_to_row() + 1)\n\n        if (bookEntry.get_promo_piece() > 0) {\n            move.promotion = promoPieces[bookEntry.get_promo_piece()]\n        }\n        // special castling moves notation in polyglot, see http://hgm.nubati.net/book_format.html\n        if(bookEntry.isOOW()) {\n            move.to = \"g1\"\n        } else if(bookEntry.isOOOW()) {\n            move.to = \"c1\"\n        } else if(bookEntry.isOOB()) {\n            move.to = \"g8\"\n        } else if(bookEntry.isOOOB()) {\n            move.to = \"c8\"\n        }\n        move.weight = bookEntry.weight\n        return move\n    }\n\n    async getMovesFromFen(fen, weightPower = 0.2) {\n        return new Promise((resolve) => {\n            this.initialisation.then(() => {\n                const hash = this.keyGenerator.compute_fen_hash(fen)\n                const bookEntries = this.book.get_all_moves(hash)\n                const moves = []\n                let weightSum = 0\n                for (const bookEntry of bookEntries) {\n                    moves.push(this.entryToMove(bookEntry))\n                    weightSum += bookEntry.weight\n                }\n                // calculate probability  http://hgm.nubati.net/book_format.html\n                for (const move of moves) {\n                    move.probability = Math.pow(move.weight / weightSum, weightPower)\n                        .toFixed(1)\n                }\n                resolve(moves)\n            })\n        })\n    }\n\n    fetchBook(url) {\n        return new Promise((resolve, reject) => {\n            fetch(url).then((response) => {\n                response.blob().then((blob) => {\n                    let reader = new FileReader()\n                    reader.readAsBinaryString(blob)\n                    reader.onload = () => {\n                        resolve(new Book(reader.result))\n                    }\n                    reader.onerror = () => {\n                        reject(reader.error)\n                    }\n                })\n            })\n        })\n    }\n\n}\n\n", "/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-engine-runner\n * License: MIT, see file 'LICENSE'\n */\nimport {ENGINE_STATE, EngineRunner} from \"./EngineRunner.js\"\nimport {Polyglot} from \"cm-polyglot/src/Polyglot.js\"\n\nexport class PolyglotRunner extends EngineRunner {\n\n    constructor(props) {\n        super(props)\n    }\n\n    init() {\n        this.polyglot = new Polyglot(this.props.bookUrl)\n        this.polyglot.initialisation.then(() => {\n            this.engineState = ENGINE_STATE.READY\n            return Promise.resolve()\n        })\n    }\n\n    calculateMove(fen, props = {}) {\n        this.engineState = ENGINE_STATE.THINKING\n        const timeoutPromise = new Promise((resolve) => {\n            setTimeout(async () => {\n                resolve()\n            }, this.props.responseDelay)\n        })\n        const calculationPromise = new Promise(async (resolve) => {\n            const moves = await this.polyglot.getMovesFromFen(fen)\n            if(this.props.debug) {\n                console.log(fen, \"moves found in opening book\", moves)\n            }\n            // handle probability\n            const propabilityMatrix = []\n            for (const move of moves) {\n                for (let i = 0; i < (move.probability * 10); i++) {\n                    propabilityMatrix.push(move)\n                }\n            }\n            // probability weighted random\n            const luckyIndex = Math.floor(Math.random() * propabilityMatrix.length)\n            resolve(propabilityMatrix[luckyIndex])\n        })\n        return new Promise((resolve) => {\n            Promise.all([this.initialized, timeoutPromise, calculationPromise]).then((values) => {\n                this.engineState = ENGINE_STATE.READY\n                resolve(values[2])\n            })\n        })\n    }\n\n}\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\n\r\nimport {ChessConsolePlayer} from \"chess-console/src/ChessConsolePlayer.js\"\r\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\r\nimport {CONSOLE_MESSAGE_TOPICS} from \"chess-console/src/ChessConsole.js\"\r\nimport {PolyglotRunner} from \"cm-engine-runner/src/PolyglotRunner.js\"\r\nimport {ENGINE_STATE} from \"cm-engine-runner/src/EngineRunner.js\"\r\nimport {StockfishRunner} from \"cm-engine-runner/src/StockfishRunner.js\"\r\n\r\nexport class StockfishPlayer extends ChessConsolePlayer {\r\n\r\n    constructor(chessConsole, name, props) {\r\n        super(chessConsole, name)\r\n        this.props = {\r\n            debug: false\r\n        }\r\n        Object.assign(this.props, props)\r\n        this.engineRunner = new StockfishRunner({workerUrl: props.worker, debug: props.debug })\r\n        this.openingRunner = props.book ? new PolyglotRunner({bookUrl: props.book }) : this.engineRunner\r\n        this.state = {\r\n            scoreHistory: {},\r\n            score: null,\r\n            level: props.level,\r\n            engineState: ENGINE_STATE.LOADING,\r\n            currentRunner: this.openingRunner\r\n        }\r\n        this.initialisation = Promise.all([this.openingRunner.initialization, this.engineRunner.initialization])\r\n        this.initialisation.then(() => {\r\n            this.state.engineState = ENGINE_STATE.LOADED\r\n        })\r\n\r\n        this.i18n = chessConsole.i18n\r\n        this.i18n.load({\r\n            de: {\r\n                score: \"Bewertung\",\r\n                level: \"Stufe\"\r\n            },\r\n            en: {\r\n                score: \"Score\",\r\n                level: \"Level\"\r\n            }\r\n        })\r\n\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.load, () => {\r\n            if (this.chessConsole.persistence.loadValue(\"level\")) {\r\n                this.state.level = parseInt(this.chessConsole.persistence.loadValue(\"level\"), 10)\r\n            }\r\n            if (this.chessConsole.persistence.loadValue(\"scoreHistory\")) {\r\n                this.state.scoreHistory = this.chessConsole.persistence.loadValue(\"scoreHistory\")\r\n                let score = this.state.scoreHistory[this.chessConsole.state.plyViewed]\r\n                if (!score && this.chessConsole.state.plyViewed > 0) {\r\n                    score = this.state.scoreHistory[this.chessConsole.state.plyViewed - 1]\r\n                }\r\n                this.state.score = score\r\n            }\r\n        })\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.moveUndone, () => {\r\n            this.state.currentRunner = this.openingRunner\r\n        })\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.newGame, () => {\r\n            this.state.scoreHistory = {}\r\n            this.state.score = 0\r\n        })\r\n        this.chessConsole.messageBroker.subscribe(CONSOLE_MESSAGE_TOPICS.initGame, (data) => {\r\n            if (data.props.engineLevel) {\r\n                this.state.level = data.props.engineLevel\r\n            }\r\n            this.state.currentRunner = this.openingRunner\r\n        })\r\n        Observe.property(this.state, \"level\", () => {\r\n            this.chessConsole.persistence.saveValue(\"level\", this.state.level)\r\n        })\r\n        Observe.property(this.state, \"score\", () => {\r\n            this.chessConsole.persistence.saveValue(\"score\", this.state.score)\r\n            this.chessConsole.persistence.saveValue(\"scoreHistory\", this.state.scoreHistory)\r\n        })\r\n    }\r\n\r\n    moveRequest(fen, moveResponse) {\r\n        if (this.props.debug) {\r\n            console.log(\"moveRequest\", fen)\r\n        }\r\n        this.initialisation.then(async () => {\r\n            this.state.engineState = ENGINE_STATE.THINKING\r\n            if(this.state.level < 3) {\r\n                this.state.currentRunner = this.engineRunner // No book for Level 1 and 2\r\n            }\r\n            let nextMove = await this.state.currentRunner.calculateMove(fen, {level: this.state.level })\r\n            if (!nextMove) {\r\n                if (this.props.debug) {\r\n                    console.log(\"no move found with\", this.state.currentRunner.constructor.name)\r\n                }\r\n                if (this.state.currentRunner === this.openingRunner) {\r\n                    this.state.currentRunner = this.engineRunner\r\n                    this.moveRequest(fen, moveResponse)\r\n                } else {\r\n                    throw new Error(\"can't find move with fen \" + fen + \" and runner \" + this.state.currentRunner)\r\n                }\r\n            } else {\r\n                if (this.props.debug) {\r\n                    console.log(\"this.state.currentRunner\", this.state.currentRunner)\r\n                    console.log(\"nextMove\", nextMove, this.state.currentRunner.constructor.name)\r\n                }\r\n                let newScore = undefined\r\n                if (nextMove.score !== undefined) {\r\n                    if(!isNaN(nextMove.score)) {\r\n                        // newScore = this.chessConsole.props.playerColor === COLOR.white ? -nextMove.score : nextMove.score\r\n                        newScore = -nextMove.score\r\n                    } else {\r\n                        newScore = nextMove.score\r\n                    }\r\n                    this.state.scoreHistory[this.chessConsole.state.chess.plyCount()] = newScore\r\n                    this.state.score = newScore\r\n                } else {\r\n                    this.state.score = undefined\r\n                }\r\n                this.state.engineState = ENGINE_STATE.READY\r\n                moveResponse(nextMove)\r\n            }\r\n        })\r\n    }\r\n}\r\n", "/**\r\n * Author and copyright: Stefan Haack (https://shaack.com)\r\n * Repository: https://github.com/shaack/chess-console-stockfish\r\n * License: MIT, see file 'LICENSE'\r\n */\r\nimport {Observe} from \"cm-web-modules/src/observe/Observe.js\"\r\nimport {UiComponent} from \"cm-web-modules/src/app/Component.js\"\r\nimport {ENGINE_STATE} from \"cm-engine-runner/src/EngineRunner.js\"\r\n\r\nexport class StockfishStateView extends UiComponent {\r\n\r\n    /**\r\n     * @param chessConsole\r\n     * @param player\r\n     * @param props // { spinnerIcon: spinner }\r\n     */\r\n    constructor(chessConsole, player, props = {}) {\r\n        super(undefined, props)\r\n        this.chessConsole = chessConsole\r\n        this.player = player\r\n        const i18n = chessConsole.i18n\r\n        if (!this.props.spinnerIcon) {\r\n            this.props.spinnerIcon = \"spinner\"\r\n        }\r\n        this.numberFormat = new Intl.NumberFormat(i18n.locale, {\r\n            minimumFractionDigits: 1,\r\n            maximumFractionDigits: 1\r\n        })\r\n        this.element = this.chessConsole.context.querySelector(\".engine-state\")\r\n        this.element.innerHTML = `<span class=\"score text-muted\"></span> <span class=\"thinking text-muted\"><i class=\"fas fa-${this.props.spinnerIcon} fa-spin\"></i></span>`\r\n        this.scoreElement = this.element.querySelector(\".score\")\r\n        this.thinkingElement = this.element.querySelector(\".thinking\")\r\n        this.thinkingElement.style.display = 'none'\r\n        Observe.property(player.state, \"level\", () => {\r\n            this.updatePlayerName()\r\n        })\r\n        Observe.property(player.state, \"engineState\", () => {\r\n            // console.log(\"engineState\", player.state.engineState)\r\n            if (player.state.engineState === ENGINE_STATE.THINKING) {\r\n                this.thinkingElement.style.display = ''\r\n            } else {\r\n                this.thinkingElement.style.display = 'none'\r\n            }\r\n        })\r\n        Observe.property(player.state, \"score\", (event) => {\r\n            const newScore = event.newValue\r\n            if (newScore) {\r\n                let scoreFormatted\r\n                if (isNaN(newScore)) {\r\n                    scoreFormatted = newScore\r\n                } else {\r\n                    scoreFormatted = this.numberFormat.format(newScore)\r\n                }\r\n                this.scoreElement.innerHTML = `${i18n.t(\"score\")} ${scoreFormatted}`\r\n            } else {\r\n                this.scoreElement.innerHTML = ``\r\n            }\r\n        })\r\n        Observe.property(this.chessConsole.state, \"plyViewed\", () => {\r\n            let score = player.state.scoreHistory[this.chessConsole.state.plyViewed]\r\n            if (!score && this.chessConsole.state.plyViewed > 0) {\r\n                score = player.state.scoreHistory[this.chessConsole.state.plyViewed - 1]\r\n            }\r\n            if (score) {\r\n                let scoreFormatted\r\n                if (isNaN(score)) {\r\n                    scoreFormatted = score\r\n                } else {\r\n                    scoreFormatted = this.numberFormat.format(score)\r\n                }\r\n                this.scoreElement.innerHTML = `${i18n.t(\"score\")} ${scoreFormatted}`\r\n            } else {\r\n                this.scoreElement.innerHTML = ''\r\n            }\r\n        })\r\n        this.updatePlayerName()\r\n    }\r\n\r\n    updatePlayerName() {\r\n        this.player.name = `Stockfish ${this.chessConsole.i18n.t(\"level\")} ${this.player.state.level}`\r\n    }\r\n}\r\n"],
  "mappings": "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BAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB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",
  "names": ["TAGS", "Header", "headerString", "rows", "tag", "rendered", "peg$subclass", "child", "parent", "ctor", "peg$SyntaxError", "message", "expected", "found", "location", "DESCRIBE_EXPECTATION_FNS", "expectation", "literalEscape", "escapedParts", "i", "classEscape", "hex", "ch", "s", "describeExpectation", "describeExpected", "descriptions", "j", "describeFound", "peg$parse", "input", "options", "peg$FAILED", "peg$startRuleFunctions", "peg$parsepgn", "peg$startRuleFunction", "peg$c0", "pw", "all", "arr", "peg$c1", "pb", "peg$c2", "peg$c3", "peg$c4", "peg$c5", "cm", "mn", "cb", "hm", "nag", "ca", "vari", "move", "peg$c6", "me", "peg$c7", "peg$c8", "peg$literalExpectation", "peg$c9", "peg$c10", "peg$c11", "peg$c12", "peg$c13", "peg$c14", "peg$c15", "peg$c16", "peg$c17", "peg$c18", "peg$c19", "peg$c20", "peg$c21", "peg$c22", "peg$c23", "peg$c24", "peg$c25", "peg$c26", "peg$classExpectation", "peg$c27", "peg$c28", "peg$c29", "peg$c30", "peg$c31", "peg$c32", "peg$c33", "peg$c34", "peg$c35", "peg$c36", "peg$c37", "peg$c38", "peg$c39", "peg$c40", "num", "peg$c41", "peg$otherExpectation", "peg$c42", "peg$c43", "peg$c44", "digits", "makeInteger", "peg$c45", "peg$c46", "peg$c47", "peg$c48", "fig", "disc", "str", "col", "row", "pr", "peg$c49", "cols", "rows", "peg$c50", "peg$c51", "peg$c52", "peg$c53", "peg$c54", "peg$c55", "peg$c56", "peg$c57", "peg$c58", "peg$c59", "peg$c60", "peg$c61", "peg$c62", "peg$c63", "peg$c64", "peg$c65", "peg$c66", "peg$c67", "peg$c68", "f", "peg$c69", "nags", "peg$c70", "peg$c71", "peg$c72", "peg$c73", "peg$c74", "peg$c75", "peg$c76", "peg$c77", "peg$c78", "peg$c79", "peg$c80", "peg$c81", "peg$c82", "peg$c83", "peg$c84", "peg$c85", "peg$c86", "peg$c87", "peg$c88", "peg$c89", "peg$c90", "peg$c91", "peg$c92", "peg$c93", "peg$c94", "peg$c95", "peg$c96", "peg$c97", "peg$c98", "peg$c99", "peg$c100", "peg$c101", "peg$c102", "peg$c103", "peg$c104", "peg$c105", "peg$c106", "peg$c107", "peg$c108", "peg$c109", "peg$c110", "peg$c111", "peg$c112", "peg$c113", "peg$c114", "peg$c115", "peg$c116", "peg$c117", "peg$c118", "peg$c119", "peg$c120", "peg$c121", "peg$c122", "peg$c123", "peg$c124", "peg$c125", "peg$c126", "peg$c127", "peg$c128", "peg$c129", "peg$c130", "peg$c131", "peg$c132", "peg$c133", "peg$c134", "peg$c135", "peg$c136", "peg$c137", "peg$c138", "peg$c139", "peg$c140", "peg$c141", "peg$c142", "peg$c143", "peg$c144", "peg$c145", "peg$c146", "peg$c147", "peg$c148", "peg$c149", "peg$currPos", "peg$savedPos", "peg$posDetailsCache", "peg$maxFailPos", "peg$maxFailExpected", "peg$silentFails", "peg$result", "text", "peg$computeLocation", "description", "peg$buildStructuredError", "error", "peg$buildSimpleError", "ignoreCase", "parts", "inverted", "peg$anyExpectation", "peg$endExpectation", "peg$computePosDetails", "pos", "details", "startPos", "endPos", "startPosDetails", "endPosDetails", "peg$fail", "s0", "s1", "s2", "peg$parsepgnStartWhite", "peg$parsepgnBlack", "peg$parsepgnStartBlack", "peg$parsepgnWhite", "peg$parsewhiteSpace", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s10", "s11", "s12", "s13", "s14", "s15", "peg$parsecomment", "peg$parsemoveNumber", "peg$parsehalfMove", "peg$parsenags", "peg$parsevariationWhite", "peg$parseendGame", "peg$parsemoveEllipse", "peg$parsevariationBlack", "peg$parsecl", "peg$parsecr", "peg$parsepl", "peg$parsepr", "peg$parseinteger", "peg$parsefigure", "peg$parsecheckdisc", "peg$parsediscriminator", "peg$parsestrike", "peg$parsecolumn", "peg$parserow", "peg$parsepromotion", "peg$parsecheck", "peg$parsestrikeOrDash", "peg$parsenag", "o", "pgnParser", "history", "SYMBOLS", "DEFAULT_POSITION", "TERMINATION_MARKERS", "PAWN_OFFSETS", "PIECE_OFFSETS", "ATTACKS", "RAYS", "SHIFTS", "BITS", "RANK_1", "RANK_2", "RANK_7", "RANK_8", "SQUARE_MAP", "ROOKS", "BITS", "PARSER_STRICT", "PARSER_SLOPPY", "get_disambiguator", "move", "moves", "from", "to", "piece", "ambiguities", "same_rank", "same_file", "i", "len", "ambig_from", "ambig_to", "ambig_piece", "rank", "file", "algebraic", "infer_piece_type", "san", "piece_type", "matches", "PAWN", "KING", "stripped_san", "f", "r", "swap_color", "WHITE", "BLACK", "is_digit", "clone", "obj", "dupe", "property", "trim", "str", "EMPTY", "KNIGHT", "BISHOP", "ROOK", "QUEEN", "SQUARES", "keys", "FLAGS", "Chess", "fen", "board", "kings", "turn", "castling", "ep_square", "half_moves", "move_number", "history", "header", "comments", "load", "DEFAULT_POSITION", "clear", "keep_headers", "update_setup", "generate_fen", "prune_comments", "reversed_history", "current_comments", "copy_comment", "undo_move", "make_move", "reset", "tokens", "position", "square", "validate_fen", "color", "put", "errors", "rows", "sum_fields", "previous_was_number", "k", "empty", "cflags", "epflags", "set_header", "args", "get", "SYMBOLS", "sq", "remove", "build_move", "flags", "promotion", "generate_moves", "options", "add_move", "RANK_1", "pieces", "us", "them", "second_rank", "RANK_2", "first_sq", "last_sq", "single_square", "legal", "PAWN_OFFSETS", "j", "PIECE_OFFSETS", "offset", "castling_from", "castling_to", "attacked", "legal_moves", "king_attacked", "move_to_san", "output", "disambiguator", "in_check", "in_checkmate", "difference", "index", "ATTACKS", "SHIFTS", "RAYS", "blocked", "in_stalemate", "insufficient_material", "bishops", "num_pieces", "sq_color", "sum", "in_threefold_repetition", "positions", "repetition", "push", "old", "move_from_san", "sloppy", "clean_move", "parser", "overly_disambiguated", "make_pretty", "ugly_move", "flag", "perft", "depth", "nodes", "child_nodes", "ugly_moves", "row", "newline", "max_width", "result", "header_exists", "append_comment", "move_string", "comment", "delimiter", "prefix", "strip", "wrap_comment", "width", "token", "current_width", "pgn", "mask", "parse_pgn_header", "newline_char", "header_obj", "headers", "key", "value", "regex", "header_regex", "header_string", "to_hex", "string", "c", "from_hex", "encode_comment", "decode_comment", "ms", "match", "bracket", "semicolon", "rav_regex", "half_move", "TERMINATION_MARKERS", "move_obj", "pretty_move", "s", "symbol", "sq_0x88", "move_history", "verbose", "IllegalMoveException", "fen", "notation", "History", "historyString", "setUpFen", "sloppy", "parsedMoves", "pgnParser", "parent", "ply", "chess", "Chess", "moves", "previousMove", "parsedMove", "move", "parsedVariations", "lastFen", "parsedVariation", "pointer", "previous", "historyToMove", "moveInHistory", "renderComments", "renderNags", "renderVariation", "variation", "needReminder", "result", "ret", "Pgn", "pgnString", "props", "lastHeaderElement", "headerString", "historyString", "sloppy", "Header", "TAGS", "History", "str", "maxLength", "words", "lines", "line", "i", "word", "renderHeader", "renderComments", "renderNags", "header", "history", "PIECES", "COLOR", "FEN", "EVENT_TYPE", "publishEvent", "observers", "event", "observer", "Chess", "fenOrProps", "move", "TAGS", "fen", "chess", "Pgn", "pgn", "previousMove", "sloppy", "moveResult", "options", "renderHeader", "renderComments", "renderNags", "type", "color", "chessJs", "result", "i", "square", "SQUARES", "piece", "factor", "index", "element", "plyNumber", "callback", "FEN", "Position", "_Position", "fen", "parts", "part", "row", "str", "numSpaces", "ret", "i", "c", "char", "piece", "spaceCounter", "color", "name", "sortBy", "pieces", "sort", "a", "b", "squareFrom", "squareTo", "square", "coordinates", "index", "file", "rank", "cloned", "ChessboardState", "Position", "name", "data", "extensionPoints", "dataCloned", "returnValue", "extensionPoint", "SVG_NAMESPACE", "Svg", "containerElement", "svg", "parent", "name", "attributes", "element", "attribute", "value", "EXTENSION_POINT", "Extension", "chessboard", "name", "callback", "args", "Utils", "_Utils", "element", "eventName", "selector", "handler", "eventListener", "event", "target", "source", "isObject", "obj", "key", "html", "template", "resolve", "reject", "promise", "_resolve", "_reject", "url", "ANIMATION_EVENT_TYPE", "PromiseQueue", "promise", "resolve", "reject", "entry", "value", "err", "CHANGE_TYPE", "PositionsAnimation", "_PositionsAnimation", "view", "fromPosition", "toPosition", "duration", "callback", "Utils", "EXTENSION_POINT", "fromSquares", "toSquares", "appearedList", "disappearedList", "changes", "i", "previousSquare", "newSquare", "appeared", "shortestDistance", "foundMoved", "disappeared", "moveDistance", "animatedElements", "change", "animatedItem", "Position", "time", "timeDiff", "Svg", "t", "progress", "transform", "index1", "index2", "file1", "rank1", "file2", "rank2", "PositionAnimationsQueue", "chessboard", "positionFrom", "positionTo", "animated", "position", "color", "emptyPosition", "FEN", "MOVE_INPUT_STATE", "MOVE_CANCELED_REASON", "DRAG_THRESHOLD", "VisualMoveInput", "view", "square", "result", "Utils", "fromSquare", "toSquare", "reason", "newState", "params", "prevState", "Svg", "hiddenPieces", "i", "pieceName", "spriteUrl", "piece", "scaling", "transformScale", "x", "y", "e", "color", "point", "pieceColor", "startPieceName", "startPieceColor", "pageX", "pageY", "clientX", "clientY", "target", "moveStartSquare", "ChessboardView", "chessboard", "VisualMoveInput", "e", "Svg", "wrapperId", "url", "wrapper", "xhr", "cssClass", "piecesTileSize", "BORDER_TYPE", "EXTENSION_POINT", "innerPos", "i", "index", "COLOR", "fieldClass", "point", "Position", "squareRect", "inline", "file", "x", "y", "textElement", "rank", "squares", "childNodes", "isDragging", "pieceName", "square", "childNode", "parentGroup", "pieceGroup", "transform", "spriteUrl", "pieceUse", "transformScale", "hidden", "transformTranslate", "visible", "piece", "eventHandler", "color", "data", "INPUT_EVENT_TYPE", "squareFrom", "squareTo", "reason", "legalMove", "Utils", "COLOR", "INPUT_EVENT_TYPE", "BORDER_TYPE", "PIECE", "PIECES_FILE_TYPE", "Chessboard", "context", "props", "FEN", "COLOR", "BORDER_TYPE", "PIECES_FILE_TYPE", "Utils", "ChessboardState", "ChessboardView", "PositionAnimationsQueue", "extensionData", "Position", "EXTENSION_POINT", "square", "piece", "animated", "positionFrom", "squareFrom", "squareTo", "fen", "positionTo", "color", "position", "eventHandler", "extensionClass", "extension", "I18n", "props", "htmlLang", "dictionary", "fetchPromises", "lang", "translations", "resolve", "res", "json", "err", "code", "values", "translation", "i", "value", "MessageBroker", "topic", "callback", "message", "topicName", "topicSubscriber", "object", "async", "breadcrumbArray", "wildcardTopic", "topicPart", "DomUtils", "callback", "element", "rect", "context", "inputs", "values", "input", "src", "name", "value", "html", "template", "newChild", "refChild", "eventName", "selector", "handler", "eventListener", "event", "target", "links", "i", "Component", "props", "state", "UiComponent", "context", "eventListenerElements", "eventListenerElement", "eventName", "action", "delegate", "DomUtils", "target", "piecesTranslations", "renderPieceTitle", "lang", "name", "color", "title", "collectionMutationMethods", "registry", "Observe", "_Observe", "object", "functionName", "callback", "removes", "functionNameItem", "remove", "registryObject", "originalMethod", "functionArguments", "callbackReturn", "returnValue", "params", "propertyName", "propertyNameItem", "isCollection", "property", "mutationMethods", "newValue", "oldValue", "methodName", "methodArguments", "observer", "ChessConsoleState", "props", "Chess", "COLOR", "callback", "methodName", "Observe", "params", "CONSOLE_MESSAGE_TOPICS", "ChessConsole", "UiComponent", "context", "player", "opponent", "props", "state", "ChessConsoleState", "COLOR", "colSets", "resolve", "I18n", "piecesTranslations", "MessageBroker", "innerHTMLElement", "DomUtils", "requestNextMove", "FEN", "playerToMove", "move", "playerMoved", "moveResult", "wonColor", "ChessConsolePlayer", "chessConsole", "name", "fen", "moveResponse", "LocalPlayer", "ChessConsolePlayer", "chessConsole", "name", "props", "fen", "squareFrom", "squareTo", "callback", "tmpChess", "Chess", "move", "moveResult", "possibleMoves", "possibleMove", "event", "moveResponse", "gameFen", "INPUT_EVENT_TYPE", "result", "CONSOLE_MESSAGE_TOPICS", "color", "COLOR", "eventFromPremovesQueue", "premove", "MARKER_TYPE", "Markers", "Extension", "chessboard", "props", "EXTENSION_POINT", "Svg", "event", "INPUT_EVENT_TYPE", "marker", "markerGroup", "point", "transform", "spriteUrl", "markerUse", "transformScale", "type", "square", "Marker", "markersFound", "Utils", "CoreUtils", "_CoreUtils", "callback", "wait", "immediate", "timeout", "args", "debounced", "target", "source", "isObject", "obj", "key", "resolve", "reject", "promise", "_resolve", "_reject", "DISPLAY_STATE", "PROMOTION_DIALOG_RESULT_TYPE", "PromotionDialog", "Extension", "chessboard", "EXTENSION_POINT", "Svg", "square", "color", "callback", "piece", "point", "squareWidth", "squareHeight", "squareCenterPoint", "turned", "rank", "COLOR", "offsetY", "offsetX", "dialogParams", "PIECE", "event", "displayState", "Utils", "translations", "Accessibility", "Extension", "chessboard", "props", "piecesTranslations", "container", "MovePieceForm", "BoardAsTable", "PiecesAsList", "BrailleNotationInAlt", "extension", "EXTENSION_POINT", "pieces", "listW", "listB", "piece", "pieceName", "altText", "Utils", "evt", "INPUT_EVENT_TYPE", "squares", "ranks", "files", "COLOR", "html", "rank", "x", "y", "pieceCode", "color", "name", "renderPieceTitle", "AutoBorderNone", "Extension", "chessboard", "props", "EXTENSION_POINT", "newBorderType", "CONSOLE_MARKER_TYPE", "Board", "UiComponent", "chessConsole", "props", "resolve", "DomUtils", "params", "animated", "Observe", "FEN", "PromotionDialog", "ChessConsoleMarkers", "AutoBorderNone", "CoreUtils", "Accessibility", "Chessboard", "CONSOLE_MESSAGE_TOPICS", "message", "to", "lastMove", "kingSquare", "playerMove", "COLOR", "Markers", "event", "board", "moves", "INPUT_EVENT_TYPE", "move", "GameStateOutput", "UiComponent", "chessConsole", "chess", "html", "PIECES", "ChessRender", "san", "color", "COLOR", "lang", "mode", "pieces", "str", "replacementsObj", "ignoreCase", "retStr", "flags", "needle", "History", "UiComponent", "chessConsole", "props", "Observe", "DomUtils", "event", "ply", "history", "sanWhite", "sanBlack", "output", "i", "rowClass", "whiteClass", "blackClass", "moveWhite", "ChessRender", "COLOR", "moveBlack", "$ply", "zeroWithSpace", "CapturedPieces", "UiComponent", "chessConsole", "Observe", "DomUtils", "event", "ply", "capturedPiecesWhite", "capturedPiecesWhiteAfterPlyViewed", "capturedPiecesBlack", "capturedPiecesBlackAfterPlyViewed", "history", "pointsWhite", "pointsBlack", "move", "index", "pieceCaptured", "pieceHtml", "PIECES", "outputWhite", "outputBlack", "capturedPieces", "capturedPiecesAfterPlyViewed", "points", "output", "HistoryControl", "UiComponent", "chessConsole", "props", "i18n", "Observe", "COLOR", "$playIcon", "$stopIcon", "Persistence", "Component", "chessConsole", "props", "CONSOLE_MESSAGE_TOPICS", "prefix", "COLOR", "e", "valueName", "item", "value", "audioContext", "mainGainNode", "events", "addEventListeners", "event", "resumeAudioContext", "removeEventListeners", "Audio", "gain", "Sample", "src", "props", "Audio", "gain", "when", "offset", "duration", "source", "resolve", "reject", "request", "audioBuffer", "AudioSprite", "Sample", "sliceName", "when", "slice", "Sound", "Component", "chessConsole", "props", "AudioSprite", "CONSOLE_MESSAGE_TOPICS", "data", "chess", "flags", "soundName", "Modal", "props", "i", "self", "cssClass", "modalInstance", "footer", "key", "buttonText", "modal", "NewGameDialog", "module", "props", "i18n", "newGameColor", "modal", "event", "color", "COLOR", "GameControl", "UiComponent", "chessConsole", "props", "i18n", "NewGameDialog", "ENGINE_STATE", "EngineRunner", "props", "fen", "LEVELS", "StockfishRunner", "EngineRunner", "props", "resolve", "listener", "event", "line", "ENGINE_STATE", "match", "score", "tmpScore", "move", "fen", "timeoutPromise", "calculationPromise", "values", "cmd", "StockfishNewGameDialog", "chessConsole", "props", "i18n", "newGameColor", "modal", "event", "$form", "color", "level", "html", "currentLevel", "levels", "LEVELS", "i", "selected", "StockfishGameControl", "GameControl", "StockfishNewGameDialog", "BookEntry", "bookdata", "ofs", "key", "i", "byt", "raw_move", "weight", "learn", "Book", "idx", "weed", "i0", "i1", "ky", "lst", "e", "random64", "KeyGenerator", "bn", "the_size", "hex", "weed", "num", "str", "col", "row", "arr", "rows", "i", "j", "r", "fenstring", "hash", "fen", "Polyglot", "url", "resolve", "book", "KeyGenerator", "bookEntry", "move", "files", "promoPieces", "fen", "weightPower", "hash", "bookEntries", "moves", "weightSum", "reject", "response", "blob", "reader", "Book", "PolyglotRunner", "EngineRunner", "props", "Polyglot", "ENGINE_STATE", "fen", "timeoutPromise", "resolve", "calculationPromise", "moves", "propabilityMatrix", "move", "i", "luckyIndex", "values", "StockfishPlayer", "ChessConsolePlayer", "chessConsole", "name", "props", "StockfishRunner", "PolyglotRunner", "ENGINE_STATE", "CONSOLE_MESSAGE_TOPICS", "score", "data", "Observe", "fen", "moveResponse", "nextMove", "newScore", "StockfishStateView", "UiComponent", "chessConsole", "player", "props", "i18n", "Observe", "ENGINE_STATE", "event", "newScore", "scoreFormatted", "score"]
}
